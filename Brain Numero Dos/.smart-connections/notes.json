{
  "UNI 2022": {
    "MTRN2060": {
      "Actuators.md": "#MTRN/2060  #Circuits \n[[UNI 2022/MTRN2060/Attachments/Solenoid technical application sheet.pdf]]\n[[UNI 2022/MTRN2060/Attachments/Stepper Motor Drivers.pdf]]\n![[UNI 2022/MTRN2060/Attachments/MTRN2060 Actuators V2.pptx]]\n# Common Actuators\n•DC Motors (PM, separately wound, shunt and series)\n•Hobby servos\n•Solenoids\n•Stepper Motors\n•Induction motors\n•Brushless DC Motors\n•Hydraulics\n•Pneumatics\n\n# Types of DC Motors\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221029214526.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221029214533.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221029214542.png]]\n\n•Permanent Magnet Direct Current (PMDC) motors are most common\n\n•Replace permanent magnet with another coil to get a separately wound DC motor\n\n•Connect the two windings in parallel to get a DC shunt motor with a flatter torque speed curve\n\n•Connect the two windings in series to get a DC series motor with a very steep torque speed curve.\n\n## Example of DC Series Motor\n•The starter motor for an internal combustion engine is a DC series motor. It delivers very high torque at low speed and requires very large current\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221029215153.png]]\n# Hobby Servos\nServo implies that the motor is intended for use with closed loop control\n\n•Comprised of a small motor (1), gearbox (2), position sensor i.e. turnpot (3) , and motor control electronics (4)\n\n•3 wire connection (GND, +5V, Signal)\n\n•Signal is a special type of PWM, neutral position is a 1.5 ms pulse.\n\n•Middle pin is 5V to prevent reverse connection and “smoke”\n\n•~180 degree type\n\n•Simple closed loop proportional feedback controls position.\n\n•Output shaft connect to a potentiometer. Resistance compared to drive signal. Difference generates error -> drive signal.\n\n•Continuous rotation\n\n•Disconnect the feedback control (no pot) so a command to go to 30 degrees will just turn the motor, probably at full power. (cheap geared motor). Can easily modify a normal servo to do this.\n\n•Full turn and multi turn Servos\n\n•Have feedback control using a multi-turn pot or geared pot. PWM format limits total information out. So you sacrifice accuracy for range. (Sail Winch Servo)\n\n•Servo Speed is a function of gearing. Faster response time means lower torque\n\n# Solenoids and Relays\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003634.png]]\n•Solenoids and relays contain a sliding steel shuttle surrounded by a yoke and electromagnet.\n\n•Consider the magnetic circuit of a solenoid, like that shown at right.\n\n•Let’s take a simple analysis of the: ignore the fixed sliding gap lg and ignore fringing:\n\n$$R=4x/(μ_o πd^2 )+R_{steel}$$\n\n$$B=mmf/AR=4Ni/(πd^2 ) (1/(4x/(μ_o πd^2 )+R_{steel} ))=(4μ_o Ni)/(4x+ μ_o πd^2 R_{steel} )$$\n\n•The amount of magnetic field in the circuit is (approximately) inversely proportional to the distance x.\n\n•Where does the force come from since there is no BiL?\n\n# Energy Stored in a Magnetic Field\nTo understand the force in a solenoid, or even the force between a magnet and the fridge, recall that magnetic fields store energy. The energy density (energy per unit volume) stored by a magnetic field is:\n\n$$u=1/2  B^2/μ_o$$\n\nIf we assume the magnetic field in the gap is uniform, then the total energy stored by the magnetic field in the gap is the energy density times the volume of the gap:\n\n$U=1/8  (B^2 πd^2)/μ_o  x= (πd^2 x)/8μ_o  ((μ_o Ni)/(4x+μ_o πd^2 R_{steel} ))^2=(πμ_o (dNi)^2)/32  x/(x^2+2Cx+C^2 )$\n\nWhere $C=(μ_o πd^2 R_{steel})/4$\n\nFor small values of x, the equation simplifies to: $U=(π〖μ_o (dNi)〗^2)/32  x/C^2$\n\nYou can see that the potential energy stored in the magnetic field increases with x (gap between plunger and yoke). If the potential energy (U) of an object changes with position, then there is a force on that object. Think of a spring, or a rollercoaster.\n\nThis force is equal to the negative gradient of potential energy :\n\n$$F=-dU/dx$$\n\nThis is a fundamental principle in physics\n\n# Force In a Solenoid\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003641.png]]\n•The force acts to close the gap\n\n•The force gets much stronger as the gap gets smaller\n\n•These features are the same for any magnetic attraction.\n\n•This is called a variable reluctance force and is present any time that movement changes the reluctance of a magnetic circuit.\n\n•Stepper motors, solenoids and Brushless DC motors are variable reluctance machines and do not rely on the BiL force.\n\n[http://www.youtube.com/watch?v=hsoggQOoG4s](http://www.youtube.com/watch?v=hsoggQOoG4s)\n#Video \n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003743.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003749.png]]\n•Solenoids are very common because of cost (1/4 to 1/10 the of DC motors).\n\n•Solenoids can be push or pull type, but in either type there is always an iron rod being pulled into a coil.\n\n•Example Force vs Stroke profile shown to the right. The shape of the curve is affected by the steel yoke and back-stop design.\n\n•Most solenoids cannot be energized at full voltage for long due to high currents and overheating\n\n•Solenoids are the basis of electrically switched liquid and air valves\n\n•Solenoids are the basis of electrical relays\n\n•Solenoids are modelled as an inductor in series with a resistor\n\n# Stepper Motors\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003822.png]]\n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003827.png]]\n\nTwo or three sets of magnetic coils align a rotor containing a permanent magnet in a particular position\n\n•The average speed is set by the frequency of changes\n\n•Can rotate in both directions and move in precise angular increments\n\n•Can sustain a holding torque at zero speed\n\n•Controlled by digital circuits and benefit from a special driver\n\n•Open loop control, no encoder, no feedback (simple)\n\n•Stepper motors do not spin smoothly.\n\n•The vast majority of steppers are so-called Hybrid Stepper Motors\n\n## Hybrid Stepper Motors\n[http://www.youtube.com/watch?v=bngx2dKl5jU](http://www.youtube.com/watch?v=bngx2dKl5jU)\n#Video \n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030003926.png]]\n\n# Introduction and Performance Characteristics\nSometimes called Reluctance motors because torque is produce by minimizing reluctance in a magnetic circuit, much like a solenoid (not BiL torque)\n\nShaft rotates in discrete steps\n\nPopular because\n\n•easy control with a microcontroller\n\n•good open loop position control (where most motors have inherent speed control)\n\nTorque and power density are similar to conventional motors, but maximum speeds are lower.\n\nOne full step angle is typically 1.8o  or 360/200\n\nRange in size from 50 grams to about 2 kg\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004007.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004012.png]]\n\n## 200  Step/rev Hybrid Motor\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004138.png]]\n•8 poles each with a coil, each with 5 teeth, running the length of the motor. Some motors have 6 teeth per pole (as per video).\n\n•Rotor has two steel end caps, each with 50 teeth. The caps are offset so that only 1 set of teeth line up a time, minimizing detent.\n\n•Every time a set of teeth (pole 1&5 for example) are aligned there is a stable equilibrium and we feel a detent.\n\n•Each end cap has detents before moving one full tooth position. The two end caps give 8 stable positions in advancing 1 tooth. 50 teeth on the rotor x 8 positions gives 200 steps per rev.\n\n•8 coils are connected to form two-phase windings (A&B, odds and evens). Switching the current from +A to -B will increment one step (1/8th of one tooth position) forward. +A to +B will increment backward. (4 wires)\n\n•The need to energize the coils + and – means we need a bipolar supply, hence the term bipolar stepper motor.\n\n•An alternate set of windings can achieve the same thing without a bipolar supply. 4-phase, not two, and 6 or 8 wires are now needed.\n\n# Stepping\n•We have seen single stepping: +A,-B,-A,+B,+A, where only one phase is energized at a time.\n\n•By energizing +A and –B at the same time, the rotor’s stable position is half a step forward. This increases the holding torque, provides more position resolution and produces smoother shaft rotation. Both phase currents must be exactly equal to accurately half-step.\n\n•By delivering unequal phase currents we can mini-step, delivery ¼ stepping, 1/8 stepping, 1/16th stepping an so on.\n\n•Specialized stepper motor drivers measure and control current to do this micro-stepping.\n\n# 3 Types of Drivers\n•Constant voltage drives: Due to circuit inductance and long time constant, they cannot deliver the necessary current to achieve good torque at high speed.\n\n•Current forced drives incorporate a resistor. The resistor allows for a higher drive voltage to be used. This reduces the time taken to reach maximum torque. The resistor prevents the steady state current from being too high.\n\n•Constant Current or Chopper Drives monitor current and throttle a high supply voltage to get the current to the required level and keep it there. MOST POPULAR - LOW COST \nExample: [http://www.schmalzhaus.com/EasyDriver/](http://www.schmalzhaus.com/EasyDriver/)\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004307.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004311.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004316.png]]\n\n# Torque VS Speed\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030004424.png]]\n•Constant current or chopper drives have much better torque at high speed, and are more efficient than just adding a current limiting resistor.\n\n# Induction Motors\n•Induction motors are the workhorses of the electrical world.  At least half of all electricity that is generated goes to these machines.\n\n•They are supplied with single-phase (2 wire) or 3-phase ( 3 wire) AC electricity\n\n•Their speed is always close to, but never more than the frequency of electricity supplied.\n\n•Like a PMDC motor, if you increase the load, they slow down\n\n•Most commonly medium (2 kg) to large (>20 kg)\n\n•You will study these in more detail in MTRN3026\n\n# Brushless DC Motors\n•A DC source is electronically pulsed to drive various windings in time.\n\n•Speed is determined by frequency and pulse timing\n\n•Speed controller is essential and typically uses some sort of feedback to decide when to fire particular phases to ensure appropriate timing.\n\n•May use variable voltage and variable frequency\n\n•More efficient than PMDC because electronic commutation can be made very efficient and no brush firction.\n\n•Can have much higher power density than PMDC.\n\n•Produce no sparks and much less Electromagnetic Interference (EMI)\n\n•Can cool the coils with a heat sink, meaning no air cooling (Fan) and internal dust collection.\n\n•Longer life\n\n•Higher cost because of control electronics.\n\nNice example of an unusual home-made BLDC motor\n[http://www.youtube.com/watch?v=Kudzft19coo](http://www.youtube.com/watch?v=Kudzft19coo)\n\n# Hydraulics\n•Fluid (usually oil) is pumped to and from linear actuating cylinders or gear motors. Supports very high pressure.\n\n•Valves control where fluid goes and there fore which things move\n\n•Commonly used on large machinery to generate large forces\n\n# Pneumatics\nClean, dry and lubricated air under pressure (~10 atm) is used to move machine elements.\n\nElectrically controlled valves are most common today.\n\nMost actuators are linear cylinders, but rotation and pinch/grip actuators are also common\n\nCommonly used on small-medium factory settings\n\nTwo major companies in this sector are Festo and SMC",
      "Second Order Systems.md": "#MTRN/2060  #Circuits \n[[UNI 2022/MTRN2060/Attachments/MTRN2060 Second Order Systems.pptx]]\n\n# What is a System Response?:\nA typical simple system has one input and one output.\n\nExamples (input: output)\n\t•Amplifiers from last week (input Voltage: output Voltage)\n\t•A to D converter (input voltage: 10 bit digital level)\n\t•DC motor (input Voltage: motor speed, or motor position)\n\t•DC motor (load torque: motor speed)\n\t•Vehicle suspension (road surface: vehicle height)\n\t•Electric guitar pickup (string vibration: electrical signal)\n\t•Vehicle steering (steering wheel angle: tire angle, direction of vehicle travel)\n\t•Vehicle throttle (gas pedal position: air valve position, motor torque, speed, power)\n\nIn nearly all cases we can describe the system response by asking two questions:\n\t•How does it respond to a step change in input?\n\t•How does it respond to an oscillating input of different frequencies?\n\n# System Analysis and Modelling:\nMany mechatronic systems can be modelled as linear ordinary differential equations\nMany are generally non-linear, but linear over a limited range.\nConsider the order of a system\n\n•A zero order system has gain or sensitivity. No time delay or distortion Out = Gain x In\n\t•The voltage at some point in a circuit containing DC sources and resistors can be written as an equation with no time dependence.\n•Can you describe a zero-order mechanical system?\n\n\n•A first order system has time delay, typically described by a single exponential.\n•A second order system has time delay, and is capable of oscillation in response to a non-oscillating input. It has a restoring force and a damping force.\n\n# First Order System:\n![[UNI 2022/MTRN2060/Attachments/FirstOrderSystem.png]]\n\nConsider an RC circuit:\n$$Vc=Vout$$\n$$i_c=C(dV_{out})/dt$$\n$$KVL: V_in=iR+V_out$$\n$$V_out=V_in-RC (dV_out)/dt$$$$(dV_out)/dt=V_in/RC-1/RC V_out$$\n\nThis is a first order differential equation of the form:\n$y^′ (t)=a-by(t)$\n\nIn words: the derivative of the function is the function (with some constants)\n\nOne way to solve this type of problem is to guess a solution and see if you can make it work.\n\nA function that has this key property (derivative of the function is the function) is an exponential:\n$y(t)=A+Be^(-t∕τ)$\n\nFor our purpose:   $V_{out}(t)=A+Be^(-t∕τ)$\nWe can derive:   $V_{out}^′=-B/τ e^(-t∕τ)$\n\nCombine these two to eliminate the exponential:\n$V_{out} (t)=A-τV_{out}^′$\n\nCompare this to our original equation from KVL:\n$V_{out}=V_{in}-RC (dV_{out})/dt$\n\nWe can see that $A = V_{in}$ and $τ = RC$\n\nTo find B we need to use the state of the circuit at t=0. Lets assume that the capacitor was discharged at t=0. The only way to get $V_{out}=0$ at t=0 is for B = -A and\n\n$V_{out} (t)=V_{in} (1-e^(-t∕RC) )$\n\n![[UNI 2022/MTRN2060/Attachments/UnitStepInputFirstOrder.png]]\n\n•All first order systems have a time constant (t) and respond to a step function with a single exponential decay or rise.\n\n•Time constants describe the characteristic speed of a response. 63% of steady state after 1t. 98% of steady state after 4t\n\n•Observing the step response of a system is usually much easier than modelling the system and solving equations, but can give similar information.\n\n**Second Order Systems:**\n•Second order systems are ubiquitous and all engineers must understand the basics. They are called 2nd order because they contain a second derivative\n\n•Many systems can be simplified to an ordinary linear 2nd order differential equation such as the spring-mass-damper.\n\n•Which is characterized by damping ratio z and resonant or natural frequency WN.\n\n•Gravity, mass and friction are all that is required.\n\n•Consequences of not grasping these ideas: [Tacoma Narrows bridge resonaces driven by wind](https://www.youtube.com/watch?v=lXyG68_caV4)\n#Video \n\n# Natural Frequency\n$$W_o = √(k/m)$$\n\n$W_o$ = Natural Vibration Frequency\nk = Restoring Force\nm = Mass\n\n# Damping Ratio\n$$z =B/(2√km)=B/B_c$$\nWhen $z$ = 1, the system is critically damped. The fastest possible settling without overshooting.\n\n# Damped Frequency\n$$w_d =ω_n √(1-z ^2 )$$\n# Frequency Response of a System\n•To determine the frequency response of a linear system, we apply sinusoidal inputs and measure the output amplitude.\n\n•After a short period a transience, a constant sinusoidal output will result. The output will have a different phase and amplitude from the input, but the same frequency.\n\n•Plotting this resulting amplitude and phase versus frequency gives Bode Plots. These Bode Plots (log/log) for amplitude give important information.\n\n•They can be mathematically determined from the differential equations using Laplace transforms.\n\n•This gives the “Transfer Function” which gives the output amplitude versus frequency\n\n•Combining this with our understand of Fourier series allows us to see how any time varying signal will be measured, affected, or amplified by a system.\n\n•We will not solve these problems here, but you must know the characteristics of a first and second order system\n\n## Frequency Response of 2nd Order System\n\nAmplitude:\n![[UNI 2022/MTRN2060/Attachments/SecondOrderSystemAmplitudeResponse.png]]\nUnderdamped systems (z <<1) can destructively resonate around their natural frequencies. Identifying and eliminating resonances in machines such as helicopters and cars is very important.\n\n\nPhase:\n![[UNI 2022/MTRN2060/Attachments/SecondOrderSystemPhaseResponse.png]]Note z = 0.707 gives best approximation of phase linearity and the best amplitude linearity over the largest bandwidth. Amplitude linearity is important for passing information (signals)\n\n\n# Example Questions:\n![[UNI 2022/MTRN2060/Attachments/ExampleInstrument.png]]\n1. A scientific instrument needs to be isolated from external vibrations. The scientists have located the instrument in the basement of the building and have suspended the small measurement unit on a 500 g block of copper from three vertical springs. Each spring has a constant of 1 N/cm and is 20 cm long when hung.\n\n  a) Identify two resonant modes and give their frequencies. A third exists, but the resonant frequency is harder to calculate\n\n  b) For improved vibration isolation would you increase or decrease the resonant frequencies. \n\n  c) I helped build a scanning tunnelling microscope like this at the University of Alberta. Directly underneath the copper block we had an array of strong magnets.  Why would we have done that?\n\nAnswers\n\na)  If all three springs extend at the same time, then the block will vibrate up and down at a resonant frequency given by sqrt(k/m). k= 3 N/cm or 300 N/m. m=0.5 kg. w=sqrt(300/0.5) = 24.5 rad/s = 3.9 Hz\n\n    If the block swings like a pendulum without the springs changing in length, it will swing with an angular frequency  of sqrt (g/L) = sqrt(9.8/0.2)=7 rad/s = 1.1 Hz.\n\n   Another mode of vibration is twisting, where the block spins about a vertical axis.\n\nb) Everything vibrates. Every passing car, and person sends vibrations through buildings. We don’t want these to couple into the measurement device. Second order systems have a low amplitude response to frequencies above their natural frequencies (see previous slide). By lowering the natural frequencies you can block vibration across a larger range.\n\nc) The magnets provide eddy current damping to the nearby copper block. This effect converts mechanical movement into heat and works well for good electrical conductors like copper.\n\n# Knowledge from practice quiz\n\n*Many automotive suspensions use a vertically mounted spring and damper like that shown below. Here the total vehicle weight is 900 kg (equally distributed among the 4 wheels), and each spring has a coefficient of 20000 N/m. \n\nWhat is the natural or resonant frequency of the vehicle?\n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221103171813.png]]\nSelect one:\n\na. 9.5 rad/s\n\n**b. 9.4 rad/s**\n\nc. 4.8 rad/s\n\nd. 4.7 rad/s\n\n\n*Many automotive suspensions use a vertically mounted spring and damper like that shown below. Here the total vehicle weight is 1100 kg (equally distributed among the 4 wheels), and each spring has a coefficient of 25000 N/m. \n\nWhat is the natural frequency of each suspension system? \n\n![](https://ilearn.mq.edu.au/pluginfile.php/8003101/question/questiontext/11758430/3/36082733/Untitled.png)\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221103171915.png]]\n\nSelect one:\n\na.4.8 rad/s\n\nb.9.4 rad/s\n\nc.4.7 rad/s\n\n**d.9.5 rad/s**\n\n\n*When analyzing a second order system we may wish to determine the step response and/or the frequency response. Match the measured parameter to the appropriate response.\n\nAmplitude Ratio or Gain - Frequency Response\n\nSettling time - Step Response\n\nPhase angle - Frequency Response \n\nResonance point - Frequency Response\n\nSteady State Value  - Step Response\n\nOvershoot - Step Response\n\n\n\n*What are the characteristics of a critically damped 2nd order system\n\nSelect one:\n\na. damped natural frequency that is greater than the resonant frequency\n\nb. fastest possible settling with overshoot\n\n**c. fastest possible settling with no overshoot**\n\nd. damping constant equal to resonant frequency\n\n\n\n*A mechanical system is found to resonate at 350 Hz for long durations after a step response input. Some damping is added to reduce the amplitude of the oscillations, and now the system is found to oscillate at 180 Hz for much less time. What is the damping ratio ζ?\n\nSelect one:\n\n**a. 0.86\n\nb. 0.51\n\nc. 0.73\n\nd. 0.71\n\n\n*Many automotive suspensions use a vertically mounted spring and damper like that shown below. Here the total vehicle weight is 900 kg (equally distributed among the 4 wheels), and each spring has a coefficient of 20000 N/m. \n\nWhat damping constant is required for critical damping? \n\n![](https://ilearn.mq.edu.au/pluginfile.php/8003101/question/questiontext/11739701/3/36082734/Untitled.png)\n\nSelect one:\n\na. 10.5 kNs/m\n\nb. 5.2 kNs/m\n\nc. 8.5 kNs/m\n\n**d. 4.2 kNs/m\n\n\n*A second order system is observed to oscillate briefly after a step input. The oscillation occurs at a rate of 1.9 Hz. The mass of the system is 1 kg and the spring constant is 256 N/m. What is the damping ratio?\n\nEnter answer to 2 decimal places.\n\nAnswer: 0.67",
      "Sensors.md": "#MTRN/2060  #Circuits #Logic \n[[UNI 2022/MTRN2060/Attachments/amt10_v-1775837.pdf]]\n[[UNI 2022/MTRN2060/Attachments/EE-SX1042.pdf]]\n[[UNI 2022/MTRN2060/Attachments/HLMP  LED Datasheet.pdf]]\n![[UNI 2022/MTRN2060/Attachments/MTRN2060 Sensors.pptx]]\n# Simple Electromechanical Sensors:\n•Proximity sensors and switches\n•Potentiometers\n•Linear Variable differential transformers\n•Optical encoders\n•Strain gages\n•Load cells\n•Accelerometers\n•Gyroscopes\n•Pressure and flow sensors…\n\n# Switch Bounce\nhttp://video_demos.colostate.edu/mechatronics/switch_bounce.wmv\n#Video\nSwitches always have the potential to bounce. Your CPU may check the state of the switch many times during the bounce. Circuits and code an accommodate this preventing a single switch throw from being read as a bunch of switches.\n\n# Gray Code:\n![[UNI 2022/MTRN2060/Attachments/GreyCode.png]]\n\n# Binary Code:\n![[UNI 2022/MTRN2060/Attachments/BinaryCode.png]]\n\n# Accelerometer and Gyroscope:\n•Modern ones are tiny vibrating pieces of silicon or other crystal.\n\n•Accelerometer measures change in speed. Accelerometers also measure gravity.\n\n•Ideally a gyro measures absolute tilt. Vibrating gyros really measure changes in tilt. To get absolute tilt you need to integrate the small changes.\n\n•Typically drones and some cell phones have both and use data from both to quickly determine absolute tilt in noisy environments like a vibrating helicopter.\n\n**Temperature Measurement**:\n•Bimetallic Strip: two strips of metal with different thermal expansion coefficients. Bend when heated.\n\n•RTD (Resistance Temperature Device): Typically a platinum wire. It gets more resistive with temperature. Can operate over -220C to 750C!\n\n•Thermistor: Semiconductor device whose resistance decreases exponentially with temperature. Highly accurate (0.01C) over a narrow T range.\n\n•Thermocouple: produces a voltage proportional to the difference in temperature between to dissimilar metal junctions. Easy to use with long lead wires, typically +/- 1C accuracy.\n\n•Thermopile: a bunch of thermocouples in series to increase the voltage\n\n•Semiconductors: Uses the temperature dependent gain of a BJT (what we have for the lab). ESD sensitive, not easy to make good thermal contact. Cheap.\n\n# Light Measurement\n•Phototransistors: silicon solar cell acts as the base in a BJT. Infrared remote controls. cheapish, large dynamic range. Sensitive in near infrared (900 nm), fast (5 us)\n\n•Photodiode: Same as Photovoltaics. Light generates a small amount of current. If small, then need a measurement circuit.\n\n•Photoresistor: A high resistance semiconductor. CdS resistor gets less resistive when illuminated. Sensitive in the visible range (green), cheap, slow (20 ms)\n\n•CMOS detector: An array of photodiodes. In most cell phone cameras. Can be integrated into normal silicon process,\n\n•CCD detector: Usually higher sensitivity than CMOS, made on separate chips.\n\n•Color detection can be done using colored glass or interference filters over semiconductor detectors like photodiodes.\n\n# Practice Quiz Questions\nThis sensor typically has 4 wires, often marked 5V, GND, A, B. What type of sensor is it likely to be?\n\n**a. Relative encoder\n\nb. Turnpot\n\nc. Hall effect sensor\n\nd. photoemitter-detector pair\n\ne. Absolute encoder\n\nf. Linear Variable differential transformer\n\n\n\nWhat is a typical amount of time for switch bounce to settle?\n\nSelect one:\n\na. 500 ms\n\n**b. 500 us**\n\nc. 500 ns\n\n\n\n",
      "Strain Gauges and Op-Amps.md": "#MTRN/2060 #Circuits \n![[UNI 2022/MTRN2060/Attachments/MTRN2060 Strain Gauges and Amplifiers.pptx]]\n\n**Stress (s)**: The instantaneous load applied to a specimen divided by its cross sectional area before any deformation. SI unit (MPa).\n\n$σ = F/A$\n\n**Strain (e)**: The change in gauge length of a specimen (in the direction of applied stress divided by its original gauge length.\n\n$ε = ΔL/L_{original}$\n\n**Young's Modulus**: Modulus of elasticity, the slope of the stress-strain graph.\n\n$E(GPa) = Stress/Strain$\n\n**Poisson's Ratio**: Under Tensile stress, a material may contract in the perpendicular direction. The ratio of length change in lateral to axial directions or ratio of lateral to axial strain is Poisson’s Ratio.\n\n$v=-ε_{lateral}/ε_{axial}$\n\n# Elastic VS Plastic Deformation:\n![[UNI 2022/MTRN2060/Attachments/StressStrain.png]]\n\n## Strain Gauges and Gauge Factor:\n![[UNI 2022/MTRN2060/Attachments/StrainGauge.png]]\n\nGauge Factor relates resistance to strain in order to determine force applied to the strain gauge given a known area.\n\n$ϵ_{axial}=(∆R∕R)/F$\n\nWhere:\nR = Resistance (Ohms)\nF = Gauge Factor\n\n# Strain Gauge Circuits:\nWheatstone bridge:\n![[UNI 2022/MTRN2060/Attachments/Wheatstone.png]]\n\nR2 and R3 are high precision resistors of equal value.\nR4 is high precision pot. Adjust pot until VA = VB\n\n![[UNI 2022/MTRN2060/Attachments/Strain Gauge.png]]\n\nAbove is a simple strain gauge, which relates force to resistance.\n\n# Load Cells:\n•Calibrated strain gauges bonded to a deformable material.\n•Use Hooke’s Law s=Ee to convert strain to stress to force. E is modulus of elasticity\n•Used in scales and test equipment such as the one you will use in lab.\n![[UNI 2022/MTRN2060/Attachments/LoadCells.png]]\n\n# Operational Amplifiers - Op Amps:\n\n•We use Op-Amps for analog signal processing, the first step before A to D conversion\n\n•If you tried to use the A2D converter on the Arduino to measure Vout your scale would have very poor resolution.\n\n•Mostly for acquiring signals that may be\n\t•too small,\n\t•too noisy\n\t•have an offset or\n\t•not be in the right format\n\n•We will only consider the ideal Op-Amp, which is not the same as the real Op-Amp\n\n![[UNI 2022/MTRN2060/Attachments/Op Amp.png]]\n![[UNI 2022/MTRN2060/Attachments/OpAmp2.png]]\n## The Ideal Op Amp\n\n1. Infinite input impedance: I+ = I- = 0\n2. Infinite gain Vout = Gain(V+ - V-), therefore V+ = V- in negative feedback\n3. Zero output impedance\n\n# Inverting Amp: \n#Video \n[https://youtu.be/vjY4ikMxwGw](https://youtu.be/vjY4ikMxwGw)\n![[UNI 2022/MTRN2060/Attachments/InvertingAmp.png]]\n\n# Non Inverting Amp:\n#Video \n[https://youtu.be/gjfCGhaMttc](https://youtu.be/gjfCGhaMttc)\n![[UNI 2022/MTRN2060/Attachments/NonInvertingAmp.png]]\n\n# Summer Amp:\n![[UNI 2022/MTRN2060/Attachments/Summer Amp.png]]\nSuperposition Principle: For a linear system, we can analyze the inputs separately and sum their results\n\n# Difference Amp:\n![[UNI 2022/MTRN2060/Attachments/Difference Amp.png]]\nWhen R1=R2=R,\n\n$V_{out}=Rf/R (V2-V1)$\n\nThis works alright for sources (V1 & V2) with low output impedance. But for sources that cannot supply much current we use an instrumentation amplifier. It uses 3 op amps and has very high input impedance.\n\n**Intrumentation Amplifier: INA125P**:\n•A standard difference amplifier does not have a high input impedance.\n\n•An instrumentation amplifier is a fancy difference amplifier.\n\n•An instrumentation amplifier is normally a monolithic IC containing resistors and op-amps. It has\n\n•very high input impedance\n\n•Large common mode rejection ratio (CMMR) (ratio of average gain to difference average gain. zero in theory).\n\n•Consistent bandwidth over a large range of gains.\n\n•Gain is typically set by an external resistor.\n\n•Getting a low CMRR is achieved by making the entire device on one chip and laser-trimming resistors to balance the gain of the + and – channels.\n\n•See INA125P example data sheet for gain equation, output range, CMRR, bandwidth.\n\n•See two examples of hacking a kitchen scale: pdf and [http://forum.arduino.cc/index.php/topic,192016.0.html](http://forum.arduino.cc/index.php/topic,192016.0.html)",
      "Digital.md": "#Logic #Circuits #MTRN/2060 \n[[UNI 2022/MTRN2060/Attachments/sn74hc595.pdf]]\n![[UNI 2022/MTRN2060/Attachments/MTRN2060 Digital.pptx]]\n\n# How do we Communicate in Mechatronics?\n•Analog communications can be voltage level or current level. A 4-20 ma current loop is a common analog communications system used in industry. To read an analog voltage we use an analog to digital converter.\n\n•Converting between analog and digital is really important in sending data. We must also consider the concept of sampling.\n\n•Pulses can convey information by their amplitude and/or their duration. (In what ways is like digital, in what ways is it no?)\n\n•Pulses can also encode binary information and form data packets\n\n•Really high clock speeds have enabled easy digital implementation with high data content.\n\n# A to D\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030215127.png]]\nNow that we have decided how fast to sample, we must Quantize and Code.\n\nThis is the next question. Bit depth & sample rate give the amount of data and the data transfer rate needed.\n\n# A to D: 2 Ways\n•**Successive Approximation** – Modify most significant bit, compare, and decide. Modify next bit, compare and decide, modify next bit, compare and decide, … modify LSB compare and decide. Used in Arduinos\n\n• takes nDT to decide on a value, 1 to 100 ms\n\n•What if input value changes?\n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030215310.png]]\n\n**Flash Converter** – Fast. Parallel comparator (AKA Direct Conversion). But requires 2n-1 comparators for n-bit precision. Impractical for more than 8-bit\n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030215442.png]]\n\n# A to D when the signal changes with time\n•If you want to create a digital record of a time-varying signal you must ask the question:\n\n–“How frequently do I need to record the value of the signal?”\n\n•This question was answered by founders of information theory and is commonly called the Nyquist–Shannon sampling theorem\n\n•It says that for any signal with a period of T is perfectly recorded when sampled at least 2 times every period. (a sample rate of 2/T). This is called the Nyquist rate\n\n•You will see later on in the unit that any signal can be represented as a linear sum of sin and cosine waves of different frequencies\n\n•Sampling below the Nyquist rate may result in [aliasing](http://www.youtube.com/watch?v=TKF6nFzpHBU). That is what is causing the strange effects seen in the video.\n\n•If you are interested in more than just “What is the value of the signal now?”, then you also need to consider the sampling rate\n\n---\nPulses that convey more than just binary information  \n~  \nPWM and Pseudo Analog\n\n---\n\n# analogWrite uses PWM (Arduino)\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030215635.png]]\n•Gets analogue results with digital means.\n\n•Easy to control and implement using high clock rates by switching on and off precisely.\n\n•Can define the period as you like.\n\n•Can be used for controlling power to a DC motor\n\n•Used to control LED intensity\n\n## servo library uses PWM differently\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030215720.png]]\n•PWM is a convenient way to send analog-like signals\n•The servo.h library creates a special type of PWM pulse.\n•The duration of the pulse tells the servo arm where to go.\n•#include <Servo.h>, myservo.write(val); where 0 ≥ val ≤ 180\n\n•The pulse-on time normally varies from just 1 to 2 ms. So the duty cycle is always low.\n•The low duty cycle allows 3 or 4 different control signals to be carried on the same waveform, and multiplexed to a common frequency for multichannel RC control.\n•In this scenario the first pulse might be throttle, the second might be steering, or for airplanes, it might be lifters, rudder or ailerons.\n\n# Binary Pulses for Digital Information\n•Digital devices or structures are categorized as combinational or sequential logic.\n\n–In sequential logic, the timing or sequencing history of pulses is used to determine the ouput.\n\n–in combinational logic, the output is defined by the instantaneous value of the inputs.\n\n**In this unit, you need to be comfortable with the binary number system**\n\n# Combinational Logic\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030220017.png]]\nCombinational logic converts binary to binary on mathematical logic rules. They are called gates.\n\nThey do not have memory, ie the outputs is a function of what is and not what was.\n\n> *A note about digital communications:* Bit: 1 or 0 Byte: 1 number, or letter. Typically 8 bits, but could be 32 or 64 bit on CPUs ASCII: 7 bit code for alphanumerics. Usually stored in an 8-bit byte.\n\n# Combinatorial Logic\n•Combinatorial logic circuits made from discrete semiconductor gates can be used instead of microcontrollers to achieve similar goals. Logic circuits may be cheaper and lower power.\n\n•Micro controllers can achieve similar aims though software-based logic structures. In this unit you should understand how to use AND, OR and NOT in the Arduino SDK.\n\n## Sequential Logic\n•The timing or sequencing of input signals determines the output. This requires some form of memory.\n\n•Devices include flip-flops, counters, monostables, latches and even microprocessors.\n\n•Sequential logic circuits usually respond to inputs only when a separate trigger signal transitions from one level to another. The trigger signal is usually referred to as the clock (CK)\n\n•We will examine one important example of a sequential logic device the D or digital Flip-Flop\n\n# Registers: 1 byte of short memory  D Flip Flops\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030220606.png]]\n\n•The D-flip-flop is created by 6 NAND gates. It has a clock and a data line.\n\n•Whenever the clock changes from low to high the data is sampled and held at Q until the next low-to-high clock change.\n\n•Q is the data output, Q ̅ is the inverted output.\n\n•A register is a collection of logic elements that each store 1 bit of information.\n\n•Registers store information in almost all digital sensors.\n\n# D Flip Flops\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030220748.png]]\nNotice that the D signal is sampled only at the rising clock edge. Changes at other times are ignored.\n\nThe device remembers the state of D until the next rising edge on the clock line.\n\n# Binary Counter and/or Frequency Divider\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030220915.png]]\n\n# Shift Register or Serial to Parallel Converter\n•In digital circuits, a shift register is a cascade of flip flops, sharing the same clock,\n\n• the output of each flip-flop is connected to the 'data' input of the next flip-flop in the chain\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221007.png]]\n\n> D-Flip Flop: The most common Latch. It has memory! Used in I2C\n\n## Shift Registers at work\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221127.png]]\n•[https://www.youtube.com/watch?v=6fVbJbNPrEU](https://www.youtube.com/watch?v=6fVbJbNPrEU)\n#Video \n\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221148.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221208.png]]\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221215.png]]\n\n# I2C\n•I squared C, inter-integrated circuit is a bus protocol for communication between a mother board and low speed peripherals.\n[http://www.youtube.com/watch?v=GJX0BRUagCg](http://www.youtube.com/watch?v=GJX0BRUagCg)\n#Video \n\n# I2C Sensor. How does it work?\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221432.png]]\n\n# Interrupts\n•Special pins on any microcontroller\n•A change of state (HIGH/LOW) triggers a high priority event, that runs immediately: Interrupt Service Routine (ISR)\n•Use when you absolutely cannot miss an event. Eg. Position control of a robotic arm.\n•If microcontroller is not paying attention and the position of a relative encoder changes, the system no longer has control of the arm. BAD!\n•Remember: Keep your ISR very brief. No delay, while, serial communication…\n•If interrupts are triggered too often, or they take too long, the rest of the program cannot run.\n\n# Quadrature Encoder + Interrupt\n•2 pulse trains that are 90 degrees out of phase allow you to determine direction\n\n•This is the key mechanism behind position control using an absolute encoder\n\n•Use an interrupt on A or B or A &B to make sure you don’t miss a change in position\n\n•Use a counter to keep track of the number of ticks moved.\n\n•How many counts per revolution on your encoder? What is the angular precision?\n![[UNI 2022/MTRN2060/Attachments/Pasted image 20221030221554.png]]\n\n# Example Questions\n#Examples \n1.Given a 12-bit A/D converter operating over a voltage range from -5 V to 5 V, how much does the input voltage have to change in order to be detectable?\n\n2.Modify the 2 bit A to D Flash converter from the notes to linearly encode a 0 to 3.3 V input.\n\n3.How many pull-up or pull-down resistors are needed to implement 4 different I2C sensors with an Arduino.\n\n4.What happens when pin 10 of a 74HC595 pin is pulled low?\n\n5.What happens when pin 13 of a 74HC595 pin is held high?\n\n6.Give a line or two of code to get an arduino to output a 5V square wave with a duty cycle varying from 0 to 100%. You do not need to use any delays. What is the frequency? What pins does this work on?\n\n7.Sketch the time-based output of pin 9 using the following code:\n\nvoid setup() {  myservo.attach(9);}\n\nvoid loop() {   myservo.write(20);}\n\n●",
      "DC Motors.md": "#MTRN/2060 #Circuits \n[[UNI 2022/MTRN2060/Attachments/motor and drive questions.docx]]\n[[UNI 2022/MTRN2060/Attachments/generic linear solenoid 1.pdf]]\n![[UNI 2022/MTRN2060/Attachments/MTRN2060 DC Motors.pptx]]\n![[UNI 2022/MTRN2060/Attachments/MagneticCircuits.png]]\n•The above is clearly a good magnetic circuit, but without conductors on the rotors we will not get torque.\n\n•Current carrying conductors around the rotor generate BiL force for each wire.\n\n$$Torque = Force*RotorRadius$$\n## Slotting\n![[UNI 2022/MTRN2060/Attachments/SlottedRotor.png]]\n•Conductors lying on the rotor increase the air gap, increasing reluctance and reducing the flux.\n\n•They also have to be secured to the rotor to transmit their force.\n\n•Slotting solves both of these problems.  While still allowing the conductors to cut the field lines (though it doesn’t look like it).\n\n•Now however we must balance current density (limited to 2-8 A/mm2) and flux density (limited to ~1.5 T). We want as much copper as possible and we want as much iron as possible.\n\n# Permanent Magnet Direct Current (PMDC)\n![[UNI 2022/MTRN2060/Attachments/PMDC Motor.png]]\n\n•electric current is directed through brushes and a commutator to coils on the rotor.\n\n•The rotor is comprised of magnetic steel with copper windings\n\n•A small air-gap exists between the rotor and the permanent magnets of the stator. A steel casing forms a yoke to complete the magnetic circuit.\n\n# Towards a Useful Mathematical Model: Consider an Elementary Motor\n![[UNI 2022/MTRN2060/Attachments/ElementaryMotor.png]]\nConductor has resistance R, carries a current I and moves with velocity v. The string is connected to a mass.\n\nAt v=0, what are the pulling force, current, electrical input power, and mechanical output power?\n\n•Force from gravity = mg\n\n•Force from magnetic field = BiL\n\n•At v=0, these forces must be equal: $mg=BiL$\n\n$i=mg/BL$\n\n•The electrical input power is \n$P_E=i^2 R=Vi$\n\n•The mechanical output power is 0.\n\nAt v=constant, what are the pulling force, current, electrical input power, and mechanical output power?\n\n•At v=constant, these forces must still be equal: mg=BiL\n\n$i=mg/BL$\n\n•But now work is being done. The electrical input power is $P_E=i^2 R$+mechanical output power\n\n•The mechanical output power = $mgv$\n\n$$Vi=i^2 R+mgv$$\n\n$$Vi=i^2 R+BiLv$$\n\n$$V=iR+vBL$$\n\n•This vBL term is the “back EMF” the is present whenever a motor spins.\n\n•We can create a simple equivalent circuit for the DC motor (ignores inductance)\n\n•This equivalent circuit is very useful for both understanding the DC motor and calculating operating parameters\n\n\n## Equivalent Circuit\n![[UNI 2022/MTRN2060/Attachments/EquivalentDCMotorCircuit.png]]\n\n•DC motors have a simple equivalent circuit, includes back emf: E.\n\n•If E is less than V, current will be positive and power will flow from electrical to mechanical form.\n\nE is proportional to speed, related by the electrical constant KE:\n\n$$E = K_E w$$\n\nThen:   $V_{applied} = RI + K_Ew$\n\nIf we spin the motor fast enough such that E is larger than V, then the current will reverse and mechanical power will be converted to electrical power. Called generating.\n\n\n## Mechanical Output Power\n![[UNI 2022/MTRN2060/Attachments/MotorOutputPower.png]]\n\n•Power supplied by V is conserved.\n\n•It goes to two places:\n\n$P_{in}=P_{out}$\n\n$Vi=i^2 R+Ei$\n\n$P_{in} = Heat_{out}+P_{mech}$\n\n$P_{mech}=Ei$\n\n$Torque×speed=P_{mech}=Ei$\n\n$τ×ω=Ei$\n\n$Torque * speed = back EMF * current$ (only true if using correct units: Nm times rad/s)\n\nTorque is proportional to current\n\nBack EMF is proportional to speed\n\n\n\n# The Ideal PM DC Model\n![[UNI 2022/MTRN2060/Attachments/IdealPMDCModel.png]]\n•The Back EMF (E) is proportional to speed (electrical constant)\n\n–KE = back EMF divided by speed\n\n–If we ignore friction then applied voltage divided by no load speed\n\n•The no load speed is the speed that the motor spins, when the back EMF equals the applied voltage.\n\n•The no-load speed is proportional to voltage.\n\n•No current will flow at no-load speed\n\n•Torque is proportional to current (motor constant or torque constant)\n\n–KT = Stall torque divided by stall current at any applied voltage\n\n•At stall, the back EMF is 0. Current is limited only by the terminal resistance (resistance of the copper windings).\n\n\n# PM DC Motor Torque Speed Curve\n![[UNI 2022/MTRN2060/Attachments/PMDC Motor Torque Speed Curve.png]]\n\n\n# Example Questions\n#Examples  \nUsing the example data sheet given a few slides back for a permanent magnet DC motor.\n\na) What is the stall torque in Nm?\n\nb) What is the stall current?\n\nc) What is the no load speed in Hz and rad/s?\n\nd) Determine the current, back EMF, and torque at half the no load speed?\n\ne) Estimate the efficiency at this speed.\n\nf) What is the torque constant KT and electrical constant KE? Be sure to give appropriate units. KT [Nm/A], KE [Vs/rad]"
    },
    "ENGG2000": {
      "Reflection Task - 4-11-22.md": "[[UNI 2022/ENGG2000/Attachments/2108_SPINE Professional Development Activities_v1.0.pdf]]\n\n1.  **Topic for reflection: What is the transferable skills/employability skill topic you will be reflecting on? Refer to the reflection/professional development pdf for suggested topics suitable to your year level.\n\nPerseverance, urgency and will to deliver, resourcefulness and flexibility\n\n2.  **STAR Recount: Using the common interview question structure: Situation, Task, Action, and Result (STAR) framework, recount what has happened that is related to your chosen topic of reflection. Be descriptive of the situation and be objective with the task and action you have taken to exemplify how you went about resolving the situation. For the Result section also be specific and objective with what some of the outcomes were from your action.\n\nDuring week 12, it was clear that the project was behind in both construction and assembly. Much of this was my fault due to poor communication skills and starting late on the construction of the circuit. Many of my team members were understandably caught up in other units and assignments, and as such were unable to put aside time outside of class to work on the project. The circuitry needed to be soldered to the PCB and installed in the box, the code also needed to be adjusted and calibrated in-situ in order to ensure it was functional. All testing needed to be performed as well. In order to achieve this task, both myself and another motions team member came in to 44 Waterloo Road on a Friday outside of class to install and calibrate the system. We also solved a number of oversights in the code and structure of the box. As a result the box was assembled and tested fully, and all that was left was for comms to fully implement the code. It was a stressful week given that the project came together very late into the semester, and there was a lot of work to do in a very short amount of time. The extra time spent on campus to organise the project was incredibly useful, and I am grateful for my team members being able to support each other during the rush to get everything done. In future, I will prioritise starting early and planning out a project in full, even if its a simple outline, to ensure there isn't the same rush at the end. Clear and open communication channels are also a priority, it was a struggle to get a hold of other members of my team as well as comms and structures. Finding a common system of communication that everyone will use is also a critical priority in the beginning.\n\n3.  **Deal Reflection: Using the Atkins and Murphy model of reflection. Reflect over your aforementioned recount (around your chosen topic) and articulate your Personal feelings/reflection and what you have learned from the experience. You should use personal voices as these introspections are neither right nor wrong but wholly from your perspective. When articulating your learning from the experience, you should make reference to the insight you have gained and how you will act differently in the future.\n\nIts a fairly common occurrence as the deadline for a project approaches to get stressed and anxious, this project being no different. Especially when its clear that the project is not prepared. During week 12 it was clear that the project wouldn't be finished without some serious overtime put into it. Not only were the electronics not properly mounted, but the code was ineffective. While this is a problem that goes beyond blame, it's very easy to blame myself for much of the work going undone. Regardless, with the help of my team and several extra hours in the workshop to bring the project to fruition, it was done. In terms of personal growth, this project hammered home the point of responsibility, and that nobody is going to keep me or anyone else on task. It was important for me to understand that just because I was in a group doesn't mean that my work or my influence was unimportant. It was clear that I hadn't started early enough with soldering the control board, and that the integration was going to be more fiddly and time consuming than previously anticipated. It was clear that I should have employed more planning techniques such as a simple Kanban board or a Gantt chart in order to keep me and my team on task. There are a number of different methods of scheduling in order to maximise productivity, I will look into these before my next project to maximise my productivity in future tasks. On top of organising my time better, I will take a more proactive approach and attempt to minimise procrastination. I will keep on top of other team members about their assigned work and make sure everything is completed on time and within my team members individual schedules. Overall the project may not have been an overwhelmingly successful one, but it was indeed useful for self development, enhancing how I will next approach a task such as this."
    }
  },
  "UNI 2023": {
    "SEM 1": {
      "ELEC3042": {
        "Week 6 - Debugging, Testing, and UART.md": "#ELEC/3042 #EmbeddedSystems/Microprocessors  #UniNotes\n\n**Slides:**\n[[Attachments/ELEC3042_Lecture_Debugging_1.pdf]]\n\n[[Attachments/Lecture_RS232.pdf]]\n\n[[Attachments/Lecture_buses_3.pdf]]\n\n[[Attachments/Lecture_Serial.pdf]]\n\n",
        "Week 4 - Embedded System Design.md": " #ELEC/3042 #EmbeddedSystems/Microprocessors #Communication #UniNotes\n\n[[Attachments/Week 4.pdf]]\n\n# 7-Segment Display\n- Allow alphanumeric characters to be displayed with simple hardware\n- HW-262 has four 7-segment displays connected to two 8 bit shift registers in series to form a 16 bit shift register.\n\t- 8 bits are used to turn on/off the segments\n\t- 4 bits are used to turn on and off digits\n\t- 4 bits are unused\n- Shift register is controlled via 3 lines\n\t- Data(PB0) - The 16 control bits\n\t- Clock (PD7) - Data shifts into registers on rising edge\n\t- Latch (PD4) - Latches data to shift register output to be displayed\n![[Attachments/Pasted image 20230321230257.png]]\n- Turn on/off a segment by sending a low/high voltage (active low)\n- Select a digit by setting the corresponding bit high\n- To  show a four-digit number, we have to time multiplex the display\non  the rising edge of PD7 a new bit is clocked in\n![[Attachments/Pasted image 20230321231233.png]]\n\nPD4 goes high to send all the bits stored to the display\n![[Attachments/Pasted image 20230321231353.png]]\n\n# State Machines\n- Is a model describing the behaviour of a system as a set of states\n\t- A system can only be in one state at any time\n\t- Transition between states is dependent on the current state and the inputs to the system\n- We can describe the relationship between states and their transitions via diagrams, equations, or tables\n\t- For this unit, we use\n\t\t- State transition diagrams\n\t\t- State transition tables\n![[Attachments/Pasted image 20230321231750.png]]\n![[Attachments/Pasted image 20230321231806.png]]",
        "Week 7 - SPI & I2C.md": "#ELEC/3042 #EmbeddedSystems/Microprocessors #UniNotes\n\n**Slides:**\n[[Attachments/Week 7.pdf]]\n",
        "Week 1 - Introduction to Embedded Systems.md": " #EmbeddedSystems/Microprocessors #Circuits #ELEC/3042 #UniNotes\n\n[[Attachments/Week 1_corrected.pdf]]\n\n# Embedded Systems\n- Computer Systems that run **ONE fixed program**\n- Part of a larger system that has **a non-computational focus**\n- Rarely, if ever, updated or maintained\n- **Examples**: Swipe card locks, alarm systems, smart lights\n\n# ATmega328p Microcontroller\n![[Attachments/Pasted image 20230228195354.png|750]]\n\n## Arduino Schematic\n![[Attachments/Pasted image 20230228195444.png|750]]\n\n# Variable Sizes\n| Data Type     | Size   |\n| ------------------ | ------ |\n| int8_t / uint8_t   | 8-bit  |\n| int16_t / uint16_t | 16-bit |\n| int32_t / uint32_t | 32-bit |\n| int64_t / uint64_t | 64-bit |\n\n# Data Direction Register\n![[Attachments/Pasted image 20230228200042.png]]\nInput - Write a 0 to the bit corresponding to the pin\nOutput - Write a 1\n\n## Example\n#Examples \nSet PB5 as an output pin\n- Write a 1 to bit 5 of DDRB\n- Leave all other bits in DDRB unchanged\n![[Attachments/Pasted image 20230228200421.png]]\n\n# Bitwise Operations\n![[Attachments/Pasted image 20230228200555.png]]\n\n## Example\n#Examples \nSet PB5 as an output pin\n- Write a 1 to bit 5 of DDRB\n- Leave all other bits in DDRB unchanged\n![[Attachments/Pasted image 20230228200832.png]]\n\n# Numbers\nNumbers can be represented in multiple ways, each with their own uses.\n- **0b**00001111 -> Binary Number (8 bits)\n- **0x**0F -> Hexadecimal\n- 017 -> Octal Number\n- 15 -> Decimal Number\n\n# Data Register\n- If **output**, used for setting **pin value**\n- If **input**, used for setting **pullup resistor**\n- ![[Attachments/Pasted image 20230228201415.png]]\n\n# Input Pin Pull Up\n- All port pins have individually selectable pull-up resistors\n\t- Write 1 to activate pull-up\n- For an input, it is desirable to set the pull-up resistor HIGH\n\t- Implies input is active LOW, saves on external components\n\t- An external switch connected to input pin will pull to ground\n\t- 0 = Pressed, 1 = Not Pressed\n![[Attachments/Pasted image 20230228201741.png]]\n\n# Input Registers\nFor reading input from pins\n![[Attachments/Pasted image 20230228201843.png]]\n\n# I/O Pins - Summary\n![[Attachments/Pasted image 20230228201930.png]]\n\n# Multiple ways of setting bits\n![[Attachments/Pasted image 20230228202042.png]]\n\n## Setting multiple pins at once\n![[Attachments/Pasted image 20230228202216.png]]\n\n# Reading Inputs\n![[Attachments/Pasted image 20230228202116.png]]\n\n",
        "Week 5 - Interfacing with the Analog World.md": " #ELEC/3042 #Logic #EmbeddedSystems/Microprocessors #Communication #UniNotes\n\n[[Attachments/Week 5.pdf]]\n\n# Digital vs Analog\n- Real world analog (continuous)\n- CPUs are digital\n- For computer to interact with the real world, we need\n\t- Digital to Analog (D-to-A) conversion - convert digital signal to analog\n\t- Analog to Digital (A-to-D) conversion - convert analog signal to digital\n\n# Using Timers to create analog output\nTimers can generate square waveforms that are outputted on pins\n![[Attachments/Pasted image 20230322232755.png]]\n\n# Waveform Generation\n## CTC\nChange pin output value on compare match\n![[Attachments/Pasted image 20230322232920.png]]\n- Single-slope operation: TCNTn counts from BOTTOM to TOP and resets to BOTTOM\n- Toggle output when count reaches value in OCnA & reset TCNTn\n- Set/change period of output waveform by setting/changing OCnA value\n![[Attachments/Pasted image 20230322233115.png]]\n\n## Fast PWM\n- Single-slope operation\n- Non-inverting mode (inverting mode is opposite):\n\t- output low when count reaches compare value\n\t- output high when count reaches TOP value\n- Change compare value to change duty cycle\n![[Attachments/Pasted image 20230322233302.png]]\n\n## Phase correct, Phase & Frequency correct PWM\n- Dual-slope operation: TCNTn counts from BOTTOM to TOP and down to BOTTOM\n- Non-inverting mode (inverting mode is opposite):\n\t- Output low on compare match while upcounting\n\t- Output high on compare match while downcounting\n- Lower max frequency than FAST PWM but pulses are symmetric\n- Difference between phase correct, and phase & frequency correct is when OCRnx register is updated.\n\n## Choose a Timer\nOCRnA = clock frequency / (2 * desired frequency)\n![[Attachments/Pasted image 20230322233810.png]]\n\n# ADC: Sampling & Resolution\n(Analog to digital converter)\n- Conversion to digital occurs at discrete moments in time\n- Sample rate (number of conversions per second) is limited by conversion time\n- Sampling rate limits the bandwidth of the digital representation (Nyquist frequency) - (data bandwidth)\n- *Resolution* is the number discrete levels available to represent the amplitude of a signal and determined by the number of bits in ADC\n![[Attachments/Pasted image 20230322234130.png]]\n\n## ADC on ATmega328P\n![[Attachments/Pasted image 20230322234614.png]]\n- One 10-bit ADC\n- Multiplexed across the PORTC pins\n\t- That is, if 2 pins are using the ADC, the total sampling rate will be divided across those two pins\n- Max sampling rate is dependent on resolution and clock rate\n\t- Normal clock frequency 50kHz to 200kHz\n\t- Accepting lower resolution allows > 200kHz clock $\\rightarrow$ higher sampling rate\n- ADC has prescaler to generate an acceptable clock frequency\n\t- Set by ADPS bits inn ADCSRA\n\n# Successive Approximation\n![[Attachments/Pasted image 20230322234911.png]]\n- Samples input signal voltage\n- Input signal voltage is held constant and successively compared to a comparison voltage to find the binary representation one bit at a time starting from MSB\n- Conversion normally takes 13 ADC clock cycles\n\t- First conversion takes 25 ADC clock cycles because the analog circuitry needs some time to initialise\n\n## Conversion Result\n![[Attachments/Pasted image 20230322235412.png]]\n- When conversion is complete, result is stored in ADC register and ADIF flag is set\n- ADC is made up of two 8 bit registers: ADCH & ADCL\n- To get 16-bit result, read ADC (or ADCL first, then ADCH)\n- Result can be left or right-adjusted (depends on ADLAR bit)\n- If 8-bit (or less) resolution is required, use left adjust adjust and just read ADCH only\n\n# Triggering a conversion\n![[Attachments/Pasted image 20230322235444.png]]\nManually\n\tWrite 1 to ADSC\n\nFree Running\n\tStarts a new conversion as soon as the ongoing one is finished\n\nAutomatic trigger\n\tAllows conversions at a fixed interval\n\n# Setting up for ADC conversion\n\n1. Select PORTC pin(s) for ADC and configure pin(s) as an input (no pullup resistor)\n2. Configure A-to-D module\n\t1. ADMUX Register\n\t\t- Select Voltage Reference Source (AVcc)\n\t\t- Set left or right adjust output (ADLAR bit)\n\t\t- Set MUX bits for a pin to get analog value\n\t2. ADCSRA/ADCSRB Registers\n\t\t- Enable ADC (ADEN bit)\n\t\t- Enable interrupt (if desired)\n\t\t- Set an appropriate clock prescaler\n\t\t- Set desired conversion trigger\n\t3. DIDR0 Register\n\t\t- Disable digital input of ADC pins to conserve power\n3. Do an initial conversion (because the first one takes 25 ADC cycles)\n\t- Set ADSC bit to 1 in ADCSRA register\n\n## General Steps\n- Check that no conversion is currently running (ADSC bit should be 0) \n- If no conversion is running, start a conversion (set ADSC bit to 1) \n- Wait for sample to complete (ADSC == 0) \n- Read ADC to get all 10 bits (or just ADCH if you only want MSBs)",
        "Week 3 - Timers and Internal Clocks.md": " #ELEC/3042 #EmbeddedSystems/Microprocessors #EmbeddedSystems #UniNotes\n\n[[ATmega328P Datasheet]]\n\n# Timers\nTiming an event is important in many digital system applications.\n\nThe ATmega328P has 3 different timers\n- Timer0 & Timer 2 - 8-bit (0b00000000)\n- Timer1 - 16-bit (0b0000000000000000)\n- Each timer has various modes of operation and 3 interrupt generators\n- Each timer has different features for different purposes\n\n## How do Timers work?\n- Counts clock pulses \n- Clock can be the I/O clock or an external clock \n- If I/O clock is used, a prescaler can be applied to divide the clock frequency by 8, 64, 256 or 1024\n![[Attachments/Pasted image 20230314210811.png]]\n\n# Timer Modes of Operation\n## Normal Mode\n- TCNT counts up from 0 until it overflows (generates interrupt), and then starts from 0 again.\n![[Attachments/Pasted image 20230314211902.png]]\nUsually not that useful, although you can alter the value it starts from.\n\n## CTC Mode\n- CTC = clear timer on compare match \n- When count matches value in OCRnA, the counter will reset (and generate an interrupt) \n- Used to have timer count to numbers smaller than maximum count\n![[Attachments/Pasted image 20230314212523.png]]\nMost common type of timer mode.\n## PWM Mode\n- PWM = pulse width modulation \n- Can also be used to generate different output waveforms \n- Example uses: \n\t- change the brightness of LEDs\n\t- drive motor at different speeds\n\t- Speakers\n![[Attachments/Pasted image 20230314220811.png]]\n![[Attachments/Pasted image 20230314220918.png]]\n# Choosing a Timer\n![[Attachments/Pasted image 20230314220954.png]]\n\nDepends on several factors:\n- The size of the divisor\n\t- value put into compare register\n\t- 8 vs 16 bit\n- Whether an external output is required \n\t- Which pins are available\n- Accuracy of the PWM output\n\t- 8 vs 16 bit\n\n# Busy Loops (DO NOT USE FOR SIGNIFICANT TIMING)\n- Undesirable because: \n\t- Does no meaningful work\n\t- Holds up the CPU \n\t- Wastes energy \n- Replace delay_ms(1000) with timer \n\t-  Count enough clock ticks for 1 s and generate interrupt\n![[Attachments/Pasted image 20230314221356.png]]\n\n# Step One: Choose a Timer\n- Arduino has 16Mhz clock\n\t- Choose an appropriate prescaler\n\t\t- No prescaler - need 24 bits to count to 16 million ($2^{24} = 16,777,216$) - Don't have a 24-bit timer.\n\t\t- Prescaler of 8 $\\Rightarrow$ 16,000,000 / 8 = 2,000,000 clock tick per second\n\t\t\t- To represent 2,000,000, need 21 bits (221 = 2,097,152) – don’t have a 21-bit timer\n\t\t- Prescaler of 64 => 16,000,000 / 64 = 250,000 clock ticks per second\n\t\t\t- To represent 250,000, need 18 bits\n\t\t- Prescaler of 256 => 16,000,000 / 256 = 62,500 clock ticks per second\n\t\t\t- To represent 62,500, need 16 bits\n\t\t- Prescaler of 1024 => 16,000,000 / 1024 = 15,625 clock ticks per second\n\t\t\t- To represent 15,625, need 14 bits\n- Use Timer1\n- Which prescaler?\n\t- Choose largest prescaler that will count to a whole number\n\t- If a whole number is not possible, a lower prescaler gives higher precision (reduces error)\n\n# Step Two: Choose Timer Mode of Operation\n\n| Modes of Operation                                                                                                         | Overflow exceeds 1 s                                                                                                                      |\n| -------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| Normal – counts up from 0 until it overflows (generates interrupt), and then starts from 0 again                           | • 16 MHz/1024 = 15,625 clock ticks per second • 216 = 65536 clock ticks before overflow • => 65536/15625 = 4.1943 seconds before overflow |\n| CTC (clear timer on compare match) – when count matches value in OCRnA, the counter will reset (and generate an interrupt) | Set OCR1A to 15,625                                                                                                                       |\n| PWM (pulse width modulation) – used to generate different output waveforms                                                 | Not generating an output waveform on one pin                                                                                              |\n\n# Step Three: Setup Control Registers\n## TCCR1A - Modes of Operation\n![[Attachments/Pasted image 20230314225602.png]]\n![[Attachments/Pasted image 20230314225636.png]]\n![[Attachments/Pasted image 20230314225710.png]]\nConnects OC1A/OC1B to pins.\n\n![[Attachments/Pasted image 20230314225859.png]]\n![[Attachments/Pasted image 20230314225925.png]]\n\n## TCCR1B - Select Clock Prescaler\n![[Attachments/Pasted image 20230314230245.png]]\n\n\n```\nTCCR1A = 0b00000000;\nTCCR1B = 0b00001101;\n```\n\n## TCCR1C - Control Register C\n![[Attachments/Pasted image 20230314230500.png]]\n\n```\nTCCR1C = 0;\n```\n![[Attachments/Pasted image 20230314230623.png]]\n\n```\nTCCR1A = 0b00000000;\nTCCR1B = 0b00001101;\nTCCR1C = 0;\nTCNT1 = 0;\nOCR1A = 15624;\nOCR1B = 0;\nICR1 = 0;\n```\n\n## TIMSK1 - Interrupt Mask Register\n![[Attachments/Pasted image 20230314230837.png]]\n\n```\nTIMSK1 = 0b00000010;\n```\n\n## TIFR1 - Interrupt Flag Register\n![[Attachments/Pasted image 20230314231154.png]]\n\n```\nTIFR1 = 0;\n```\n\n## Example\n#Examples \n![[Attachments/Pasted image 20230314231240.png]]\n\n# One timer for Multiple Events\n- Example\n\t- LED changes once per second\n\t- Button debounced time is ~10 ms\n- Implementation\n\t- Set up timer to interrupt every 10 ms\n\t- LED should change after 100 interrupts\n\t- Button is debounced on next interrupt\n# Button Debouncing\n![[Attachments/Pasted image 20230314231922.png]]\n![[Attachments/Pasted image 20230314231937.png]]\n![[Attachments/Pasted image 20230314232113.png]]\n\n# Timer Summary\n- Using a Timer\n\t- Choose an appropriate timer\n\t- Configure mode of operation\n\t- Setup prescaler\n\t- If using CTC mode, set compare register value\n\t- Setup interrupt and ISR, if desired\n- One timer can be used to time multiple events in a system",
        "MCP23S17 Datasheet.md": "---\nannotation-target: Attachments/MCP23S17 Datasheet.pdf\n---",
        "Week 2 - Bit Logic and Interrupts.md": "#Logic  #Communication #ELEC/3042 #UniNotes\n\n[[Attachments/Week 2.pdf]]\n\n# Recap - Setting up Inputs and Outputs\n![[Attachments/Pasted image 20230314192131.png]]\n## Setting multiple bits at once\n\nThese are all equivalent:\n- Set pin 2 & 5 as output, the rest as inputs\n- Set output LOW on pin 2 & 5, pull up resistors on input\n\n```\nDDRB = 0b00100100;\nPORTB = 0b11011011;\n\nDDRB = 0x24;\nPORTB = 0xDB;\n\nDDRB = 36;\nPORTB = 219;\n```\n\n## Macros for Setting Bits\nThese are all equivalent\n- Set pin 2 & 5 as output\n- set output to LOW on pin 2 & 5\n\n```\nDDRB |= 0b00100100; \nPORTB &= 0b11011011; \n\nDDRB |= _BV(DDB2) | _BV(DDB5); \nPORTB &= ~_BV(PORTB2) & ~_BV(PORTB5); \n\nDDRB |= (1<<DDB2) | (1<<DDB5);\nPORTB &= ~(1<<PORTB2) & ~(1<<PORTB5);\n```\n\n![[Attachments/Pasted image 20230314193518.png]]\n\n# Reading Bits\n• Want to know whether a particular bit in a register is a 1 or 0 \n• Create a “mask” that puts a 1 in the bit position of interest and set the rest of the bits to 0 \n• AND register and mask together to see if it equals 0\n\n#Examples \n- Test if a button connected to PORTC Pin 2 is pressed \n- If pressed, the output should be 0 \n- If not pressed, the output will not be 0\n![[Attachments/Pasted image 20230314193653.png]]\n\n```\n// setup\nDDRB |= 0b00100000;                            // PORTB pin 5 (D13) output \nPORTB &= 0b11011111;                           // turn off LED \nDDRC &= 0b11111011;                            // set PORT C, Pin 2 as input \nPORTC |= 0b00000100;                           // pull up PORT C, Pin 2 \nwhile (1) {\n\tif ((PINC & 0b00000100) == 0) {            // button is pressed \n\t\tPORTB |= 0b00100000;                   // turn on LED \n\t} else {                                   // button not pressed \n\tPORTB &= 0b11011111;                       // turn off LED } }\n```\n\n## Reading multiple inputs\n```\n\n// setup \nDDRC &= 0b11111001; // set PORT C, Pin 1 & 2 as input \nPORTC |= 0b00000110; // pull up PORT C, Pin 1 & 2 \nwhile (1) { \n\tif ((PINC & 0b00000110) == 0) { // both buttons are pressed \n\t\t// do A \n\t} else if ((PINC & 0b00000100) == 0) { // button on Pin 2 pressed \n\t\t// do B \n\t} else if ((PINC & 0b00000010) == 0) { // button on Pin 1 pressed \n\t\t// do C \n\t} else { \n\t// buttons not pressed \n\t\t// do D \n\t} \n}\n```\n![[Attachments/Pasted image 20230314194353.png]]\n\n# Example: LED Morse Code\n```\nDDRB |= 0b00100000; // PORTB pin 5 (D13) output\nPORTB &= 0b11011111; // turn off LED \nuint32_t sos = 0b0100100100111011101110010010010; // SOS(... --- ...) \nuint32_t mask = 0x80000000; // used to read one bit at a time \n\nwhile (1) {\n\tif ((sos & mask) == 0) { // test whether current bit is 0 \n\tPORTB &= ~_BV(PB5);\n } else { \n\t PORTB |= _BV(PB5);\n } \n\tdelay_ms(400); mask = mask >> 1; // shift mask to next bit \n\tif (mask == 0) {\n\t\t mask = 0x80000000; // reset mask \n\t} \n}\n```\n\n# Interrupts\nInterrupts are a method of stopping what the processor is currently doing and running a section of code. This code is best kept brief, and is usually used to raise flags in the system. \n- Temporarily delay execution of current code while some more urgent code is run on the CPU\n- Is used to indicate an important external or internal event in a system \n- Frees us from needing to constantly check for an event\n\n## Example: The Toy Problem\n#Examples \nCreate a program that cycles and lights up one of three LEDs for one second each. A push button is used to change the direction of the cycling whenever it is pressed. \n\n**Design:** \n- LED's are connected to PB5 (LED1), PB4 (LED2), PB3 (LED3) \n- Push button is connected to PD2\n\n![[Attachments/Pasted image 20230314195505.png]]\n\n![[Attachments/Pasted image 20230314200045.png]]\n\n## Sources of Interrupts\n• Port pins \n• Timers \n• UART, SPI, I2C \n• ADC \n• Analog Comparator \n• EEPROM\n![[Attachments/Pasted image 20230314200333.png]]\n\n# INT0 Interrupt\nSection 13.2 In the Datasheet\n![[Attachments/Pasted image 20230314200546.png]]\n![[Attachments/Pasted image 20230314200721.png]]\n\n## When does an Interrupt occur?\nInterrupts occur when 3 things are satisfied:\n1. An event has been recorded\n2. The event-specific interrupt enable has been set \n(EIMSK = 0b00000001;\nEICRA = 0b00000010;)\n3. The global interrupt enable flag has been set ( sei(); )\n\n## What happens when an interrupt occurs?\n1. Current program execution is stopped\n2. Context is saved (register values, program counter)\n3. Control jumps to Interrupt Service Routing (ISR)\n\n# Interrupt Service Routine (ISR)\n- Code that gets run when interrupt is raised\n- All ISR have the same template\n```\nISR(SOURCE_vect) { \n// ISR code here \n}\n```\n![[Attachments/Pasted image 20230314201345.png]]\n12-6 In the Datasheet\n\n# Summary\n- Choose an appropriate interrupt\n- Configure appropriate interrupt registers\n- Enable specific interrupt bit\n- Enable global interrupts\n- Define ISR",
        "ATmega328P Datasheet.md": "---\nannotation-target: Attachments/ATmega328p Datasheet.pdf\n---"
      },
      "ELEC2070": {
        "Week 11 - The Damped Sinusoid and the Laplace Transform.md": " #ELEC/2070 #Circuits #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 11 2023 Laplace Transform.pdf]]\n\n# The Damped Sinusoidal Forcing Function\nRecall the equation for a damped sinusoidal forcing function (voltage):\n$$v(t) = V_{m}e^{\\sigma t} \\cos(\\omega t + \\theta)$$\nUsing the complex frequency: $S = \\sigma + \\omega j$\n\nWhich has a form of:\n![[Attachments/Pasted image 20230524113256.png||500]]\n\nMaking use of Euler's identity, we can derive:\n$$v(t) = Re\\{ V_{m}e^{\\sigma t}e^{j(\\omega t + \\theta)}\\} \\text{ Or } v(t) = Re\\{ V_{m}e^{\\sigma t}e^{j(-\\omega t - \\theta)}\\}$$\n\nCollecting factors and using the complex frequency ($s = \\sigma + j \\omega$), we get (*time domain*):\n$$v(t) = Re\\{ V_{m}e^{j\\theta}e^{st}\\}$$\n```ad-important\nThis equation involves a coefficient containing the amplitude and phase angle multiplied by an exponential involving the complex frequency.\n```\n\n## The Forced Response\nAssume we want the forced response, which is a current going through a branch in a circuit. This current is given by:\n$$i(t) = I_{m}e^{\\sigma t}\\cos(\\omega t + \\phi)\\text{ Or }i(t) = Re\\{ I_{m}e^{j\\phi}e^{st}\\}$$\nNote that is must have the **SAME functional form**.\n**The complex frequency of the forcing function and response are identical**\n\nThe real part of the forcing function ($\\sigma$) Gives rise to the real part of the response. The imaginary part of the forcing function ($\\omega$) Gives rise to the imaginary part of the response.\n\nUsually the Re{} factor is removed but it **MUST** be reinserted if we want the time domain response.\n\n## The Frequency Domain Method\nThe basic steps in the frequency domain analysis of a circuit is:\n1. Characterise the circuit using node or mesh analysis. This will create differential equations or integrodifferentials equations.\n2. The forcing functions will be in complex form, so will the responses. These are substituted into the equations and the differentiations and integrations performed. (Note that since we now have exponentials only, the integrals and differentials will also be exponentials.)\n3. Each term will contain the factor $e^{st}$. The term $e^{st}$ can be factored out leaving an equation containing the amplitudes and phase angle **ONLY**. Remember, to get back to the time domain, the term $e^{st}$ must be reinserted.\n**This process converts from the time domain to the frequency domain.**\n\n# The Laplace Transform\nIn the real world, most functions are not pure sinusoidal or pure exponential. For example, when square waves or pulses are applied to a circuit, the responses are not related to these forcing functions in a simple way.\n\nFor **non** pure sinusoidal or exponential forcing functions we are not able to simply drop terms containing $t$ and work in the frequency domain.\n\n*There is a solution:*\nMost functions of time can be decomposed into an infinite summation of exponentials (each with a unique complex frequency in the exponents)\nWith each exponential we can drop terms containing t and work entirely in the frequency domain (for each exponential).\n\n## Definition\nThe Laplace Transform is defined as:\n$$F(s) = \\mathcal{L}[f(t)]=\\int^{\\infty}_{0}f(t)e^{-st}dt$$\n\nWhere $s$ is the **complex frequency:**\n$$s = \\sigma + j\\omega$$\nThe lower limit is taken to be $0^{-}$ which allows for discontinuities in $f(t)$ at $t=0$\nNote that $f(t)$ is not considered for $t<0$, or we can say $f(t) = 0$ for $t<0$\n\n```ad-warning\ntitle: Important\nThe Laplace Transform converts the time domain function $f(t)$ to a corresponding frequency domain representative, $F(s)$.\n```\n\n## Process of using the Transform\n![[Attachments/Pasted image 20230525195914.png]]\n**All functions that are PHYSICALLY POSSIBLE have a Laplace Transform**\n\n## Inverse Laplace Transform\nThe Inverse Laplace Transform is defined by the complex inversion integral:\n$$f(t) = \\mathcal{L}^{-1}[F(s)] = \\frac{1}{2\\pi j}\\int^{\\alpha+j\\infty}_{a-j\\infty}F(s)e^{st}ds$$\nThis is a contour integration in the complex plane. We will not be doing these!\n**Use the table of transforms dingus**\n\nSince the Inverse Laplace Transform is the inverse of the Laplace Transform, i.e. $F(s)=\\mathcal{L}[f(t)]$ and $f(t) = \\mathcal{L}^{-1}[F(s)]$\n\nThen:\n$$f(t) \\leftrightarrow F(s)$$\nThese comprise a Laplace transform Pair\n\n### Examples\n#### Ex1\n![[Attachments/Pasted image 20230525200723.png]]\n#### Ex2\n![[Attachments/Pasted image 20230525200743.png]]\n\n## Properties: Linearity\nLinearity means that: $a_{1}f_{1}(t) + a_{2}f_{2}(t) \\leftrightarrow a_{1}F_{1}(s)+a_{2}F_{2}(s)$\n![[Attachments/Pasted image 20230525200936.png]]\n\n## Differentiation\nNow we want to find $F(s) = \\mathcal{L}[df(t)/dt]$\n\nWe need to use: $\\int udv = uv - \\int vdu$\n\nOR $F(s) = \\int^{\\infty}_{0} \\frac{df}{dt}e^{-st}dt$\n\nSince we will be integrating by parts, set $u = e^{-st}$ and $dv = (\\frac{df}{dt})dt = df$\nThen $du = -se^{-st}$ and $v=f(t)$\n\nIntegrating by parts we get: $F(s) = e^{-st}f(t) - \\int_{0}^{\\infty}f(t)*-se^{-st} dt$\nOr $F(s) = e^{-st}f(t)|^{\\infty}_{0}+s\\int^{\\infty}_{0}f(t)e^{-st}dt=sF(s)-f(0)$\n\n$$\\frac{df}{dt}\\leftrightarrow sF(s) - f(0^{-})$$\n\n### Examples\n![[Attachments/Pasted image 20230525202242.png]]\n\n## Table of Laplace Transforms\n![[Attachments/Pasted image 20230525202357.png]]\n![[Attachments/Pasted image 20230525202407.png]]\n\n### Examples\n**Ex1**\n![[Attachments/Pasted image 20230525202439.png]]\n\n**Ex2**\n![[Attachments/Pasted image 20230525202513.png]]\n![[Attachments/Pasted image 20230525202540.png]]\n\n# Pulse Functions\n\n## The Step Function\n$$\n u(t) = \\begin{cases} \n      0 & \\textrm{ for $t<0$} \\\\\n      1 & \\textrm{for $t>0$} \\\\\n   \\end{cases} \n$$\n![[Attachments/Pasted image 20230525203050.png]]\n### An Approximation\nBecause the impulse function is undefined at $t=0$ we need an approximation to allow us to better understand the step function and impulse function for the analysis of pulses.\nConsider the linear function:\n![[Attachments/Pasted image 20230525203557.png]]\nWhen $\\epsilon = 0$ we have our original step function\n\n## Impulse Function\n$$\n \\delta(t)=\\frac{d}{dt}u(t) = \\begin{cases} \n      0 & t<0 \\\\\n      \\text{undefined($\\infty$)} & t=0 \\\\\n      0 & t>0 \\\\\n   \\end{cases} \n$$\n![[Attachments/Pasted image 20230525203342.png]]\n### An Approximation\nWe now differentiate this function $u_{\\epsilon}(t)$ and we get:\n![[Attachments/Pasted image 20230525203942.png]]\nNote that the area under this curve is **ALWAYS** equal to 1.\n\nOr $\\int^{\\infty}_{-\\infty}\\delta_{\\epsilon}(t)dt=\\int^{\\epsilon}_{0} \\frac{1}{\\epsilon}dt =1$\n\nAND\n\n$\\lim_{\\epsilon\\to 0}\\delta_{\\epsilon}(t) = \\delta (t)$\n\nThus we can say the impulse function $\\delta(t)$ has infinite amplitude, infinitesimal duration BUT an area equal to 1.\n\n### Property of the Impulse Function\nAn important property of the impulse function is:\n$$\\int^{+\\infty}_{-\\infty}f(t)\\delta(t)dt=f(0)$$\n**Its just the sifting property**\n\n## Delaying a Linear Function\nWe will need Laplace Transform of other pulse functions\nWe can delay a function by $\\tau$ using the time delay $t-\\tau$\nFor example, consider the function $f(t)=mt+b$\n![[Attachments/Pasted image 20230525205309.png]]\nIf we wish to delay this function by $\\tau$, we now have the equation:\n\n$f(t-\\tau)=m(t-\\tau)+b$\nOR\n$f(t-\\tau)=mt+(b-m\\tau)$\n\nWhich has the same slope, but different y intercept\n![[Attachments/Pasted image 20230525205451.png]]\n\n## Using the Step Function\nNow consider multiplying the function $f(t)$ by the step function $u(t)$:\n$g(t) = f(t)u(t) = (mt+b)u(t)$\n![[Attachments/Pasted image 20230525205904.png]]\nWhich is the same as $f(t)$ when $t>0$, but is $0 \\text{ for }t<0$\n\nIf we wish to delay $g(t)$ by $\\tau$, we have the function:\n$g(t-\\tau)=f(t-\\tau)u(t-\\tau)=[m(t-\\tau)+b]u(t-\\tau)$\n![[Attachments/Pasted image 20230525210209.png]]\n\n### Now we can create a pulse function\n![[Attachments/Pasted image 20230525210246.png]]\n\n### Subtracting a delayed function\n![[Attachments/Pasted image 20230525210408.png]]\n\n### Subtracting a scaled and delayed step function\n![[Attachments/Pasted image 20230525210448.png]]\n\n### Another Pulse Function\n![[Attachments/Pasted image 20230525210526.png]]\n\n### LT of a Delayed Function\n![[Attachments/Pasted image 20230525210607.png]]\n\n# Inverse Laplace Transform\n\n## Use Linearity\n![[Attachments/Pasted image 20230525210643.png]]\n\n## Ratios of polynomials\n![[Attachments/Pasted image 20230525210708.png]]\n\n## Poles and Zeros\n![[Attachments/Pasted image 20230525210732.png]]\n\n### Example\n![[Attachments/Pasted image 20230525210749.png]]",
        "Week 7 - Phasors and Impedance.md": "#ELEC/2070 #Circuits #Communication #UniNotes\n\n[[Attachments/ELEC2070 Week 7 2023 Sinusoidal Steady State - Impedance.pdf]]\n\n# Time Domain vs Frequency Domain\n*Finally, a use for Pythagoras' theorem*\n\n## Frequency Domain\nUp until now we have considered:\n1. DC circuit analysis $\\rightarrow$ Mesh analysis, node equations, equivalent circuit\n2. Time domain analysis $\\rightarrow$ Energy storage, complete response of RL, RC and RLC circuits\n```ad-important\nFourier Transform converts time-domain functions into frequency-domain functions\nIf the time-domain signal is periodic, the frequency domain is a superposition of sinusoids.\n```\n![[Attachments/Pasted image 20230419205232.png]]\n\n## Period Signals\nTypical periodic signals in time domain and frequency domain\n![[Attachments/Pasted image 20230419205509.png]]\n![[Attachments/Pasted image 20230419205525.png]]\n\n# AC Circuits and Sinusoidal Functions\nConsider a circuit having a sinusoidal input. The complete response will be:\n$$v(t) = v_{n}(t) +v_{f}(t)$$\n\nThe natural response $v_{n}(t)$ will die out, leaving the forced response $v_{f}(t)$. When all the inputs have the **same** frequency, the forced response will have the **same** frequency.\n\n```ad-important\n\nOverall when the following 2 conditions are fulfilled:\n1. All the inputs are sinusoidal and have the same frequency and\n2. The circuit is at steady state.\n\nThen all of the currents and voltages are sinusoidal and have the same frequency as the inputs.\n```\n\nTraditionally, sinusoidal currents have been called alternating currents (AC) and circuits that satisfy the above conditions are called AC circuits\n\n## Sinusoidal Sources\nWe are going to examine all what we have covered so far in the unit when the independent forcing function is a sinusoidal function - AC circuits analysis (always in a steady state)\n![[Attachments/Pasted image 20230419210741.png]]\n$$v(t) = A*sin(\\omega t)$$\nFrom RL, RC and RLC circuit analysis, we know that the forced response part of the complete response will be a sinusoidal with the same frequency!\n\n**Forced responses with sinusoidal input (forcing functions) are easier dealt with in the frequency domain**\n\n## Important parameters relating to a sinusoidal signal\nA sinusoid is a periodic function, i.e.: $v(t) = v(t+T)$\n$T$ = Period (s)\n\nThe general functional form for a sinusoid is: $v(t) = A*sin(\\omega t)$\n\n$\\omega=2\\pi f$  Angular frequency (rad/s)\n\nWhere the frequency (in $s^{-1}$) is given by: $f = \\frac{1}{T}=\\frac{\\omega}{2\\pi}$ (Hz)\n\n## Time advance, delay and phase angle\nConsider the effect of replacing $t$ with $t + t_a$ \n![[Attachments/Pasted image 20230419211933.png]]\n$$v(t +t_{a})=A*sin[\\omega(t+t_{a})] = A*sin[\\omega t + \\omega t_{a}]=A*sin[\\omega t + \\theta]$$\n\nWhere:\n$t_{a}$ Is the time advance (delay)\n$\\omega t + \\theta$ Angular frequency in radians ($\\theta$ is the phase angle)\n\nPhase angle (radians) is related to time $t_{a}$: $\\omega t_{a}=\\theta = \\frac{2\\pi t_a}{T}$\n\n## Phase Angle\nSimilarly, replacing $t$ with $t-t_d$ produces a sinusoid that is identical to $v(t)$ except that $v(t-t_d)$ is delayed from $v(t)$ by time $t_d$.\n$$v(t-  t_{d}) = A\\sin [\\omega(t-t_{d})]=A\\sin [\\omega t - \\omega t_{d}] = A\\sin [\\omega t+\\theta]$$ \nWhere the phase angle is: $\\theta = - \\frac{2\\pi t_{d}}{T}$\n```ad-important\n1. An advance or delay of a full period leaves a sinusoid unchanged, that is $v(t +- T) = v(t)$. Consequently, an advance by time $t_a$ is equivalent to a delay by time $T-t_a$\n2. Similarly, a delay by time $t_d$ is equivalent to an advance by time $T-t_d$\n```\n\n# Phasors and Phasor Arithmetic\nANY current or voltage in an AC circuit is a sinusoid at the SAME input frequency. Such a current or voltage is characterised by its amplitude and phase angle.\n\nA **phasor** is a complex number that is used to represent the amplitude and phase angle of a sinusoid.  The relationship between the sinusoid and the phasor is described by:\n$$A\\cos (\\omega t +\\theta) \\leftrightarrow A \\angle\\theta$$\n\n```ad-important\n1. The sinusoid is represented using the cosine rather than the sine function. **This is a convention.**\n2. The phasor is a complex number represented here in **polar** form.\n```\n\n*Ampliudes and angles depend on the frequency (even if they are not always shown this way)(this is in the frequency domain)*\n$$A(\\omega)\\cos[\\omega t + \\theta(\\omega)] \\leftrightarrow A(\\omega)\\angle \\theta (\\omega)$$\n\nLowercase $i$ and $v$ is used to indicate a sinusoidal current or voltage (often with a subscript) that is a sinusoidal function of time. Sometimes we will write $i_1$ instead of $i_{1}(t)$\n\nWe will use bold uppercase **I** and **V** to indicate the corresponding phasor current or voltage with the same subscript.\nThe phasors are functions of the input frequency. In an AC circuit, the input frequency is fixed and we often shorten $I_{1}(\\omega)$ to **$I_{bold_{2}}$**. **I cant do bold equations - just read the subscript**\n\n**The bold capital notation of phasor means it is a vector quantity:**\n$$v(t) = A\\cos[\\omega t +\\theta] \\leftrightarrow V_{bold}(\\omega) = V_{bold} = A\\angle \\theta$$\n\n## Example\n![[Attachments/Pasted image 20230419231500.png]]\n## Important Trig Functions\n$\\sin(-\\theta) = -sin(\\theta)$\n$\\cos(-\\theta) = \\cos(\\theta)$\n$\\tan(-\\theta) = -\\tan(\\theta)$\n![[Attachments/Pasted image 20230419231745.png]]\n## Defining phasors as complex numbers\nWe can represent our phasor in the complex plane as:\n![[Attachments/Pasted image 20230419231940.png]]\nWhich has complex coordinates:\n![[Attachments/Pasted image 20230419232014.png]]\n**A** is the magnitude and $\\theta$ is the angle of the phasor: $A = |V_{bold}|$ and $\\theta = \\angle V_{bold}$\nThe phasor can be represented as a complex number: $a = Re(V_{bold})$ and $b = Im(V_{bold})$ \n\nHence, we have: $$a+jb = V_{bold} = A \\angle \\theta$$\n### Why complex planes?\nPhasor arithmetic can be easily accomplished using the two forms of the phasor. For the arithmetic operations addition and subtraction we use the rectangular form of the phasor **V** and for division and multiplication we use the polar form of the phasor **V**.\n\n## Phasor Angle Direction\nA phasor **V** with $Re(V)<0$:\n![[Attachments/Pasted image 20230419234827.png]]\n$$V_{bold}= A\\angle \\theta = a+jb$$\nTwo important observations: $a = a\\angle 0 \\degree$ and $jb=b\\angle90\\degree$\nBecause $\\phi \\neq \\theta$ we reference the phasor angle ALWAYS from the POSITIVE real axis\nConvert from phasor to complex notation: $a = A \\cos(\\theta), b=A\\sin(\\theta), A=\\sqrt{a^{2}+b^{2}}$\n\nWith:\n$$\n \\theta = \\begin{cases} \n      \\tan^{-1}(\\frac{b}{a}) & a>0 \\\\\n      180\\degree - \\tan^{-1}(\\frac{b}{-a}) & a<0 \\\\\n   \\end{cases} \n$$\n\n$1 = 1 \\angle 0\\degree, j=1\\angle 90\\degree, -1=1\\angle \\pm180\\degree, -j = 1\\angle -90 \\degree = 1 \\angle 270 \\degree$\n\n## Complex Algebra\n*Look man, I ain't writing all this shit out*\n![[Attachments/Pasted image 20230420000421.png]]\n## The exponential form of a phasor\nEuler's formula is given by:\n$$e^{j\\theta}=\\cos(\\theta)+j\\sin(\\theta), \\cos(\\theta)=\\frac{e^{j\\theta}+e^{-j\\theta}}{2}, \\sin(\\theta)=\\frac{e^{j\\theta}-e^{-j\\theta}}{2j}$$\n\nIf $Ae^{j\\phi}=A\\cos(\\phi)+jA\\sin(\\phi)$\n\nAnd $A\\angle \\phi = A\\cos(\\phi)+jA\\sin(\\phi)$\n\nThen:\n$$Ae^{j\\phi}=A\\angle \\phi$$\nConversion between polar and exponential form of phasors is immediate.\n\n### Forms of complex voltage or current\n![[Attachments/Pasted image 20230420001444.png]]\n\n## KVL and KCL with complex values\n\n**KVL:**\nIf a set of sinusoidal voltages $v_{i}(t)$ satisfy KVL for an AC circuit, the corresponding phasor voltages $V_{i}(\\omega)$ satisfy the same KVL equation.\n\n**KCL:**\nIf a set of sinusoidal currents $i_{i}(t)$ satisfy KCL for an AC circuit, the corresponding phasor currents $I_{bold_i}(\\omega)$  satisfy the same KCL equation.\n\n# Circuit elements in the time and frequency domains\n\n## Voltage and Current Sources\n![[Attachments/Pasted image 20230420003246.png]]\n**Voltage:** $v(t) = V_{m} \\cos[\\omega t + \\theta] \\leftrightarrow V_{bold}(\\omega)=V_{m}\\angle \\theta$\n**Current:** $i(t) = I_{m} \\cos[\\omega t + \\phi] \\leftrightarrow I_{bold}(\\omega) = I_{m}\\angle\\phi$\n\n## Capacitors\n![[Attachments/Pasted image 20230420003635.png]]\n**Voltage:** $v_{c}(t) = V_{Cm}\\cos[\\omega t + \\theta] \\leftrightarrow V_{bold_{c}}(\\omega) = V_{Cm}\\angle \\theta$\n**Current:** $i_{C}(t) = C \\frac{\\Delta v_{c}(t)}{\\Delta t}=-C\\omega V_{Cm}\\sin[\\omega t + \\theta]=C\\omega V_{Cm}\\cos[\\omega t + \\theta + 90\\degree]$\n\n$$I_{bold_{C}}(\\omega) = j\\omega C V_{bold_{C}}(\\omega)$$\n\n```ad-important\nVoltage and current are **not** in phase\n```\n\n## Inductors\n![[Attachments/Pasted image 20230420005254.png]]\n\n**Current:** $i_{L}(t) = I_{Lm}\\cos[\\omega t + \\phi] \\leftrightarrow I_{bold_{L}}(\\omega) = I_{Lm}\\angle \\phi$\n**Voltage:** $v_{L}(t) = L \\frac{\\Delta i_{L}(t)}{\\Delta t}=-L\\omega I_{Lm}\\sin[\\omega t + \\phi] = L\\omega I_{Lm}\\cos[\\omega t + \\phi + 90\\degree]$\n*Voltage leads current by 90 degrees*\n\n$v_{L}= L \\frac{\\Delta i_{L}(t)}{\\Delta t} \\leftrightarrow V_{bold_{L}}(\\omega) = L\\omega I_{Lm}\\angle(\\phi + 90\\degree)$\n\n$$V_{bold_{L}}(\\omega) = jL\\omega I_{bold_{L}}(\\omega)$$\n\n```ad-important\nVoltage and current are **not** in phase\n```\n\n## Resistors\n![[Attachments/Pasted image 20230420010344.png]]\n**Current:** $i_{R}(t) = I_{Rm}\\cos[\\omega t + \\phi] \\leftrightarrow I_{bold_{R}}(\\omega)=I_{Rm}\\angle \\phi$\n**Voltage:** $v_{R}(t) = Ri_{R}(t) = RI_{Rm}\\cos[\\omega t + \\phi] \\leftrightarrow V_{bold_{R}}(\\omega)=RI_{Rm}\\angle\\phi = RI_{bold_{L}}(\\omega)$\n\n$$V_{bold_R}(\\omega)=RI_{bold_L}(\\omega)$$\n\n```ad-important\nVoltage and current **ARE** in phase\n```\n\n## Summary\n\n|  Time Domain       | Resistor  | Capacitor | Inductor                         |\n| ------- | --------- | --------- | -------------------------------- |\n| Voltage | $R i_{R}$ | $v_{C}$   | $L\\frac{\\Delta i_{L}}{\\Delta t}$ |\n| Current | $i_R$     | $C\\frac{\\Delta v_{C}}{\\Delta t}$          |                   $i_L$               |\n\n| using s-operators | Resistor  | Capacitor         | Inductor |\n| ----------------- | --------- | ----------------- | -------- |\n| Voltage           | $R i_{R}$ | $\\frac{1}{sC}i_C$ | $sLi_L$  |\n| Current           | $i_R$     | $i_C$             | $i_L$    |\n\n| Frequency Domain | Resistor  | Capacitor                | Inductor        |\n| ---------------- | --------- | ------------------------ | --------------- |\n| Voltage          | $R I_{R}$ | $\\frac{1}{j\\omega C}I_C$ | $j\\omega L I_L$ |\n| Current          | $I_R$     | $I_{C}$                  | $I_{L}$         |\n\n# Impedance and Admittance\n\n## Ohms Law in the Frequency Domain\n\nSinusoidal voltage through a circuit element: $v(t) = V_{m}\\cos[\\omega t + \\theta] \\leftrightarrow V_{bold}(\\omega) = V_{m}\\angle \\theta$\n\nThe corresponding current: $i(t) = I_{m}\\cos[\\omega t + \\phi] \\leftrightarrow I_{bold}(\\omega) = I_{m}\\angle \\phi$\n\nWe define Impedance as:\n$$Z_{bold}(\\omega) = \\frac{V_{bold}(\\omega)}{I_{bold}(\\omega)}=\\frac{V_{m}\\angle \\theta}{I_{m}\\angle\\phi}=\\frac{V_{m}}{I_{m}}\\angle(\\theta-\\phi)$$\n\nWe can use impedance with ohms law in the frequency domain:\n```ad-important\nOhms Law in the frequency domain: $V_{bold}(\\omega)=Z_{bold}(\\omega) \\cdot I_{bold}(\\omega)$\nImpedance unit is Ohms $\\ohm$\n```\n\n**Impedance Vocabulary:**\n$$Z_{bold}(\\omega) = R_{bold}(\\omega) + jX(\\omega)$$\n\nWhere **R** is the resistance (real part) and **X** is the reactance (imaginary part)\n\n## Ohm's Law\n*In terms of admittance*\n\n**Admittance:**\n$$Y_{bold}(\\omega)=\\frac{1}{Z_{bold}(\\omega)}=\\frac{I_{bold}(\\omega)}{V_{bold}(\\omega)}$$\n```ad-note\nAdmittance unit is $\\frac{1}{\\ohm}$ (mho) or Siemens (S)\n```\n\nFor an AC circuit in the frequency domain, an RLC circuit can be analysed using the impedances since the system is steady state. Remember in DC circuits, capacitors and inductors act like open and short circuits respectively.\n\n## Impedances of Circuit Elements\n\n**Capacitor:**\n$$Z_{bold_{C}}(\\omega) = \\frac{V_{bold_{C}}(\\omega)}{I_{bold_{C}}(\\omega)}=\\frac{1}{j\\omega C}\\ohm$$\n\n**Inductor:**\n$$Z_{bold_{L}}(\\omega) = \\frac{V_{bold_{L}}(\\omega)}{I_{bold_{L}}(\\omega)} = j\\omega L \\ohm$$\n\n**Resistor:**\n$$Z_{bold_{R}}(\\omega)=\\frac{V_{bold_R}}{I_{bold_{R}}}=R \\ohm$$\n\n```ad-important\nThis means that the value of the impedance **CHANGES** with frequency. For every source frequency applied to a circuit, the impedances of **EVERY** element in that circuit will change.\n```\n\n# What does Impedance Mean?\n![[Attachments/Pasted image 20230425185101.png]]\nImpedance is a property of a circuit element\n#todo\n- [ ] Write a good definition of impedance\n\n# Kirchhoff's Laws\n```ad-important\nKirchhoff's laws apply to all time domain voltages and currents.\n\nTherefore they work for sinusoidal voltages and currents.\n\nHence they work in the frequency domain.\n```\n![[Attachments/Pasted image 20230425185717.png]]\n![[Attachments/Pasted image 20230425185727.png]]\n**Voltage Division:**\n![[Attachments/Pasted image 20230425185759.png]]\n\n## Current and Voltage Division\n![[Attachments/Pasted image 20230425185949.png]]\n\n## Time VS Frequency Domains\n![[Attachments/Pasted image 20230425190248.png]]\n![[Attachments/Pasted image 20230425191243.png]]\n![[Attachments/Pasted image 20230425191305.png]]\n\n# Dependent sources in the time and frequency domains\n![[Attachments/Pasted image 20230425191421.png]]\n\n### Example\n![[Attachments/Pasted image 20230425222251.png]]\n\n# Node Voltage and Mesh Current Analysis using Phasors\n\n## Node analysis in the frequency domain\n- Express element voltages and currents in terms of node voltages.\n- Same as DC case, but using **phasors**\n- Apply **Kirchhoff's Current Law at each node.**\n- Solve simultaneous equations to **find each node voltage.**\n![[Attachments/Pasted image 20230425222630.png]]\n\n## Mesh equations in the frequency domain\n- Express element voltages and currents in terms of mesh currents.\n- Same as the DC case, but using **phasors.**\n- Apply **Kirchhoff's Voltage Law for each current.**\n- Solve simultaneous equations to **find each mesh current.**\n![[Attachments/Pasted image 20230425222915.png]]\n\n### Example\n![[Attachments/Pasted image 20230425222941.png]]\n![[Attachments/Pasted image 20230425222953.png]]\n![[Attachments/Pasted image 20230425223005.png]]\n### Example 2\n![[Attachments/Pasted image 20230425223035.png]]\n![[Attachments/Pasted image 20230425223047.png]]\n",
        "Week 9 - Complex Power and Complex Frequency.md": "#ELEC/2070 #Circuits #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 9 2023 Complex power and complex frequency.pdf]]\n\n```ad-attention\ntitle: REALLY IMPORTANT\nVariables paired with a * means they are complex conjugates\n```\n\n\n# Power\n\n## Instantaneous power: DC + Abrupt Change\n\n**Instantaneous power in a resistor:**\n$p(t)=v(t)i(t)=i^{2}(t)R= \\frac{v^{2}(t)}{R}$\n\n**Instantaneous power in an inductor:**\n$p(t)=v(t)i(t)=Li(t) \\frac{di(t)}{dt}=\\frac{1}{L}v(t) \\int^{t}_{-\\infty}v(t')dt'$\n\n**Instantaneous power in a capacitor:**\n$p(t)=v(t)i(t)=Cv(t) \\frac{dv(t)}{dt}=\\frac{1}{C}i(t) \\int^{t}_{-\\infty}i(t')dt'$\n\n![[Attachments/Pasted image 20230526113413.png]]\n\n![[Attachments/Pasted image 20230526113450.png]]\n\n### Instantaneous Power: Graphed\n![[Attachments/Pasted image 20230526113519.png]]\n**Instantaneous power is conserved in a circuit**\n\n### Instantaneous power in the time domain: AC example\n![[Attachments/Pasted image 20230526113631.png]]\n\n\n## Average Power Received by Ideal Components\n ```ad-note\ntitle: Average Power\n$P =\\frac{1}{T}\\int^{t_{0}+T}_{t_{0}} p(t) dt (W)$\n```\n\n**Instantaneous AC Power**\n$$p(t) = \\frac{V_{m}I_{m}}{2}[\\cos(\\theta_{V}-\\theta_{I})+\\cos(\\theta_{V}+\\theta_{I})]$$\n\n**Average AC Power:**\n$$P = \\frac{V_{m}I_{m}}{2}\\cos(\\theta_{V}-\\theta_{I})$$\n![[Attachments/Pasted image 20230526114648.png]]\n\n### A Problem\n![[Attachments/Pasted image 20230526114845.png]]\n![[Attachments/Pasted image 20230526114903.png]]\n\n### Another Problem\n![[Attachments/Pasted image 20230526115000.png]]\n![[Attachments/Pasted image 20230526115014.png]]\n![[Attachments/Pasted image 20230526115027.png]]\n\n# Apparent Power and Power Factor\n\n## Apparent Power\nRecall that average power for sinusoidal forcing functions is:\n$$P = \\frac{1}{2}V_{m}I_{m}\\cos(\\theta-\\phi)$$\nWhere: $\\theta$ = Angle of voltage\nWhere: $\\phi$ = Angle of Current\n\nOr using effective values: $P = V_{eff}I_{eff}\\cos(\\theta - \\phi)$\n\nThe **apparent power** is the equivalent DC average power and is given by:\n$$\\frac{1}{2}V_{m}I_{m} \\text{ Or }V_{eff}I_{eff}$$\nWhere our units are VA (Volt Amps)\n\nThe ratio of the real or average power to the apparent power is the **power factor**, PF:\n$$PF = \\frac{\\text{average power}}{\\text{apparent power}} = \\frac{P}{V_{eff}I_{eff}}$$\n\nFor the sinusoidal case, this is just:\n$$\\cos(\\theta_{V}-\\theta_{I})\\text{ Or }\\cos(\\theta - \\phi)$$\n\n## Power Factor\nFor a purely resistive load, the voltage and current are in phase - power factor (PF) is 1\nThus the average power and apparent power are **EQUAL**\n\n(Note a network with inductors and capacitors may have PF = 1 if the element values and\noperating frequency are carefully chosen to create and input impedance with zero phase\nangle.)\n\nPurely reactive load: PF = 0\nIn between, e.g., PF = 0.5 means $\\theta_{V}-\\theta_{I}=60\\degree \\text{ or }-60\\degree$\n$\\theta_{V}-\\theta_{I}=60$ means an inductive load (voltage LEADS the current)\n$\\theta_{V}-\\theta_{I}=-60$ & means an capacitive load (current LEADS the voltage)\n\n### Example\n![[Attachments/Pasted image 20230526120947.png]]\n![[Attachments/Pasted image 20230526121000.png]]\n![[Attachments/Pasted image 20230526121019.png]]\n![[Attachments/Pasted image 20230526121048.png]]\n\n# Complex Power\nIn the **frequency domain** the current and voltage are in general given by:\n$$I(\\omega)=I_{m}\\angle \\theta_{I}\\text{  And  }V(\\omega)=V_{m}\\angle\\theta_{V}$$\n\nThe **complex power** delivered to the element is defined (in polar form) as:\n$$S = \\frac{VI*}{2} = \\frac{(V_{m}\\angle\\theta_{V})(I_{m}\\angle-\\theta_{I})}{2}=\\frac{V_{m}I_{m}}{2}\\angle\\theta_{V}-\\theta_{I}$$\n\nAlternatively: $S = V_{eff}I_{eff}*$\n\nThe **apparent power** is the magnitude of the complex power: $|S| = \\frac{V_{m}I_{m}}{2}$\n\n## Why do we care about complex power?\n*The complex power allows us to calculate the contributions to the total power in a clean and precise way.*\n\nConverting the complex power from polar form to rectangular we get: $S = P+jQ$\n$$S = \\frac{V_{m}I_{m}}{2}\\cos(\\theta_{V}-\\theta_{I})+j \\frac{V_{m}I_{m}}{2}\\sin(\\theta_{V} - \\theta_I)$$\n\nTherefore:\n$$P = \\frac{V_{m}I_{m}}{2}\\cos(\\theta_{V} - \\theta_{I})$$\n$$Q = \\frac{V_{m}I_{m}}{2}\\sin(\\theta_{V}- \\theta_I)$$\n\n## The power triangle \n![[Attachments/Pasted image 20230526123028.png]]\n\n### Reactive power and VA\nThe dimensions of reactive power are the same as the real power P, the complex power S\nand the apparent power $|S|$. To avoid confusion, with these other quantities, the unit of\nQ is volt-ampere-reactive.\n\nThe physical interpretation of reactive power is the time rate of energy flow back and\nforth between the source and the reactive components of the load. These components\nalternatively charge and discharge, which leads to current flow from the source and to\nthe source respectively.\n\n## Complex Power WRT Impedance\n**Units:**\nComplex Power: VA\nAverage Power: W\nReactive Power: VAR (R means reactive)\n![[Attachments/Pasted image 20230526123636.png]]\n![[Attachments/Pasted image 20230526123658.png]]\n![[Attachments/Pasted image 20230526123813.png]]\n\n**Complex power is conserved in a circuit**\n$$\\sum\\limits_{\\text{All elements}} \\frac{V_{k}I_{k}}{2}=0$$\n\n**Average power is conserved in a circuit**\n$$\\sum\\limits_{\\text{All elements}} Re(\\frac{V_{k}I_{k}}{2})=0$$\n\n**Reactive power is conserved in a circuit**\n$$\\sum\\limits_{\\text{All elements}} Im(\\frac{V_{k}I_{k}}{2})=0$$\n\n# Maximum Power Transfer\n![[Attachments/Pasted image 20230526124414.png]]\nThe complex power delivered to the load:\n$$S_{L}= \\frac{V_{L}*I_{L}}{2}$$\n\nWe need to calculate $V_L$ and $I_{L}$ first, then calculate $S_{L}$:\n$$I_{L}= \\frac{V_t}{(Z_{t}+ Z_{load})}$$\n$$V_{L}= Z_{load}*I_L$$\n$$S_{L}= \\frac{Z_{load}*I_{L}*I_{L}}{2}= \\frac{Z_{load}*|I_L|^{2}}{2}$$\n\n```ad-bug\ntitle: Useful in lab/practice\n$S_{L}= \\frac{V_{L}*V_{L}}{2*Z_{load}}= \\frac{|V_{L}|^2}{2*Z_{load}}$\n```\n\n## Average Power Delivered to Load\n![[Attachments/Pasted image 20230526125338.png]]\n\nThe **complex** power transferred to the load:\n$$S_{L}= \\frac{Z_{load}*|I_{L}|^2}{2}$$\n\nThe **average** power transferred to the load:\n$$P_{L}=Re\\{S_{L}\\}= \\frac{Re\\{Z_{load}\\}*|I_{L}|^{2}}{2} = \\frac{|V_{L}|^{2}}{2Re\\{Z_{load}\\}}$$\n\n## Maximum AVERAGE power transfer\n![[Attachments/Pasted image 20230526125819.png]]\n```ad-important\nThe average power transferred from a fixed source circuit [with a Thevenin equivalent] to a load is maximum when: \n\n$Z_{load} = Z_{t}$\n```\n$$Z_{t}= R_{t}+ jX_{t}$$\n$$Z_{Load}= R_{t}- jX_{t}$$\n$$Z_{t}+Z_{load} = 2R_{t}$$\n**Note**: This is the same case for DC power transfer\n\nWhen $Z_{load}=Z_t$ The total impedance seen by the Thevenin source is purely resistive (the load reactance cancels the reactance of the Thevenin impedance)\n\n### Theorem for the sinusoidal steady state\nAn independent voltage source in series with an impedance $Z_{th}$ or an independent current source in parallel with an impedance $Z_{th}$ delivers a **maximum average power** to that load impedance $Z_L$ which is the conjugate of $Z_{th}$ or $Z_{L}=Z_{th}$\n\n**Proof:**\n![[Attachments/Pasted image 20230526131352.png]]\n\n## Maximum Average Power Transfer\n![[Attachments/Pasted image 20230526131448.png]]\n$Z_{load} = Z_{t}$\n$Z_{t} = R_{t}+jX_{t}$\n$Z_{load}=R_{t}-jX_{t}$\n$Z_{t}+Z_{load} = 2R_{t}$\n$S_{L}= \\frac{Z_{load}*|I_{L}|^2}{2}$\n\n$I_{L}= \\frac{V_{t}}{2R_{t}}$\n$V_{L}=(R_{t}-jX_{t})I_{L}$\n\n$$P_{L,max}=\\frac{R_{t}*|I_{L}|^{2}}{2}= \\frac{|V_{t}|^{2}}{8R_{t}}$$\n*This is the maximum available average power from the source circuit*\n\n### Example\n![[Attachments/Pasted image 20230526132144.png]]\n\n### Summary of AC power terms\n![[Attachments/Pasted image 20230526132220.png]]\n\n# Complex Frequency\n\n## The Damped Sinusoid \nConsider the damped sinusoidal voltage forcing function (which is real):\n$$v(t) = V_{m}e^{\\sigma t}\\cos(\\omega t + \\theta)$$\nNormally $\\sigma$ is negative (damped) but is can be positive (feedback loop)\n\nThe equation is very important, it captures all the forcing functions that we have been studying into ONE function\n1. $\\sigma = \\omega = 0$ We have a DC forcing function for the voltage.\n2. $\\sigma = 0$ Now we have a sinusoidal forcing function for the voltage.\n3. $\\omega = 0$ Now we have an exponential forcing function for the voltage.\nThis function captures all the important functions of time for both current and voltage.\nThe variable $\\sigma$ has the units frequency (since it multiplies with $t$ to give a dimensionless number).\n\n### A mathematical definition\nA general definition:\n$$f(t) = Ke^{st}$$\nHere K and S are complex numbers and $s = (\\sigma + j\\omega)$ is known as the complex frequency (since it multiplies with $t$ to give a dimensionless value - therefore it has a unit of $s^{-1}$).\n\n1. The complex frequency of a DC voltage or current is s = 0\n2. The complex frequency of an exponential voltage or current is $s = \\sigma$  where $(\\omega = 0)$\n3. the complex frequency of a sinusoidal voltage or current could be $s = j \\omega$ where $\\sigma = 0$\n\nFor the sinusoidal case:\n\n## The Sinusoidal Case\nLet us look at the sinusoidal case more closely\n![[Attachments/Pasted image 20230526133824.png]]\nSinusoidal voltage is given by:\n$$v(t) = V_{m}\\cos(\\omega t + \\theta)$$\nUsing Euler's Identity, this function can be converted to exponential functions only:\n$$v(t) = \\frac{1}{2} [e^{\\omega t + \\theta}+e^{-j(\\omega t + \\theta)}]$$\n$$=(\\frac{1}{2}V_{m}e^{j\\theta})e^{j\\omega t}+ (\\frac{1}{2}V_{m}e^{-j\\theta})e^{-j\\omega t} $$\n\nThis latter equation can be put into our general form\n![[Attachments/Pasted image 20230526134111.png]]\n![[Attachments/Pasted image 20230526134155.png]]\n*Now we are ready to create the general form of the exponentially damped sinusoid*\n![[Attachments/Pasted image 20230526134313.png]]\n\n## Understanding the Complex Frequency S\n![[Attachments/Pasted image 20230526134403.png]]\n*Complex conjugates can create real values.*\n\nWe may identify either of the complex frequencies with a sinusoidal voltage but in practice, we don't always include both complex conjugates in our analysis. It is just understood that they are both involved.\n\n## Physical nature of the complex frequency\nSo now our real sinusoidal forcing function is:\n$$v(t) = K_{1}e^{s_{1}t}+K_{2}e^{s_{2}t}$$\nWhere:\n$s_{2} = s_{1}*$\n$K_{2}=K_{1}*$\n\nFor example:\n$$s_{1}=j10\\text{ and } K_{1}=6-j8, \\rightarrow K_{1}=\\frac{1}{2}V_{m}e^{j\\theta}=10\\angle-53.1\\degree$$\n\nWe get the forcing function, the **real** sinusoid: $20\\cos(10t-53.1\\degree)$\n\n*In general, the complex frequency s is associated with a real function when it is\naccompanied by its complex conjugate. The complex frequency contains all the\nparameters we need to understand the time behaviour of the voltage*\n\n*The specific phase and amplitude of a general exponentially damped sinusoid is\ncontained in K and its complex conjugate. These are the NON time dependent\nparameters.*\n\n## Features of the Complex Frequency\n1. The complex frequency describes an exponentially varying sinusoidal function\n2. the real part of s is associated with the exponential variation\n\t- If it is negative, the sinusoid decays as t increases\n\t- If it is positive, the sinusoid increases with t\n\t- if it is zero, the sinusoidal amplitude is constant\n3. The larger the magnitude of the real part of s, the greater the rate of exponential decrease or increase\n4. The imaginary part of s describes the sinusoidal part of the variation\n5. A large value for the imaginary part of s indicates a more rapidly varying sinusoidal function of time.\n\n## The Complex Frequency S\nIt is customary to use the letter $\\sigma$ to designate the real part of s and $\\omega$ (NOT $j\\omega$) to designate the imaginary part.\n$$s = \\sigma + j\\omega$$\nThe parts of the complex frequency are:\n1. $\\sigma$ is the neper frequency (in nepers per seconds)\n2. $\\omega$ is the angular frequency (in radians per second)\n3. $f=\\frac{\\omega}{2\\pi}$ is the cycle frequency'\n4. The complex frequency s is measured in complex nepers per second or complex radians per second\n\n### Example\n![[Attachments/Pasted image 20230526141856.png]]\n\n# A Final Note\nWhen are the Thevenin and Norton equivalent circuits appropriate?\n![[Attachments/Pasted image 20230526142229.png]]\n![[Attachments/Pasted image 20230526142250.png]]",
        "Week 8 - AC Thevenin+Norton Equivalents, Superposition, and AC Power.md": " #ELEC/2070 #Circuits #UniNotes\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n**Slides:**\n[[Attachments/ELEC2070 Week 8 2021 AC Thevenin Norton Superposition.pdf]]\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n*We are concerned with applying one or more sources of electrical energy (a source defined by some forcing function) to a circuit and then quantitatively determining the consequent response throughout that circuit.*\n\nNegative exponentials are also very common (as we have already found) and we show later that when we combine a exponential with a sinusoid, this leads us to the concept of the **complex frequency.** \n\nAny periodic function can be **composed as a sum of sinusoidal functions** with frequency that are **integral multiples of f0** (Fourier Transform) \n\nAlso, the **differentials and integrals of sinusoids are sinusoids** (this is also true for exponentials) making the analysis easier. \n\n```ad-attention\ntitle: Overall\nAll the shortcuts and methods used for DC forcing functions are applicable for AC forcing functions.\n```\n\n# Adding Impedances\n\n**Series:**\n![[Attachments/Pasted image 20230428124301.png]]\n$$\\textbf{Z}_{eq} = \\textbf{Z}_{1} + \\textbf{Z}_{2} + ...+\\textbf{Z}_{n}$$\n\n**Parallel:**\n![[Attachments/Pasted image 20230428124504.png]]\n\t$$\\textbf{Z}_{eq} = \\frac{1}{\\frac{1}{\\textbf{Z}_{1}}+{\\frac{1}{\\textbf{Z}_{2}}}+...+{\\frac{1}{\\textbf{Z}_{n}}}}$$\n\n# Thevenin & Norton Equivalent Circuits in the Frequency Domain\n*Similar to the DC case but replace resistance with impedance*\n![[Attachments/Pasted image 20230428125118.png]]\n```ad-example\ntitle: **Thevenin** equivalent for the source circuit\n\n![[Attachments/Pasted image 20230428125136.png]]\n```\n```ad-abstract\ntitle: **Norton** Equivalent for the source circuit\n\n![[Attachments/Pasted image 20230428131707.png]]\n```\n\n## How to calculate the equivalent circuit in the frequency domain \nThe Thevenin or Norton equivalent circuit A involves three parameters: the open-circuit voltage $\\textbf{V}_{oc}$ the short-circuit current $\\textbf{I}_{sc}$ and the Thevenin impedance $\\textbf{Z}_t$\n$$\\textbf{V}_{oc}=\\textbf{Z}_{t} \\textbf{ I}_{sc}$$\n![[Attachments/Pasted image 20230428133445.png]]\n**a)** An open circuit is connected across the terminals of Circuit A - The voltage across that open circuit is equal to $\\textbf{V}_{oc}$\n**b)** A short circuit is connected across terminals of Circuit A - The current through that short circuit is the short circuit current $\\textbf{I}_{sc}$\n**c)** $\\textbf{Z}_t$ is the equivalent impedance of Circuit A* Which is formed by replacing all the independent voltage (or current) sources by short (or open) circuits.\n*Dependent sources are not replaced with open or short circuits.*\n\n## How do?\n![[Attachments/Pasted image 20230428140724.png]]\n### Example 1\n![[Attachments/Pasted image 20230428140740.png]]\n\n**Gather Variables:**\n$\\omega = 160 \\text{ rad/s}$\n$\\textbf{V}_{s}=36 \\angle 0\\degree$\n\n$\\textbf{Z}_{L}(\\omega)=j \\omega L = j160*2.25 = j360\\ohm$\n$\\textbf{Z}_{C}=\\frac{1}{j \\omega C}=\\frac{1}{j160*50*10^{-6}} = -j125 \\ohm$\n$\\textbf{Z}_{R}=R=200 \\ohm$\n\nReplace circuit values with impedances.\n![[Attachments/Pasted image 20230428141231.png]]\n![[Attachments/Pasted image 20230428141508.png]]\n$$\\textbf{V}_{oc}=\\frac{j360}{200+j360}*36$$\n*No current through capacitor*\n\n$$\\textbf{V}_{oc}=31.47 \\angle 29.1\\degree V$$\n*Phasor form*\n\n**Switch off voltage source:**\n$$\\textbf{Z}_{t}= -j125 + j360||200$$\n$$\\textbf{Z}_{t}= -j125 + \\frac{200*j360}{200+j360}$$\n$$\\textbf{Z}_{t}= -j125 + 152.83+j84.91$$\n$$\\textbf{Z}_{t}= 158 \\angle (-14.7\\degree)\\ohm$$\n![[Attachments/Pasted image 20230428142151.png]]\n**This is an equivalent circuit to the time domain frequency circuit**\n\n# Source Transformation in the frequency domain\n*Similar to DC, but replace resistance with impedance*\n![[Attachments/Pasted image 20230428143708.png]]\n\n### Example 1 Using Source Transformation\n![[Attachments/Pasted image 20230428144113.png]]\n$$j360||200 = \\frac{200*j360}{200+j360}=152.83+j84.91=174.8\\angle 29.1\\degree$$\n\n![[Attachments/Pasted image 20230428144653.png]]\n$$\\textbf{V}_{oc}=(174.8\\angle29.1\\degree)(0.18\\angle0\\degree)=31.5\\angle29.1$$\n\n![[Attachments/Pasted image 20230428144839.png]]\n$$174.8\\angle 29.1\\degree - j125=152.83+j84.91-j125=152.83-j40.094$$\n\n# Superposition in the Frequency Domain\n*Frequency domain circuits are analysed ONE FREQUENCY AT A TIME. This means that all sources must be at the SAME frequency for a single calculation*\n\nIf there are sources at different frequencies, we use superposition to understand the overall behaviour of the circuit.\n\n- The sources with the **same frequency** are analysed together while all the **\"other frequency\" sources are \"zeroed\"**. *Independent voltage sources = shorts, Independent current sources = open*.\n\n- All the individual solutions corresponding to each frequency are then **added up in the time domain** to give the total time-domain solution.\n\nThere can also be sources at DC (or zero frequency) - This solution can be added to the AC time-domain solution to obtain the total solution.\n\n### Example\n*Find **v0** in the following circuit*\n![[Attachments/Pasted image 20230428150853.png]]\nFind $\\textbf{V}_{o1}$\n**Zero Source 2**\n![[Attachments/Pasted image 20230428151054.png]]\n![[Attachments/Pasted image 20230428151212.png]]\n\nFind $\\textbf{V}_{o2}$\n**Zero Source 1**\n![[Attachments/Pasted image 20230428151142.png]]\n![[Attachments/Pasted image 20230428151232.png]]\n$$v_{o}(t) = 15.46\\cos(50t+104.9\\degree)+20.24\\cos(10t+10.94\\degree)V$$\n\n#### Graphical Representation\n![[Attachments/Pasted image 20230428151427.png]]$$v_{o}(t) = 15.46\\cos(50t+104.9\\degree)+20.24\\cos(10t+10.94\\degree)V$$\n### Example 2\n*Find the steady state current i(t)*\n![[Attachments/Pasted image 20230428152058.png]]\n$$v_{s}(t) = 8 +8\\cos(400t-135\\degree)V$$\n\nHere, a single source has 2 components. DC ($8$) and AC ($8\\cos(400t-135\\degree)$) \n\n$\\omega_{DC}$ = 0 rad/s\n$\\omega_{AC}$ = 400 rad/s\n\n**DC:** $Z_{L}(0)=j0*0.05=0\\ohm$ \n**AC:** $Z_{L}(400) = j400*0.05 = j20\\ohm$\n![[Attachments/Pasted image 20230428152439.png]]\n$$i(t)=0.533 + 0.32\\cos(400t-188.1\\degree)A$$\n\n### Example 2 But a bit bigger\n![[Attachments/Pasted image 20230428153143.png]]\n\n## Time Domain and Frequency Domain Relationships\n![[Attachments/Pasted image 20230428153237.png]]\n\n# Phasor Diagrams\nPhasors are complex numbers and can be graphed in the complex plane. The relationship between phasors when drawn on the complex plane is called a phasor diagram.\n\n*A phasor diagram is graphical representation of phasors and their relationships on the complex plane.*\n\n**Why phasor diagrams?**\n1. Provides a graphical method for solving problems for when calculations are tedious.\n2. Makes checking analytical solutions much easier\n3. Helps in certain symmetrical problems by enabling the symmetry to be recognised and helpfully applied.\n\nMultiplication and division result in the addition and subtraction respectively of the phasor **ANGLES**. The amplitude also changes but depends on the scale of the diagram (e.g. Current and voltage may have their own scale, but the angles will be the same).\n\n```ad-example\ntitle: Multiplication/Division\n$\\text{Multiplication } \\rightarrow V_{1}*V_{2}= \\theta_{1}+\\theta_{2}$\n\n$\\text{Division } \\rightarrow V_{1}/V_{2}= \\theta_{1}-\\theta_{2}$\n\n![[Attachments/Pasted image 20230428154619.png]]\n```\n```ad-summary\ntitle: Addition/Subtraction\n![[Attachments/Pasted image 20230428155425.png]]\n\n```\n\n### Example 3\n*Find the voltages across each circuit element*\n**Assume current is:** $\\textbf{I}=I_{m}\\angle 0$\n![[Attachments/Pasted image 20230428155644.png]]\nResistor Voltage: $\\textbf{V}_{R} = RI_{m} \\angle 0$\n\nInductor Voltage: $\\textbf{V}_{L}=j \\omega LI_{m}\\angle0 = \\omega L I_{m}\\angle 90\\degree$\n\nCapacitor Voltage: $\\textbf{V}_{C}=-j \\frac{1}{\\omega C}I_{m}\\angle 0 = \\frac{1}{\\omega C}I_{m}\\angle -90\\degree$\n\n![[Attachments/Pasted image 20230428160216.png]]\nUsing KVL we find:\n$V_{s}=V_{R}+V_{L}+V_{C}=V_{R}+(V_{L}+V_{C})$\n\nThe phasor $V_{L}+V_{C}$ is given by:\n$$V_{L}+V_{C}=j(\\omega L - \\frac{1}{\\omega C})(I_{m}\\angle 0\\degree)=(\\omega L - \\frac{1}{C\\omega})(I_{m}\\angle 90 \\degree)$$\n\nThis is much easier on the phasor diagram:\n![[Attachments/Pasted image 20230428161041.png]]\n$$V_{S} = V_{R}+(V_{L}+V_{C})=R I_{m}+j(\\omega L - \\frac{1}{C\\omega})(I_{m})$$\n\nEasily done on the phasor diagram:\n![[Attachments/Pasted image 20230428161022.png]]\n\n# The Natural Response in AC Circuits\n*Generally, to find the complete response of an AC circuit with switches:*\n1. Represent the required (complete) response by a differential equation.\n2. Find the general solution of the homogenous differential equation. This solution is the natural response $v_{n}(t)$. The natural response will contain unknown constants that will be evaluated later.\n3. Find a solution of the differential equation due to the AC source. This solution is the forced response $v_{f}(t)$.\n4. Represent the complete response of the circuit as $v(t)=v_{n}(t)+v_{r}(t)$\n5. Use the initial conditions, for example, the initial values of the currents in inductors and the voltage across capacitors to evaluate the unknown constants.\n\n**This process is not difficult using phasors**\n\n### Example 4\nConsider the switched circuit problem:\n![[Attachments/Pasted image 20230428163148.png]]\n**Step 1**: For t<0 the switch is open. (Both circuits are equivalent just in time (a) and frequency (b) domains\n![[Attachments/Pasted image 20230428163347.png]]\nVoltage division gives us the voltage across the capacitor:\n$$V(5) = \\frac{-j4}{4-j4} 12 \\angle 0\\degree = \\frac{48 \\angle -90\\degree}{5.66\\angle -45\\degree}=8.485\\angle -45\\degree V$$\n\nIn the time domain, the forced response (steady state voltage): $v(t) = 8.485\\cos (5t-45\\degree)V$\nAt t= 0 the voltage across the capacitor is: $8.485\\cos(0-45\\degree)=6V$\n\nRemember, the capacitor voltage will be 6V just after (t=0+)\n\n**Step 2:** For t>0 we have a new circuit (a) or in the frequency domain (b)\n![[Attachments/Pasted image 20230428215550.png]]\nVoltage division gives us the voltage across the capacitor:\n$$V(5) = \\frac{-j4}{2-j4} 12 \\angle 0\\degree = \\frac{48 \\angle -90\\degree}{4.47\\angle -63.4\\degree}=8.485\\angle -45\\degree V$$\nTime domain forced response (steady state voltage): $v(t)=10.74\\cos(5t-26.6\\degree)V$\n**Step 3:** Immediately after the switch is closed, the circuit is not in steady state and hence\nthe natural response will be:$$v_n(t)=Ke^{\\frac{-t}{R_{t}C}}$$\n$R_{t}C = 2*50*10^{-3}=0.1$ s\n![[Attachments/Pasted image 20230428220451.png]]\n$$v(t) = v_{n}(t)+v_{f}(t) = Ke^{-10t}+10.74\\cos(5t-26.6\\degree)$$\n$10.74\\cos(5(0)-26.6\\degree) = 9.6$\nWhen $t=0$, $v(t) = 6V$ Therefore: $6=K+9.6$ Therefore $K=-3.6$\n\n![[Attachments/Pasted image 20230428221434.png]]\n\n# Power\nWe are always interested in the circuit response BUT we are also interested in:\n1. The amount of energy supplied from the source(s)\n2. The amount of energy dissipated or stored within a circuit\n3. The way in which energy is delivered to the points at which the responses are determined.\n\nPrimarily, we want the *rate* at which power is being stored or generated, hence we are interested in **POWER** (Joules per second)\n\n## AC Power\nDifferent kinds of power for different kinds of signals, i.e,\n- **Instantaneous power** - relates to any signal\n- **Average power** - relates to periodic signals.\n- **Complex power** - Since AC currents and voltages are described using complex numbers (phasors)\n\n## Instantaneous Power\n**Instantaneous power:**\n*Only relevant to the time domain*\n$$p(t) = v(t)*i(t) W$$\n![[Attachments/Pasted image 20230428222633.png]]\nThe AC currents and voltages (note they have the same $\\omega$) across any element (in general) is:\n$$v(t) = V_{m}\\cos(\\omega t + \\theta_{V})$$\n$$i(t) = I_{m}\\cos(\\omega t + \\theta_I)$$\n\nSubbing in these functions to our instantaneous power equation and using some trig functions we get:\n\n$$p(t) = \\frac{V_{m}I_{m}}{2}[\\cos(\\theta_{V}-\\theta_{I}) + \\cos(2\\omega t + \\theta_{V} + \\theta_{I})]$$\n\n$\\cos(\\theta_{V}-\\theta_{I})$ = Constant\n$\\cos(2\\omega t + \\theta_{V} + \\theta_{I})$ = Periodic in time (at twice the frequency)\n![[Attachments/Pasted image 20230428224013.png]]\n\n\n# Power of Periodic Signals\n![[Attachments/Pasted image 20230428224044.png]]\nWe only need to examine the average power over one period.\n\n## Average Power\n**Average Power:**\n$$P = \\frac{1}{T}\\int^{t_{0}+T}_{t_{0}}p(t) dt$$\n*Unit: Watts - It is ONLY defined over one period, T (since it all repeats again during the next T)*\n\nThe average power may be computed by integrating the instantaneous power over ANY interval which is one period in length.\n\nUsing our instantaneous power:\n$p(t) = \\frac{V_{m}I_{m}}{2}[\\cos(\\theta_{V}-\\theta_{I}) + \\cos(2\\omega t + \\theta_{V} + \\theta_{I})]$\n\n```ad-note\nAverage AC Power:\n\n$P=\\frac{V_{m}I_{m}}{2}\\cos(\\theta_{V}-\\theta_{I})$\n\n```\n\n### Example nu,ber\n![[Attachments/Pasted image 20230428224749.png]]\n\n### Average power for a sinusoidal function\nGiven the time-domain voltage $v = 4\\cos\\frac{\\pi t}{6}V$  find both the average power and an expression for the instantaneous power that result when the corresponding phasor voltage phasor voltage $V=4\\angle 4\\degree V$ is applied across an impedance $Z = 2\\angle 60\\degree \\ohm$\n\nThe phasor current is $\\frac{V}{Z}=2\\angle -60\\degree A$, and so the average power is:\n$P=\\frac{1}{2}(4)(2)\\cos 60\\degree = 2 W$\n\nTime dependent voltage is: $v(t) = 4 \\cos \\frac{\\pi t}{6} V$\nTime dependent current is: $i(t) = 2 \\cos(\\frac{\\pi t}{6}-60\\degree)$\nInstantaneous Power: $p(t) = 8 \\cos \\frac{\\pi t}{6} * \\cos(\\frac{\\pi t}{6}-60\\degree)=2+4\\cos(\\frac{\\pi t}{3}-60\\degree)W$\n\n# Power across Inductive Load\n#todo \n- [ ] Convert these to text\n\n![[Attachments/Pasted image 20230428225825.png]]\n\n## AC Average power of the circuit elements\n![[Attachments/Pasted image 20230429003155.png]]\n## Average power defined using Impedance\n![[Attachments/Pasted image 20230429004825.png]]\n\n## The Effective value of a Periodic Signal\nThe effective value of any periodic current (or voltage) is equal to the value of the direct current (or voltage) which, flowing through a resistance R, delivers the same power to R as the periodic current (or voltage) does.\n![[Attachments/Pasted image 20230429005015.png]]\n\n## Root Mean Square Values\n![[Attachments/Pasted image 20230429005315.png]]\n\n### Example\n![[Attachments/Pasted image 20230429005615.png]]\n\n## RMS of other Periodic Waveforms\n![[Attachments/Pasted image 20230429005655.png]]\n\n# Complex Power\n![[Attachments/Pasted image 20230429005753.png]]\n\n## Reactive power\n![[Attachments/Pasted image 20230429005819.png]]\n\n### Explanation\nPurely reactive loads such as inductors and capacitors dissipate zero power, yet the fact that they drop voltage and draw current gives the deceptive impression that they actually do dissipate power. This “phantom power” is called reactive power, and it is measured in a unit called Volt-Amps-Reactive (VAR), rather than Watts. The mathematical symbol for reactive power is the capital letter Q. The actual amount of power being used, or dissipated, in a circuit is called the real (average) power, and it is measured in Watts (symbolized by the capital letter P, as always). \nAs a rule, real power is a function of a circuit’s dissipative elements, usually resistances (R). Reactive power is a function of a circuit’s reactance (X).\n\n## Complex power wrt Impedance\n![[Attachments/Pasted image 20230429005917.png]]\n\n## Complex power in terms of impedance\n![[Attachments/Pasted image 20230429005953.png]]\n\n## Power in the frequency domain\n![[Attachments/Pasted image 20230429010031.png]]",
        "Week 6 - Complete Response and Stability.md": "#ELEC/2070 #Circuits #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 6 2023 Complete Response and Stability.pdf]]\n\n**Lab Sheet**:\n[[Attachments/ELEC2070 2023 Laboratory Worksheet for Weeks 6 and 7.pdf]]\n\n# Complete Response for Switched First order Circuits\n![[Attachments/Pasted image 20230404131122.png]]\n\n# With Time-Varying Sources\n1. Find the differential equation using Kirchhoff's and Ohm's laws. Need an initial condition for the complete response.\n2. Find the forced response (including coefficients) using the differential equation (no initial conditions are needed)\n3. Find the time constant; then write the natural response (with one unknown coefficient)\n4. Add two responses together (the complete response now has one unknown coefficient)\n5. Use the initial condition to find the unknown coefficient\n![[Attachments/Pasted image 20230419191356.png]]\n\n## A Useful Relationship\nA cosine waveform and a sine waveform with the same frequency, when added together, make a cosine waveform with a phase shift\n$$A*cos(\\omega t) + B*sin(\\omega t) = \\sqrt{A^{2}+ B^{2}}*cos(\\omega t - \\theta)$$\n\nProvable using Euler's formula: $\\theta=tan^{-1}(\\frac{B}{A})$\n\n# Complete Response for Second Order Circuits\n$$x(t) = x_{n}(t) + x_{f}(t)$$\n1. Find the differential equation and the initial conditions using Kirchhoff's and Ohm's laws.\n2. Find forced response (including coefficients) from the differential equation (no initial conditions needed)\n3. Find the natural frequencies; then write the natural response (with two unknown coefficients if second order)\n4. Add together (complete response with two unknown coefficients if second order)\n5. Use two initial conditions to find the remaining two unknown coefficients, for example. $x(0)$ and $\\frac{{dx(0)}}{dt}$\n\n## Summary for source-free RLC Circuits\n![[Attachments/Pasted image 20230419192818.png]]\n\n# Types of Natural Responses for Second Order Circuits\nDifferential Equation:\n$$\\frac{{d^{2}}}{dt^{2}}x(t) + 2\\alpha \\frac{d}{dt}x(t)+\\omega_0^2 x(t)=f(t)$$\n\nCharacteristic equation:\n$$s^{2}+2\\alpha s+\\omega_0^2=0$$\n![[Attachments/Pasted image 20230419194128.png]]\nAlternatively, we could use, \nDamping Ratio: $$\\zeta=\\frac{\\alpha}{\\omega_{0}}$$\nWhere\n$\\zeta < 1 \\rightarrow$ Under damped\n$\\zeta = 1 \\rightarrow$ Critically damped\n$\\zeta > 1 \\rightarrow$ Over damped\n\n## Example\n![[Attachments/Pasted image 20230419194621.png]]\n![[Attachments/Pasted image 20230419194724.png]]\n# Parallel RLC Circuit Problem\n![[Attachments/Pasted image 20230419194818.png]]\nConsider a parallel RLC circuit having an inductance of $10mH$ and a capacitance of $100\\mu F$. Determine the resistor values that would lead to overdamped and underdamped responses.\n\nWe first calculate the resonant frequency of the circuit:\n$$\\omega_{0}=\\sqrt{\\frac{1}{LC}}=\\sqrt{\\frac{1}{(10*10^{-3})(100*10^{-6})}}$$\nAnd overdamped response will result if $\\alpha >\\omega_{0}$: an underdamped response will result if $\\alpha < \\omega_0$. Thus,\n$$\\frac{1}{2RC}>10^3$$\nand so\n$$R<\\frac{1}{(2000)(100*10^{-6})}$$\nOr\n$$R < 5 \\ohm$$\nLeads to an overdamped response; $R > 5\\ohm$ leads to an underdamped response.\n\n## Useful equations\n![[Attachments/Pasted image 20230419195639.png]]\n```ad-seealso\n\nFind more examples in the slides\n```\n\n\n# Stability of Circuits with Capacitors and Inductors\n\n```ad-success\ntitle: Stable\n$R_{t}> 0$\nExponentially decaying natural response\n```\n```ad-failure\ntitle: Unstable\n$R_{t}\\le0$\nExponentially increasing natural response\n```\n\n$x_{n}(t) = Ae^{-t/\\tau}$    $\\tau = R_{t}C$   or   $\\tau = L/R_t$\n\n## Stability of Second Order Circuits\n![[Attachments/Pasted image 20230419200718.png]]\nMany such examples in the pdf\n",
        "Week 2 - Power Transfer and Energy Storage Elements.md": " #Circuits #ELEC/2070 #Communication #UniNotes \n \n**Slides:**\n[[Attachments/ELEC2070 Week 2 2023 Power Transfer and Energy Storage Elements.pdf]]\n\n# Instantaneous Power\n![[Attachments/Pasted image 20230305214159.png]]\n$$p(t) = v(t) * i(t)$$ Power is measured in Watts (W)\n\n![[Attachments/Pasted image 20230305214247.png]]\n\n## Power has direction\nCurrent has direction relative to voltage\n![[Attachments/Pasted image 20230305214447.png]]\n\nIn this example power is transferred from left to right (assuming voltage and current are positive in the direction shown).\n\nCircuit A is supplying it and Circuit B is receiving it.\n\n**Instantaneous power is also conserved**. Total power (in a closed circuit) is zero\n\n$$p(t) > 0$$\nPower Received\n\n$$p(t) < 0$$\nPower Supplied\n\nCircuit A and Circuit B are arbitrary.\n\nThey can also be the two parts of the same circuit.\n\n**We can calculate power transferred from any part to any other part if we know the voltage and the current at the intersection between the 2 circuits.**\n\n# Employing our other equivalent circuits\n![[Attachments/Pasted image 20230305215221.png]]\n\nTo find the power received by R we need to know its voltage and current but not the other voltages and currents in the circuit.\n\nWe can use an equivalent circuit for the rest of the circuit as long as we don't change the voltage across R and the current through R.\n\nIf there are current or voltage sources in the rest of the circuit, we can use Thevenin or Norton equivalent circuits.\n\n## Example\n**Question: Find power transferred to R (=16 ohms)**\n![[Attachments/Pasted image 20230305225524.png]]\nConnect the equivalent circuit to R\n\nUse voltage divider rule: $v = \\frac{R}{R+R_{t}}= 32V$\nNext use Ohm's Law to find Current: $i = \\frac{v_{oc}}{R+R_{t}}= 2A$\n\nTherefore the transferred power is: $p = 64W$\n\n# Maximum Power Transfer\n![[Attachments/Pasted image 20230307120815.png|400]]\n![[Attachments/Pasted image 20230306000948.png|400]]\n\n**We want to find the value of $R_l$ that results in the maximum power delivered to it.\n\nNow, the power dissipated by $R_l$ is $p=i^{2}R_{l}$\nBut the current is $i=\\frac{v_s}{(R_t+R_l)}$\nTherefore power in $R_l$ is $p = (\\frac{v_s}{R_{t}+R_{l}})^{2}*R_l$ \n\nAssuming $v_s$ and $R_t$ are constant:\nThen the change in power (in $R_l$) with the change in $R_l$ or \n\n$$\\frac{\\Delta p}{\\Delta R_{l}}= {v_{s}}^{2} \\frac{(R_{t}+R_{L})^{2}-2(R_{t}+R_L)R_{L}}{(R_{t}+R_{L})^{4}}$$\n\nNow the maximum power is when $\\frac{\\Delta p}{\\Delta R_{L}}=0$ Or \n$$(R_{t}+ R_{L})^{2} -2(R_{t}+ R_{L})R_{L} = 0$$$$R_{L}=R_{t}$$A component connected to a circuit will receive the maximum power from Circuit A when its resistance is equal to the Thevenin Resistance of Circuit A.\n\n## Maximum Power Transfer\n![[Attachments/Pasted image 20230313152411.png]]\nSince the power is given by : $p =(\\frac{v_{s}}{R_{t}+R_{L}})^{2}R_{L}$\nSubstituting $R_{L}=R_{t}$ we get the maximum power $p_{max} = \\frac{v_{s}^{2}}{4R_t}$\n\nUsing $R_{L}= R_{t}$ and $R_{t}= \\frac{v_{oc}}{i_{sc}}$\n\nYou can calculate the following (and more)\n![[Attachments/Pasted image 20230313152358.png]]\n\nYou can also use this to find the max possible power a circuit can supply. *Maximum available power*\n\n## Example Problems\n![[Attachments/Pasted image 20230313152514.png]]\n![[Attachments/Pasted image 20230313152526.png]]\n![[Attachments/Pasted image 20230313152542.png]]\n\n# Energy Storage Elements\n- *Capacitors* and *Inductors* store energy (as opposed to resistors which dissipate energy) - they are PASSIVE elements.\n- While they are classed as linear elements, the current-voltage relationships are functions of time\n- Their general behavior in a circuit is represented by differential equations (as opposed to Ohms law for resistors)\n- A set of series/parallel capacitors (or inductors) can be reduced to an equivalent capacitor (or inductor). The formulas are listed below.\n- In a DC Circuit (or in any circuit when currents and voltages do not change with time), **capacitors act lice open circuits** and **Inductors act like short circuits\n- Signals can be integrated or differentiated using circuits that contain capacitors or inductors\n- \n## Capacitors\n![[Attachments/Pasted image 20230313153122.png]]\n> Capacitors ONLY let current pass if there is a change in voltage\n\nA capacitor is a two terminal element which can be modelled as two parallel conducting plates separated by a non-conducting **dielectric** material. Electric charge is stored on the plates and in the electric field.\n\nThe Capacitance (C) is directly proportional to the area (A) and spacing (d) of the plates.\n$$C = \\frac{k \\varepsilon_{0}A}{d}$$\nCapacitance is measured in Farads (F)\n$k$ = Relative permittivity (dielectric constant - changes based on material)\n$\\varepsilon_0$ = Permittivity of free space ($\\varepsilon = 8.854 pF/m$)\n$d$ = Distance between plates\n\n## Energy is Stored in the Electric Field between the Plates\n![[Attachments/Pasted image 20230313153718.png]]\n\n**Reference Link: www.physics.sjsu.edu/becker/physics51/capacitors.htm**\n\n$$E = \\frac{V}{D}$$\n$$C=\\frac{Q}{V}$$\n\n## Important Equations\n\n\n## Displacement Current\n\n",
        "Week 5 - Second Order Circuits.md": " #ELEC/2070 #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 5 2023 Complete Response 2nd.pdf]]\n\n# The Mathematical Approach for 1st Order\nStart with differential equation in this form and an **initial condition**\n$$\\frac{dx(t)}{dt} + \\frac{1}{\\tau}x(t) = y(t)$$\nFind (from y(t)) the correct form of the forced response from the table\n$$x_{f} (t)$$\nSub the forced response into the differential equation to find its unknown coefficients\n$$\\frac{d x_{f}(t)}{dt} + \\frac{1}{\\tau}x_{f}(t)=y(t)$$\nWrite the correct form of the natural response, add the forced response\n$$x(t) = x_{n}(t) + x_{f}(t) = Ke^{-\\frac{t-t_{0}}{\\tau}} + x_{f}(t)$$\nUse the initial condition with the complete response to find the unknown coefficient of the natural response (K)\n$$x(t_{1}) = Ke^{-\\frac{t-t_{0}}{\\tau}}+x_{f}(t_{1})$$\n$$t_{1}>= t_{0}$$\n**Complete response is fully solved**\n\n# Differential Equation for Second order Circuits\nA second order circuit means the total number of capacitors and inductors is two\n![[Attachments/Pasted image 20230325140158.png]]\nThis also means that we need to solve a *second order* differential equation to find the currents and voltages.\n\n# The General 2nd Order Differential Equation for RLC Circuits\n$$\\frac{d^{2}}{dt^{2}} x(t) + 2 \\alpha \\frac{d}{dt}x(t) + \\omega_0^2 x(t)=f(t)$$\nDamping coefficient: $\\alpha$\nResonant Frequency: $w_{0}$\nFunction to be solved (voltage or current): $x(t)$\nForcing function (due to source): $f(t)$\n\n## General Method\n\n1. Use Kirchhoff's and Ohm's laws to write the circuit equations\n2. Use the derivative of inductor current\n$$v_{L}(t) = L \\frac{di_{L}(t)}{dt}$$\nAnd the derivative of capacitor voltage\n$$i_{c}=C \\frac{dv_{c}(t)}{dt}$$\n3. Combine the equations so that the second and the first derivatives of the same variable will appear in a linear combination. **DO NOT USE INTEGRALS** we want differential equations.\n\nWhen the two storage elements are connected to an equivalent circuit (Nortons or Thevenin) we can use the so-called Direct Method\n\n## Parallel Arrangement\n\n![[Attachments/Pasted image 20230325145839.png]]\n\nWe want to find the current through the inductor, **i** (as a function of time)\n\nSince we want the **current** we use Norton's equivalent circuit.\nApply KCL at top node:\n$$\\frac{v}{R} + i + C \\frac{dv}{dt} = i_{s}$$\nBut the voltage across inductor, resistor and capacitor is: $v = L \\frac{di}{dt}$\n(Voltage the same for ALL elements)\n\nHence: $\\frac{L}{R} + i +CL \\frac{d^{2}i}{dt^{2}}=i_{s}$\n\nWhich is a second order DE\nSolve for i(t) and use $v = L \\frac{di}{dt}$ to find $v$\n\n## Series Arrangement\n\nWe want to find the voltage across the capacitor $v(t)$\nSince we want the **voltage** we use Thevenin's equivalent circuit.\n\nApply KVL around the loop:\n$$L \\frac{di}{dt} + v + Ri = v_{s} $$\n$$\\frac{di}{dt} + \\frac{v}{L} + \\frac{R}{L}i = \\frac{v_{s}}{L}$$\nSince $C \\frac{dv}{dt} = i$ (current is the same for ALL elements)\n\nHence: $$C \\frac{d^{2}v}{dt^{2}} + \\frac{v}{L} + \\frac{RC}{L} \\frac{dv}{dt} = \\frac{v_{s}}{L}$$\nOr:\n$$\\frac{d^{2}v}{dt^{2}} + \\frac{R}{L}*\\frac{dv}{dt}+\\frac{1}{LC}v = \\frac{v_{s}}{LC}$$\nSolve for v(t) and use $C \\frac{dv}{dt} = i$ to find i.\n\n# General problem-solving method for 2nd-order circuits\n\nThe direct method - Used with equivalent circuits\n1. Identify the first and second variables $x_{1}$ and $x_{2}$. These variables are capacitor voltages and/or inductor currents\n2. Write one first-order differential equation, obtaining $\\frac{dx_{1}}{dt} = f(x_{1}, x_{2})$\n3. Obtain an additional first-order differential equation in terms of the second variable so that $\\frac{dx_{2}}{dt}=Kx_{1}$ or $x_{1}=\\frac{1}{K} \\frac{dx_{2}}{dt}$\n4. Substitute the equation of step 3 into the equation of step 2, thus obtaining a second-order differential equation in terms of $x_{2}$\n\n```ad-note\nRemember - the direct method is useful when the inductor(s) and/or capacitor(s) are connected to an equivalent circuit (Norton's or Thevenin)\n```\n\n## Example\n\n![[Attachments/Pasted image 20230326180423.png]]\n*Find the differential equation for i*\n\nInductor + Capacitor connected to Norton's $\\rightarrow$ Use directed method\n\nWhat we know:\nCapacitor voltage $v \\rightarrow i=C\\frac{dv}{dt}$  \n\nKCL: Resistor current = $i_{s}-i \\rightarrow$ Resistor voltage = $R(i_{s}-i)$\n\nResistor || (Capacitor + Inductor) Therefore same voltage:\n$$Ri_{s}-Ri-L \\frac{di}{dt} = v$$\nSubstitute (2) in (1):\n$$i = C \\frac{d}{dt}(Ri_{s}-Ri-L \\frac{di}{dt})=CR \\frac{di_{s}}{dt}-CR \\frac{di}{dt}-CL \\frac{d^{2}i}{dt^{2}}$$\nRearrange:\n$$CL \\frac{d^{2}i}{dt^{2}} + CR \\frac{di}{dt} + i = CR \\frac{di_{s}}{dt}$$\n$$\\frac{d^{2}i}{dt^{t}} + \\frac{R}{L} \\frac{di}{dt} + \\frac{1}{CL}i = \\frac{R}{L} \\frac{di_{s}}{dt}$$\n\n# Other types of Circuits\nUsing the direct method can be complicated for complicated circuits\n![[Attachments/Pasted image 20230326193104.png]]\n**Two other methods are introduced in the textbook (Dorf):**\n1. Differential Operator Method\n2. State Variable Method (we will skip this in ELEC2070)\n\n# Differential Operators\nOperator \"s\"\n$$s = \\frac{d}{dt}$$\n$$s x(t) = \\frac{dx(t)}{dt}$$\nFor any order of differentiation:\n$$s^{n}x(t) = \\frac{d^{n}x(t)}{dt^{n}}$$\nNo differentiation:\n$$s^{0}x(t) = x(t)$$\nIntegration:\n$$\\frac{1}{s}x(t) = \\int_{- \\infty}^{t} x(\\tau)d\\tau$$\nFor any order of integration:\n$$s^{-n}x(t) = \\frac{d^{-n}x(t)}{dt^{-n}}$$\n## Finding differential equations using s-operators is now easier\n\nInductor voltage: $v_{L}(t) = L\\frac{di_{L}(t)}{dt} = sL i_{L}(t)$\n\nCapacitor voltage: $v_{c}(t) = \\frac{1}{C} \\int_{-\\infty}^{t} i_{C}(\\tau) d\\tau=\\frac{1}{sC}i_{c}(t)$\n\nVoltages and currents of energy storage elements are now related in an algebraic form (similar to resistors)\n\nResistor voltage: $v_{R}(t) = R i_{R}(t)$\n\n**Very helpful when solving second (or higher) order circuits**\n\n## Example\n\n![[Attachments/Pasted image 20230326195338.png]]\nUsing the **s** operator, the inductor voltages become:\n$v_{L_{2}}=sL_{2}i_{2}$, $v_{L_{1}}= sL_{1}(i_{1}-i_{2})$\n\nThe two GENERAL mesh equations are now\n(1) $v_{s}= R_{1}i_{1}+sL_{1}(i_{1}-i_{2})$\n(2) $0 = -sL_{1}(i_{1}-i_{2})+sL_{2}i_{2}+R_{2}i_{2}$\n\nSub in values for resistances and inductances and create the matrix representation:\n$\\begin{bmatrix}   2+s & -s \\\\ -s & 2s+3   \\end{bmatrix}$ $\\begin{bmatrix}   i_1 \\\\ i_2    \\end{bmatrix}$ = $\\begin{bmatrix}   v_{s} \\\\ 0   \\end{bmatrix}$\n\n**The currents can be found using Cramer's Rule**\nSpeaking of\n\n# Cramer's Rule\nConsider a system of *n* linear equations for *n* unknowns, represented in matrix multiplication form as follows:\n$$Ax=b$$\nWhere the *n* x *n* matrix A has a nonzero determinant, and the vector\n$$x=(x_{1},x_{2},x_{3},..., x_{n})$$\nIs the column vector of the variables.\nThen the theorem states that in this case the system has a unique solution, whose individual values for the unknowns are given by:\n$$x_{i}=\\frac{det(A_i)}{det(A)}$$\nWhere $A_i$ is the matrix formed by replacing the i-th column of A by the column vector b.\n\n## Applying Cramer's Rule\n\nCramer's rule means that we need to find **FIRST** the determinant of:  $\\begin{bmatrix}   2+s & -s \\\\ -s & 2s+3   \\end{bmatrix}$\n\nOr: $D = (2+s)(2s+3)-s^{2}$\n\nTo find $i_{2}$ we need to find the determinant of:\n$$D_{i_{2}}=\\begin{bmatrix}   2+s & v_{s} \\\\ -s & 0   \\end{bmatrix}$$\nAND then $i_{2}=\\frac{D_{i_2}}{D}=\\frac{sv_s}{(2+s)(2s+3)-s^{2}}$\n$i_{2}=\\frac{D_{i_1}}{D}$\n\nHence $i_{2} = \\frac{sv_s}{4s+6+2s^{2}+3s-s^2}$\n\nor $(s^{2}+7s+6)i_{2}= sv_{s} \\rightarrow [s^{2}+7s+6]i_{2}=sv_s$\n\nConvert back to differential equation form:\n$$\\frac{d^{2}}{dt^{2}}i_{2} + 7 \\frac{d}{dt}i_{2}+6i_{2}= \\frac{d}{dt}v_s$$\n\n# Solving the differential equations for second order circuits\nThe general form of a (linear) second order differential equation:\n$$a_{2}\\frac{d^{2}}{dt^{2}}x(t)+a_{1}\\frac{d}{dt}x(t) +a_{0}x(t)=f(t)$$\nWhere:\n$x(t)=$ Function to be solved\n$f(t)=$ Forcing function (due to the source)\n$a_n=$ Constants\n\nThe same equation using *s* operators:\n$$a_{2}s^{2}x(t)+a_{1}sx(t) + a_{0}x(t) = f(t)$$\nHas a general solution:\n$$x(t) = x_{n}(t) + x_{f}(t)$$\nWhere:\n$x(t) =$ The Complete Response\n$x_{n}(t) =$ Natural Response\n$x_{f}(t) =$ Forced Response\n\n# Natural Response for Second Order Circuits\n\n## The Characteristic Equation\n\nThe natural response is obtained by zeroing the forcing function\n\n**In General:**\n$$a_{2}s^{2}x_{n}(t) + a_{1}sx_{n}(t) + a_{0}x_{n}(t) = 0$$\n\nThe solution to this characteristic equation is the natural response, $x_{n}(t)$\nNatural response must be an exponential (since an exponential is proportional is ALL its derivatives)\n$$x_{n}(t) = Ae^{st}$$\nSubstitute: $a_{2}As^{2}e^{st}+a_{1}Ase^{st}+a_{0}Ae^{st}= 0$\n\nSince $x_{n}(t)=Ae^{st}$ then: $a_{2}s^{2}x_{n}(t)+a_{1}sx_{n}(t)+a_{0}x_{n}(t) = 0$\n\nOr: $(a_{2}s^{2}+a_{1}s+a_{0})x_{n}(t) = 0$\n\n$x_{n}(t) = 0$ is trivial, therefore we seek the solution to: $$a_{2}s^{2}+ a_{1}s + a_{0} = 0$$\nThis is the **CHARACTERISTIC EQUATION**\n\n## Finding the Natural Response\n\nThe solution to the equation $a_{2}s^{2}+ a_{1}s + a_{0} = 0$ can be found using the quadratic equation\n$$s_{1,2} = \\frac{-a_{1}+- \\sqrt{a_{1}^{2}-4a_{2}a_{0}}}{2a_2}$$\nThe natural response can now be given by:\n$$x_{n}(t) = A_{1}e^{s_{1}t} + A_{2}e^{s_{2}t}$$\n*Where $A_{1}$ and $A_{2}$ are obtained from the initial conditions*\n\nThe roots $s_{1}$ and $s_{2}$ are known as the **Natural Frequencies**.\n\nThe reciprocal magnitude of the frequencies are the **TIME CONSTANTS**\n\n## Natural Response of an Unforced (source free) circuit: Parallel RLC Circuit\n\n![[Attachments/Pasted image 20230326221112.png]]\n\nFor ALL RLC circuits, we need to solve:  $a_{2}\\frac{d^{2}}{dt^{2}}x(t)+a_{1}\\frac{d}{dt}x(t)+a_{0}x(t)=f(t)$\n\nThis can be simplified to (this form is relevant to RLC circuits): $\\frac{d^{2}}{dt^{2}}x(t)+2\\alpha \\frac{d}{dt}x(t)+\\omega_0^2 x(t)=f(t)$\n\nSince $f(t)=0$ (for the natural response) the general equation is: $\\frac{d^{2}}{dt^{2}}x(t)+2 \\alpha \\frac{d}{dt} x(t) + \\omega_0^2 x(t)=0$\n\n### General RLC Equation\n\nThe characteristic equation for the general RLC equation (for the natural response) is:\n$$s^{2}+2\\alpha s + \\omega^2_0=0$$\nThe roots of this characteristic equation are:\n$s_{1}= -\\alpha + \\sqrt{\\alpha ^{2}-\\omega^2_0}$ and $s_{2}=-\\alpha - \\sqrt{\\alpha^{2}-\\omega^2_0}$\n![[Attachments/Pasted image 20230326223226.png]]\nApply KCL: $$\\frac{v}{R}+\\frac{1}{L}\\int^{t_{0}v}d\\tau +i(0) + C\\frac{dv}{dt}=0$$\n### Parallel RLC circuit (with $f(t) = 0$)\n\nDifferentiating both sides:\n$$C \\frac{d^{2}v}{dt^{2}}+\\frac{1}{R} \\frac{dv}{dt}+\\frac{1}{L}v=0$$\nDivide by C, and using the s operator:\n$$s^{2}+\\frac{1}{RC}s+\\frac{1}{LC}=0$$\nComparing with the **general equation** we have: $\\alpha = \\frac{1}{2RC}$ and $\\omega^{2}_{0}=\\frac{1}{LC}$\n\nThe roots of the characteristic equation are therefore:\n$s_{1}= -\\frac{1}{2RC}+\\sqrt{(\\frac{1}{2RC})^{2}-\\frac{1}{LC}}$ and $s_{2}= -\\frac{1}{2RC}-\\sqrt{(\\frac{1}{2RC})^{2}-\\frac{1}{LC}}$\n\n## The Solution for the Natural Response\n\nGeneral Natural Response:\n$$v_{n}= A_{1}e^{s_{1}t} + A_{2}e^{s_{2}t}$$\n\nWhere Natural Frequencies are given by:\n$$s_{1}= -\\alpha + \\sqrt{\\alpha^{2}-\\omega_0^2}$$\n$$s_{2}=-\\alpha + \\sqrt{\\alpha^{2}-\\omega_0^2}$$\nFor parallel RLC circuit:\n$\\alpha = \\frac{1}{{2RC}}$ and $\\omega_0^2=\\frac{1}{LC}$\n\nWe defined the **Damped Resonant Frequency** as:\n$$w_{d}= \\sqrt{w_0^2-\\alpha^2}$$\nThe natural frequencies now become\n\n$s_{2}=-\\alpha + jw_d$ and $s_{2}=-\\alpha - jw_d$\n\n## Summary\n\nFor **Second Order Circuits**:\n![[Attachments/Pasted image 20230329124544.png]]\n\n# Damping\nThe root of the characteristic equation assume three possible conditions:\n\na. 2 real and distinct roots when: $\\alpha^{2}>w^2_0$\nb. 2 real and equal roots when : $\\alpha^{2}=\\omega^2_0$\nc. 2 complex roots when: $a^{2}<w^2_0$\n\n![[Attachments/Pasted image 20230329124838.png]]\n\n# The Complete Response\n\nGeneral differential equation:\n$$\\frac{d^2}{dt^{2}}x(t)+2\\alpha\\frac{d}{dt}x(t)+\\omega^2_0x(t)=f(t)$$\n\nCharacteristic equation for the Natural Response:\n$$s^{2}+2\\alpha s+\\omega^2_0=0$$\n\n\n**WE WILL BE GIVEN THESE IN THE TEST**\n![[Attachments/Pasted image 20230329125220.png]]\n\n## Example\n\n![[Attachments/Pasted image 20230329125242.png]]\n\n### Applying the initial condition: i(0)\n\nTake the Derivative of:\n$$v_{n}= A_{1}e^{s_{1}t} + A_{2}e^{s_{2}t}$$\n**(1)** - And apply at t=0, we get:\n$$\\frac{dv_n(0)}{dt}=s_{1}A_{1}+s_{2}+A_{2}$$\n**(2)** Our original KCL equation:\n$$\\frac{v}{R}+\\frac{1}{L} \\int^t_0vd\\tau+i(0)+C\\frac{dv}{dt}=0$$\nBecomes (at t=0) \n$$\\frac{dv(0)}{dt}=-\\frac{v(0)}{RC}-\\frac{i(0)}{C}$$\n\nEquating **(1) and (2)** we get:\n$$s_{1}+A_{1}+s_{2}+A_{2}=-\\frac{v(0)}{RC}-\\frac{i(0)}{C}$$\nPlacing the values for $s_1,s_2,v(0),i(0)$ we get:\n$$-A_{1}-2A_{2}=\\frac{10}{1/3}-\\frac{2}{1/2}$$\nNow we have 2 equations for out 2 unknowns. Easy.\n\n**Actual Solution:**\n$$v_{n}= (-14e^{-t}+24e^{-2t}V)$$\n# Summary\n![[Attachments/Pasted image 20230329130434.png]]\n![[Attachments/Pasted image 20230329130446.png]]\n\n# The Complex Frequency Plane\n![[Attachments/Pasted image 20230329130511.png]]\n![[Attachments/Pasted image 20230329130546.png]]\n",
        "Week 4 - First Order Circuits.md": "#ELEC/2070 #Circuits #Logic #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 4]]\n\n# The Time-Dependent Response of Simple Circuits\nResistor: $v=Ri$\nCapacitor: $i(t)=C \\frac{\\Delta}{\\Delta t}v(t)$\nInductor: $v(t)=L \\frac{\\Delta}{\\Delta t}i(t)$ \n\n## The Initial Analysis Method]\n![[Attachments/Pasted image 20230321150242.png]]\n**a. Simplify your circuit**\n1. Combine your capacitors (or inductors) to one side\n2. Resistors and sources on the other side\n\n**b. Find:**\n- Thevenin equivalent circuit as seen by the combined capacitor\nOr:\n- Norton equivalent circuit as seen by the combined inductor\n\n> A circuit containing one inductor (and no capacitors) or one capacitor (and no inductors) is called a first order circuit.\n\n## The General Time-Dependent Response\n![[Attachments/Pasted image 20230321151016.png]]\n![[Attachments/Pasted image 20230321151356.png]]\n\n# The Differential Equations - Constant input to a circuit\nDescribing the behaviour of the first order (RC and RL) circuits\n\n## 1. RC circuit with a DC source\n![[Attachments/Pasted image 20230321152130.png]]\n1. Assume circuit is at a steady state at t = -0.\n2. Abrupt change at t = 0  $\\rightarrow$ disturbs circuit\n3. We know how to determine currents and voltages before disturbance (t<0).\n4. We can derive a 1st order differential equation to solve it\n\n**CREATE THEVENIN CIRCUIT  FOR t>0**\n![[Attachments/Pasted image 20230321152506.png]]\n$$V_{oc}=\\frac{R_{3}}{R_{2}+ R_{3}}V_{s}$$\n$$R_{t} = \\frac{R_{2}R_{3}}{R_{2}+R_{3}}$$\n\n**Response for t > 0**\nWhat is the response of a first order circuit to **a constant input?**\n![[Attachments/Pasted image 20230321152942.png]]\n> \"Response\" usually means the voltage across the capacitor (or current in the inductor)\n\nWe can apply KVL:\n$$V_{oc}= R_{t}i(t) + v(t) = R_{t}(C \\frac{\\Delta v{t}}{\\Delta t})+v(t)$$\nRe-arrange:\n$$\\frac{\\Delta v(t)}{\\Delta t} + \\frac{v(t)}{R_{t}C} = \\frac{V_{oc}}{R_{t}C}$$\n> This is the standard differential equation for **ANY** 1st order RC circuit with a constant input.\n> First order (RC) circuit $\\rightarrow$ involves a first order differential equation (or DE)\n\n## 2. RL Circuit with a DC Source\n![[Attachments/Pasted image 20230321153839.png]]\n1. Assume that the circuit is at a steady state at t = -0.\n2. Abrupt change at t = 0 disturbs the circuit.\n3. We know how to determine currents and voltages before disturbances (t<0).\n4. We can derive a 1st order differential equation and solve it.\n\n![[Attachments/Pasted image 20230321155151.png]]\n**CREATE NORTON CIRCUIT FIRST**\n$$I_{sc}=\\frac{V_{s}}{R_{2}}$$\n$$R_{t}=\\frac{R_{2}R_{3}}{R_{2}+R_{3}}$$\nKCL (at top node):\n$$I_{sc}=\\frac{v(t)}{R_{t}}+i(t)=\\frac{{L\\frac{\\Delta i(t)}{\\Delta t}}}{R_{t}}+i(t)$$\nRe-arrange:\n$$\\frac{\\Delta i(t)}{\\Delta t}+\\frac{R_{t}}{L} i(t) = \\frac{R_t}{L}I_{sc}$$\nThe standard differential equation for **ANY** 1st order RL circuit with a steady state input.\n> First order (RL) circuit $\\rightarrow$ involves a first order differential equation\n\n## Source free RL circuit (pure natural response)\n![[Attachments/Pasted image 20230321161407.png]]\n[[Attachments/ELEC2070 Week 4#^tqx8c0n2y6i]]\n\nSolution, see above link for working\n$$i(t) = I_{0}e^{\\frac{-Rt}{L}}$$\n\n## Source free RC Circuit\n![[Attachments/Pasted image 20230321165623.png]]\n**Solution, see link above for full working:**\n$$v(t) = v(0) e^{\\frac{-t}{RC}}=V_{0}e^{\\frac{-t}{RC}}$$\n\n# The General Differential Equation for DC input\nStandard differential equation for ANY 1st order circuit with constant input:\n$$\\frac{\\Delta x(t)}{\\Delta t} + \\frac{x(t)}{\\tau}=K$$\nWhere the time constant $\\tau = R_{t}C$ or $L/R_{t}$\nAnd K is CONSTANT\n\nOur boy Dorf (The textbook) has the answer of how to solve the 1st order differential.\n$$x(t) = x(\\infty)+[x(0) - x(\\infty)]e^{\\frac{-t}{\\tau}}$$\n\nWhere the $x(\\infty)$  is the value of the long-term capacitor voltage or inductor current (i.e. when t -> infinity, there are no other abrupt changes)\n\nAnd x(0) is the initial state\n\n# The Time Constant of a 1st Order Circuit\n![[Attachments/Pasted image 20230321171720.png]]\n1. Take the slope of the tangent at t=0.\n2. Where the tangent intercepts with the long-term value of x(t) or x(inf) is called the TIME CONSTANT $\\tau$\n$$\\tau = R_{t}C = L/R_{t}$$\nMore generally: $\\tau = R_{eq}C_{eq}$\n\n$\\tau$ is the time constant of the first-order circuit - the time the response would take to reach the final value if the (transient) response occurs at the initial rate of change.\n\nIt is an indication of how fast the response changes in a given 1st order circuit.\n\n# The Voltage or Current at $t=\\tau$\n![[Attachments/Pasted image 20230321172243.png]]\nThe general solution:\n$$x(t)=x(\\infty) + [x(0)-x(\\infty)]e^{\\frac{-t}{\\tau}}$$\nx(t) could be v or i \n\nWhen $t=\\tau$:\n$$x(\\tau) = x(\\infty) + [x(0)-x(\\infty)]0.368$$\n\nWhen the time after an abrupt change to circuit is equal to the time constant, the value of the voltage or current is 63% lower than the value at the time the abrupt change occurs.\n\n# Summary\n![[Attachments/Pasted image 20230321172836.png]]\n![[Attachments/Pasted image 20230321172850.png]]\nThis description is only appropriate for circuits in which the natural response dies out. Real circuits always will as there is resistance associated with other components that drain the signal. There are some \"pathologic\" circuits where the natural response is nonvanishing as time becomes infinite.\n\n## Switching an RC or RL Circuit\n![[Attachments/Pasted image 20230321173312.png]]\n\n## How to solve a Switching Problem\nRC Circuits\n![[Attachments/Pasted image 20230321173341.png]]\n\nRL Circuits\n![[Attachments/Pasted image 20230321173419.png]]\n\n## Circuit Diagrams\n![[Attachments/Pasted image 20230321173452.png]]\n[[Attachments/ELEC2070 Week 4#^lubjk3nbc5]]\nSee link for examples\n\n# The Complete Response\nHere we add the natural (transient) response to the forced (steady state) response\n\n## The General Differential Equation involving Forced and Natural Responses\n![[Attachments/Pasted image 20230321173802.png]]\n![[Attachments/Pasted image 20230321173909.png]]\n\n## Natural Response\nSolution to the Homogenous Differential Equation\n\nSince the solution looks like this: $x(t) = x_{n}(t) +x_{f}(t)$\n(Natural + Forced = Complete)\n\nWe can determine each part separately and just slap em together.\n![[Attachments/Pasted image 20230321174137.png]]\nThis is the **Homogeneous** form of the differential equation\n\nThis has the solution: \n![[Attachments/Pasted image 20230321174302.png]]\n\n## Forced Response\n| Forcing Function, y(t)                         | Forced Response, $x_{t}(t)$                |\n| ---------------------------------------------- | ------------------------------------------ |\n| 1. Constant: $y(t) = M$                        | $x_{t} = N$, a constant                    |\n| 2. Exponential:$y(t) = Me^{-bt}$               | $x_{t} = Ne^{-bt}$                         |\n| 3. Sinusoid: $y(t) = M sin(\\omega t + \\theta)$ | $x_{t}=A sin (\\omega t) + B cos(\\omega t)$ |\n\nForcing functions and forced responses have similar time dependence but they have different magnitudes.\n\n## Solution for a constant input / forcing function\n![[Attachments/Pasted image 20230321175110.png]]\n![[Attachments/Pasted image 20230321175217.png]]\n\n## The Mathematical approach\n![[Attachments/Pasted image 20230321175246.png]]\n\n# Sequential Switching\n- Initial conditions need to be calculated for each switching event\n- The circuit may **not** have reached steady state before each switching event\n- Each cycle may or may not have the same time constant - the switching process may involve new circuit elements\n![[Attachments/Pasted image 20230321175436.png]]\n![[Attachments/Pasted image 20230321175451.png]]\n\n# Unit Step Function\n![[Attachments/Pasted image 20230321175555.png]]\n\nIf an independent voltage source provides a voltage written like this:\n![[Attachments/Pasted image 20230321175639.png]]\n\nIt means this overall\n![[Attachments/Pasted image 20230321175652.png]]\n![[Attachments/Pasted image 20230321175703.png]]\n\n# SUMMARY SUMMARY GOD DAMN\n## Driven RL Circuits\n![[Attachments/Pasted image 20230321175757.png]]\n\n## Drive RC Circuits\n![[Attachments/Pasted image 20230321175824.png]]",
        "Week 3 - Ideal Operational Amplifiers.md": "#ELEC/2070  #Circuits #Logic #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 3 2022 Operational Amplifiers.pdf]]\n\n# The OP Amp\nAn Op Amp is an integrated circuit that takes the difference between the voltages of the two inputs, and amplifies them.\n![[Attachments/Pasted image 20230318133517.png]]\n\n- Operational Amplifiers are widely used in signal processing and control circuits\n- µA741 is the most common op amp\n- Op amps are **differential amplifiers**\n\n## Circuit Diagram\n![[Attachments/Pasted image 20230318133656.png]]\n\n## Definitions\n![[Attachments/Pasted image 20230318133732.png]]\nSome circuit diagrams swap the inputs, check the signs\n\n# Example Schematic\n![[Attachments/Pasted image 20230318134243.png]]\n\n- The DC source supplies \"bias\" to the op amp\n- There are usually **not** included in the schematic\n\n## Node Analysis for Op Amps\n\n1. Since we generally omit op amp power supplies, KCL could create problems\n2. At  the ground node: we have 2 currents involving the power supplies\n\t1. Cannot use KCL at ground node if power supplies are omitted!\n3. At the op amp: applying KCL means:\n$$i_{1}+i_{2}+i_{0}+i_{+}+i_{+} = 0$$\nHence, KCL wont work if power supplies are omitted!\n\n**USE NODE ANALYSIS FOR OP AMPS**\n\n# Ideal Op Amp\n\n**Keeping the Op Amp in the \"linear regime\"\n> All numbers used are for µA741\n\nWe need\n\nThe output voltage: $|v_{o}| <= v_{sat}$ (14V)\nThe output current: $|i_{o}| <= i_{sat}$ (2mA)\nThe change in output voltage:\n$$|\\frac{\\Delta v_{o}(t)}{\\Delta t}| <= SR$$ SR = \"Slew rate\"\n500,000 V/s\n\nIf we keep within these parameters we can use the \"Ideal operational amplifier\" conditions for calculationsa\n![[Attachments/Pasted image 20230318135751.png]]\n\n| Variable                                                                                             | Ideal Condition |\n| ---------------------------------------------------------------------------------------------------- | --------------- |\n| Inverting Node input current                                                                         | $i_{1} = 0$     |\n| Non-Inverting Node input current                                                                     | $i_{2}=0$       |\n| Voltage difference between inverting node voltage and $v_{1}$ and Non-Inverting node voltage $v_{2}$ | $v_{2}-v_{1}=0$ |\n\n> the ideal operational amplifier is a model for a linear operational amplifier\n\n## Input and Output\nAs opposed to other circuits so far, an op amp circuit **ALWAYS** has an output depending on a given input. Therefore, we will analyze op amp circuits with the goal of obtaining an expression for the output in terms of input quantities.\n\nIt is usually a good idea to begin analysis of the op amp circuit at the input and work from there.\n\n## Example\n\n![[Attachments/Pasted image 20230318152646.png]]\nHow does the output voltage change with input voltage? \nFigure (b) shows what we know from an ideal op amp. Note that $v_{1}= v_{2}$ since they are connected via a short.\nWe can now express the voltage across Rs as: \n$v_s – v_2 = v_{s} – v_{1} = v_s – v_0$\ntherefore: \n$v_s = v_0$ (because no current is flowing through RS , since $i_2 = 0$)\n\n## Node Analysis of Circuits\n\nFor ideal op amps we can **ALWAYS** say:\n1. $v_{1}= v_{2}$ hence we can eliminate $v_{1}$ or $v_{2}$ from the node equations\n2. Inputs currents are always zero. This helps for node analysis of inputs\n3. The output current is not zero and is always involved in a KCL equation at the output node.\n\n### Example\n![[Attachments/Pasted image 20230320122520.png]]\n\nFind $v_{0}$ in terms of input voltages.\nAt the non inverting input node, since v1 = v2\n$$\\frac{v_{1}}{30,000} + \\frac{v_{1}-v_{b}}{10,000} + i_{2} = 0$$\nSince: $i_{2}= 0$\n$v_{1}= \\frac{3}{4} v_{b}$\n\nAt the inverting input node:\n$$\\frac{v_{1}-v_{a}}{10,000} + \\frac{v_{1}-v_{0}}{30,000} + i_{1} = 0$$\nSince: $i_{1}=0$\n$$v_{0}= 4v_{1}-3v_{a}$$\nSince: $v_{1} = \\frac{3}{4}v_{b}$\n$$v_{0}= 3(v_{b}- v_{a})$$\n> Find more examples in the attached PDF\n\n# Designing Circuits using Op Amps\n## Functional Op Amp Circuits\n![[Attachments/Pasted image 20230320123141.png]]\n![[Attachments/Pasted image 20230320123203.png]]\n\n## Voltage Follower\n![[Attachments/Pasted image 20230320123237.png]]\n\n- One of the problems when circuit 1 is connected to circuit 2 is **loading**.\n- Or we have $v_{a}!=v_{b}$ (circuit 2 **loads** circuit 1 and $i_{b}$ is the **load current**)\n- Therefore we need to design a solution: Use a **Voltage follower** (fig c) - This copies the voltage.\n\n### Example 1\n![[Attachments/Pasted image 20230320123535.png]]\n\nIn this circuit (a) we can apply KCL at node 1:\n$$\\frac{v_{a}-v_{in}}{20,000} + \\frac{v_{a}}{60,000}+i_{a}= 0$$\n$v_{a} =0.75v_{in}$\n\nIf we connect a 30k resistor (circuit b) we now have:\n$$\\frac{(v_{b}-v_{in})}{20,000}+\\frac{v_{b}}{60,000}+\\frac{v_{b}}{30,000}=0$$\n\nThe loading comes from the new current in the resistor\n\nNow add a voltage follower\n![[Attachments/Pasted image 20230320124152.png]]\n\nNote 1:\n$$\\frac{v_{a}-v_{in}}{20000}+ \\frac{v_{a}}{60000}=0$$\n$v_{a}=0.75v_{in}$ but $v_{c}=v_{a}$\nHence $v_{c}= 0.75v_{in}$\n\n> The voltage follower provides the current for the 30k resistor not the independent power supply $v_{in}$ therefore keeping voltage the **SAME**\n\n# Power Supplied to Op Amps\n\n> If no current flows into or out of either input terminal of an op amp, why does current flow from the output?\n\nIn ELEC2070 (And many other practical applications) we are treating op amps as an independent element (like a resistor) but in reality they are supplied with an independent power source!\n(Check pinout for µA741)\n![[Attachments/Pasted image 20230318133517.png]]\n\n# Scaling a Voltage\n\n$v_{0}= K v_{in}$\n\n![[Attachments/Pasted image 20230320124849.png]]\n\nWe want an amplifier circuit and K is called the **gain**. for any real number K\n\n> In general: choose resistors in real op amp circuits between 5k and 500k (currents in IC's must be small)\n\n## Examples\n![[Attachments/Pasted image 20230320125036.png]]\n\nInverting amplifier, where the gain is $\\frac{-R_{f}}{R_{1}}$\nK = -5\n\n![[Attachments/Pasted image 20230320125133.png]]\n\nNon-Inverting amplifier, where the gain is $(\\frac{1+R_{f}}{R_{1}})$\nK = 5\n\n![[Attachments/Pasted image 20230320125256.png]]\n\nA non-inverting amplifier\n\n## Virtual Ground\n![[Attachments/Pasted image 20230320125326.png]]\n\n> The fact that the inverting input terminal finds itself at zero volts in this type of circuit configuration leads to what is often referred to as a \"virtual ground\". This does not mean the pin is **ACTUALLY** grounded, which can be confusing. The op amp makes whatever internal adjustments are necessary to prevent voltage difference between the input terminals. The input terminals are **NOT** shorted together\n\n# Amplifiers\n\nVoltage follower (buffer amplifier)\n(Same as $R_{f}=0$ or $R_{1}= 0$ in non inverting amp)\nK = 1\n![[Attachments/Pasted image 20230320125729.png]]\n\nFor gains $0<K<1$ no amplifier exists but we an use:\n\nVoltage divider + Follower\n\nHere, K = 0.8\n\nThis could be considered an attenuator\n![[Attachments/Pasted image 20230320125825.png]]\n\n# Using the Non Inverting summing amplifier\n\nSay we want to sum these voltages:\n$$v_{0}=2v_{1}+3v_{2}+ 4v_{3}$$\nWant inputs between -1V and 1V\n\nConsider an op amp that has $i_{sat}= 2mA$ and $v_{sat}= 15V$\n![[Attachments/Pasted image 20230320130028.png]]\n\n> Detailed example on page 35 of the slides\n\n# Solving Linear Algebraic Equations using Circuits\n\nAssume we want to solve: $z = 4x - 5y + 2$\nThis could be solved using an op amp circuit to give\n$$v_{z} = 4v_{x}-5v_{y}+2$$\nWhere $v_{x}$ and $v_{y}$ are inputs\n\n## Block Diagrams\n![[Attachments/Pasted image 20230320130250.png]]\n![[Attachments/Pasted image 20230320130311.png]]\n![[Attachments/Pasted image 20230320130325.png]]\n### Can we do better?\n![[Attachments/Pasted image 20230320130440.png]]\nStill a little hard to read - Improve later\n#todo \n\n# Properties of Practical Op Amps\n\nReal Op Amps have:\n- Nonzero bias current\n- Nonzero input offset voltage\n- Finite input resistance\n- Nonzero output resistance\n- Finite voltage gain\n> For small signals, the actual currents and voltages in real op amps are very important\n\n## A more Realistic Model\n\nThe **Offset Model** accounts for:\n- Nonzero bias currents\n- Nonzero input offset voltage\n![[Attachments/Pasted image 20230320130750.png]]\n\n# Properties for Common Real World Op Amps\n![[Attachments/Pasted image 20230320130838.png]]\n\n## Open Loop Gain\n![[Attachments/Pasted image 20230320130916.png]]\n\nNote: The actual **open-loop voltage gain** is very large compared to what we encountered in out previous examples.\n\nThere is a distinction between this parameter and the closed-loop voltage gain that characterizes a particular op amp circuit. The \"loop\" refers to an external path between the output pin and the inverting input pin. It can be a wire, a resistor, etc. depending on the application.",
        "Formula Sheet.md": "\n| Usage                      | Formula                                          | example |     |\n| -------------------------- | ------------------------------------------------ | ------- | --- |\n| Current  through capacitor | ![[Attachments/Pasted image 20230404132803.png]] |         |     |\n![[Attachments/Pasted image 20230404133050.png]]\n\n![[Attachments/Pasted image 20230404153012.png]]\n\n![[Attachments/Pasted image 20230404153031.png]]\n\n\n\n\n# Second Order Circuits\n\n![[Attachments/Pasted image 20230404153133.png]]\n\n![[Attachments/Pasted image 20230404145920.png]]\n\n![[Attachments/Pasted image 20230404150025.png]]\n\n![[Attachments/Pasted image 20230404152255.png]]\n\n![[Attachments/Pasted image 20230404152335.png]]",
        "Labs": {
          "Week 5 - Capacitors, Inductors, Transient Response.md": "annotation-target:: Attachments/ELEC2070 2023 Workshop Worksheet for Week 5.pdf\n",
          "Week 8 - AC Circuits and AC Power.md": "\n![[Attachments/ELEC2070 2023 Laboratory Worksheet for Weeks 8 and 9.pdf]]\n\n![[Attachments/Matlab Week 8.png]]",
          "Week 3 - Practical Measurements and LT Spice.md": "![[../Attachments/ELEC2070 2023 Laboratory Worksheet for Weeks 3 and 4.pdf]]",
          "Week 2 - Analysing DC Circuits and Power Transfer.md": "#ELEC/2070 #Circuits \n![[Attachments/ELEC2070 2023 Workshop Worksheet for Week 2.pdf]]"
        },
        "Week 12 - Inverse Laplace Transform.md": "#ELEC/2070 #Circuits #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 12 2023 Laplace Transform theorems and using the Laplace Transform.pdf]]",
        "Week 10 - The Network Function and Simple Filters.md": " #ELEC/2070 #Circuits #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 10 2023 Frequency response.pdf]]\n\n# Frequency Response and Bode Plots\n*In many real systems, the forcing function is **not** pure sinusoidal*\n\n*In systems in which information is to be transmitted, a single sinusoid is useless since it repeats itself. More complex functions are required.*\n\nSignals can be decomposed into sinusoidal components using the Fourier Transform\n![[Attachments/Pasted image 20230614140654.png]]\n\n## Bandwidth\nAll real signals occupy a limited range (bandwidth) in the frequency domain.\n![[Attachments/Pasted image 20230614140811.png]]\n\n## Filters (in the Frequency Domain)\n\nFilters are usually two port circuits. They are designed to filter a portion of the frequency components pf the input signal.\n![[Attachments/Pasted image 20230614140947.png]]\nThe filter circuit responds to each frequency component differently because impedance values differ at each frequency.\n\n![[Attachments/Pasted image 20230614141217.png]]\nThe network function is the frequency response of a circuit.\n$$H(f) = \\frac{V_{out}(f)}{V_{in}(f)}$$\nIt can also be represented as a function of $\\omega$\n\n### Example\n![[Attachments/Pasted image 20230614141406.png]]\n\n## Input and Output Signals in the Time Domain\nIn the frequency domain, the output signal is found by multiplying the input signal with the network function.\nIn the time domain, we convolve. Much harder.\n![[Attachments/Pasted image 20230614142150.png]]\n\n# First Order Filters\n\n## First Order Low Pass Filters using one Capacitor\nWe can find the voltage network function with the following voltage division.\n![[Attachments/Pasted image 20230614142517.png]]\n![[Attachments/Pasted image 20230614142528.png]]\n\nDefine corner/break frequency:\n$$f_{c}= \\frac{1}{2\\pi RC}\\rightarrow H(f)=\\frac{1}{1+j \\frac{f}{f_{c}}}$$\n\n## First Order Low Pas Filters using one Inductor\nAnother type of low pass filter.\n![[Attachments/Pasted image 20230614142845.png]]\n![[Attachments/Pasted image 20230614142955.png]]\n\n\n## Magnitude and Phase Angle Plots of the Voltage Network Function\n\n**Magnitude of the network function**\n$$|H(f)| = \\frac{1}{\\sqrt{1+(f/f_{b})^2}}$$\n![[Attachments/Pasted image 20230614143253.png]]\n\n**Phase Angle of the Network Function**\n$$\\angle H(f) = -arctan(\\frac{f}{f_{b}})$$\n![[Attachments/Pasted image 20230614143348.png]]\n\n# Logarithmic Scales\n![[Attachments/Pasted image 20230614143459.png]]\n\n## Log - Log Plots\n**Only the magnitude is plotted on the log-log scale.**\n$$|H(f)|_{dB}=20\\log_{10}|H(f)|$$\n![[Attachments/Pasted image 20230614143639.png]]\n\n## Decibel (dB) scale for voltage and power\n\n**Voltage (rms-volts):**\n$$dBV(V_{rms})= 20\\cdot \\log_{10}(\\frac{V_{rms}}{1V_{rms}}) $$\n\n**Power (watts):**\n$$dB(P_{a}) = 10\\cdot \\log_{10}(\\frac{P_{a}}{1 W})$$\n\n**Power (milliwatts):**\n$$dBm(P_{a})=10\\cdot \\log_{10}(\\frac{P_{a}}{1mW})$$\n$$dBm(P_{a})=dB(P_{a})+30$$\n\n## Bode Plots\nBode plot of a low pass filter\n![[Attachments/Pasted image 20230614144603.png]]\n\n## Gain and Phase Shift\n![[Attachments/Pasted image 20230614144919.png]]\n**Gain:** the ratio of the amplitude of the output sinusoid to the amplitude of the input sinusoid.\n\n**Phase Shift:** Is the difference between the phase angle of the output sinusoid to the phase angle of the input sinusoid.\n\n## dB values of a simple low-pass filter\n$$H(f) = \\frac{1}{1+j f}{f_{b}}$$\n$$|H(f)| = \\frac{1}{\\sqrt{1+(f/f_{b})^2}}$$\n![[Attachments/Pasted image 20230614145501.png]]\n\n## First Order High Pass Filters\n![[Attachments/Pasted image 20230614145646.png]]\n![[Attachments/Pasted image 20230614150709.png]]\n![[Attachments/Pasted image 20230614151115.png]]\n\n# How to Guess Type of Filter?\n\n## Capacitors at Low and High Frequencies\n![[Attachments/Pasted image 20230614151306.png]]\n\n## Inductors at Low and High Frequencies\n![[Attachments/Pasted image 20230614151340.png]]\n\n## Series RL Combination at Low and High Frequencies\n![[Attachments/Pasted image 20230614184621.png]]\n\n## Series RC Combination at Low and High Frequencies\n![[Attachments/Pasted image 20230614184727.png]]\n\n## First Order Low Pass Filter at Low and High Frequencies\n![[Attachments/Pasted image 20230614185106.png]]\n\n## Plotting by Hand\n![[Attachments/Pasted image 20230614185307.png]]\n\n## First Order High Pass Filter at Low and High Frequencies\n![[Attachments/Pasted image 20230614185510.png]]\n\n## Another Filter to Guess\n![[Attachments/Pasted image 20230614185719.png]]\n![[Attachments/Pasted image 20230614185741.png]]\n\n## Parallel RC Combination at Low and High Frequencies\n![[Attachments/Pasted image 20230614185940.png]]\n\n## Parallel RL Combination at Low and High Frequencies\n![[Attachments/Pasted image 20230614190206.png]]\n\n## First Order Circuits with two Corner Frequencies\n![[Attachments/Pasted image 20230614190626.png]]\n\n### Example\n![[Attachments/Pasted image 20230614190738.png]]\n![[Attachments/Pasted image 20230614190758.png]]\n![[Attachments/Pasted image 20230614190830.png]]\n![[Attachments/Pasted image 20230614190904.png]]\n![[Attachments/Pasted image 20230614190923.png]]\n\n## Bode Plot\n![[Attachments/Pasted image 20230614191110.png]]\n\n\n## Bode Plot on the dB scale\n![[Attachments/Pasted image 20230614191219.png]]\n\n# Second Order Filters\n\n# Resonance\nResonance happens when values of the capacitive and inductive reactances are equal in value and cancel eachother out.\nThis happens at a specific frequency called the resonant frequency\n\n## Series Resonance\n![[Attachments/Pasted image 20230614192125.png]]\n\n## Bandwidth and Quality Factor, Q\n![[Attachments/Pasted image 20230614192229.png]]\n\n## Series Impedance\n![[Attachments/Pasted image 20230614192954.png]]\n\n\n## Band Pass Filter\n![[Attachments/Pasted image 20230614193053.png]]\n\n## Series Resonance Example\n![[Attachments/Pasted image 20230614193327.png]]\n\n# Parallel Resonance\n![[Attachments/Pasted image 20230614193459.png]]\n![[Attachments/Pasted image 20230614193536.png]]\n\n# Ideal Filters\n![[Attachments/Pasted image 20230614193634.png]]\n\n## Second Order Low Pass Filter\n![[Attachments/Pasted image 20230614193730.png]]\n\n## Second Order High Pass Filter\n![[Attachments/Pasted image 20230614193808.png]]\n\n## Second Order Band Pass Filter\n![[Attachments/Pasted image 20230614193843.png]]\n\n## Second Order Band Stop Filter\n![[Attachments/Pasted image 20230614193914.png]]\n\n## Fifth Order Butterworth Lowpass Filter\n![[Attachments/Pasted image 20230614193955.png]]",
        "Week 1 - Intro and review of Fundamentals.md": "#ELEC/2070 #Circuits #Communication #UniNotes\n\n**Slides:**\n[[Attachments/ELEC2070 Week 1 2023.pdf]]\n\n# Fundamental Concepts\nBelow are some basic equations for review:\n![[Attachments/Pasted image 20230304193246.png]]\n\n## Polarity & resistance\n![[Attachments/Pasted image 20230304193700.png]]\n(a) - Absorbs (dissipates) energy. Its a \"passive\" element.\n(b) - Supplies (generates) energy. It is an \"active\" element\n\nWe are going to use resistors in their linear region. \n\n`Ideal Resistor`\n$$ v = Ri$$\n\n# Ideal Independent Sources\n![[Attachments/Pasted image 20230304193959.png]]\n\nSymbol of Ideal Independent *Voltage Source*.         Symbol of ideal independent *Current source*.\n\n# Dependent Sources\n![[Attachments/Pasted image 20230304194125.png]]\n\n*There are no simple dependent sources in practice!* But they are very useful for modelling transistors, amplifiers, etc.\n\n## Dependent Source Examples\n![[Attachments/Pasted image 20230304202110.png]]\n\n# Kirchoff's Laws\nThe algebraic sum of all *currents entering (or leaving) a node is zero* at any instant in time.\n![[Attachments/Pasted image 20230304202635.png]]\n\nThe algebraic sum of all *voltages around a loop is zero* at any time instant.\n![[Attachments/Pasted image 20230304202737.png]]\n\n$$v1 + v2 + v3 - vs = 0$$\n\n# Nodes\n![[Attachments/Pasted image 20230304203017.png]]\n\nGround node potential is *zero volts*.\n*All other nodes* can be *measured relative to ground.*\nEach node corresponds to a *unique voltage (relative to ground).*\n\n# Parallel and Series Voltage and Current Sources\n![[Attachments/Pasted image 20230304203424.png]]\n\n# Node Voltage Analysis\n![[Attachments/Pasted image 20230304205521.png]]\n\nFirst, write element currents in terms of node voltages:\n\n$$i1 = {\\frac{va-vb}{R1}}$$\n$$i2 = {\\frac{va}{R2}}$$\n$$i3 = {\\frac{vb}{R3}}$$\nThen, apply *Kirchhoff's Current Law* at each node except for the ground node.\n\nNode A: $i_s = i_1 + i_2$\n\n![[Attachments/Pasted image 20230304210120.png]]\n\n## Summary\n\n1. Element currents are expressed in terms of node voltages (pay attention to current direction). \n2. KCL is applied to each node (except ground). \n3. If there are only current sources there are nice symmetries in equations.\n4. If there are dependent sources, controlling voltage or current is expressed in terms of node voltages → if there is an additional unknown another equation is needed.\n\n# Mesh Current Analysis\n\n![[Attachments/Pasted image 20230304211207.png]]\n\nWrite element voltages in terms of mesh currents:\n\n$$v_{1}= R_1i_1$$\n$$v_{2}= R_2i_2$$\n$$v_{3}= R_3(i_{1}-i_{2})$$\nApply _Kirchhoff's Voltage Law_ to write loop equations for **each mesh**.\n![[Attachments/Pasted image 20230304211541.png]]\n\n# Thévenin's Theorem\n![[Attachments/Pasted image 20230304211743.png]]\n\n\n```\nAny combination of voltage sources and resistors with two terminals can be replaced by a single voltage source and a single series resistor\n```\n\nCircuit A can be replaced with a simpler _Thévenin equivalent circuit_\n\nTo find the Thévenin equivalent circuit of Circuit A:\n\n1. Measure (or calculate) the **open-circuit voltage** and the short-circuit current of Circuit A.\n2. Then calculate Thévenin resistance using the formula:\n\n$$R_{t}= \\frac{v_{oc}}{i_{sc}}$$\n- This method works well for calculations but _may not be good in practice_.\n- For example: if you short circuit a battery, you will discharge it.\n\n**Method 1:**\nWe now need to:\n1. Find the open circuit voltage\n2. Find the short circuit current\n3. Calculate Thévenin resistance using the relation: $R_{t}= \\frac{v_{oc}}{i_{sc}}$\n![[Attachments/Pasted image 20230304212805.png]]\n\n# The Thévenin Parameters\n![[Attachments/Pasted image 20230304212906.png]]\n\n(a) The **open circuit voltage**: $v_{oc}$\n(b) The **short circuit current**: $i_{sc}$\n(c) The **Thévenin Resistance**: $R_{t}$ This can be found by:\n\t1. Finding $R_{t}=\\frac{v_{oc}}{i_{sc}}$\n\t2. Replacing all independent voltage sources with short circuits and all independent current sources with open circuit. Then calculate final resistance $-R_{t}$. **Dependent sources cannot be replaced by open and short circuits. Need to use $R_{t}=\\frac{v_{oc}}{i_{sc}}$\n\n## Simple Method to find $R_{t}$\n![[Attachments/Pasted image 20230304214121.png]]\n\n## A Third Method to Calculate R<sub>t</sub>\n\n![[Attachments/Pasted image 20230304214214.png]]\n\nThe Thévenin resistance can be found by connecting a current source to the terminals of the circuit. The voltage across the current source is measured or calculated. The Thévenin resistance is found from $R_{t}=\\frac{v_t}{i_t}$\n\n(This could be carried out a few times to check linearity)\n\n**Particularly useful for complicated circuits with dependent sources**\n\n# Calculating the Thévenin Resistance\n\n**Method 1:** Find $v_{oc}$ and $i_{sc}$ then apply $R_{t}=\\frac{v_{oc}}{i_{sc}}$. Useful for simple circuits and when doing paper calculations.\n\n**Method 2:** Make a new Circuit *A* by \"zeroing\" _independent_ sources of Circuit *A*. Find equivalent resistance of Circuit *A*. This is the Thévenin resistance of *A*.\n![[Attachments/Pasted image 20230304214930.png]]\n\n**Method 3:** Apply a current source $i_t$ to the terminals of Circuit *A*; Measure $v_t$. Calculate $R_t$ from $v_t$ and $i_t$:\n$$R_{t}= \\frac{v_t}{i_t}$$\n**You should not connect a current supply to the output of a circuit in practice without knowing what's inside, might damage it.\n\n# Dependent Sources\nThe presence of dependent sources means we cannot find $R_t$ using the normal \"switching off independent sources\" technique\n\nWe now need to:\n1. Find the open circuit voltage\n2. Find the short circuit current\n3. Calculate Thévenin resistance using the relation: $R_{t}= \\frac{v_{oc}}{i_{sc}}$\n\n**Example**: This circuit involves a dependent source\n![[Attachments/Pasted image 20230304215830.png]]\n\n\n*Find the open-circuit voltage*\n\nSince we have one closed loop we can apply KVL to this loop - remember the polarities\n\nKVL: $$-20 + 6i - 2i + 6i = 0$$\n$$i = 2 A$$\nTherefore the open-circuit voltage: $v_{oc} = 6i = 12V$\n\n## Worked Solution Find i<sub>sc</sub>\n![[Attachments/Pasted image 20230304220317.png]]\n\nFind the short-circuit current by connecting the terminals at a-b \n\nNow we have a simple mesh equation problem\n\n**Mesh 1:** $-20 + 6i_{1} - 2(i_{1} - i_{2}) + 6(i_{1}-i_{2}) = 0$\n**Mesh 2:** $6(i_{2}- i_{1}) + 10i_{2}= 0$\n\nThis equation gives: $i_{1}=\\frac{8}{3}i_{2} = 2.67i_2$\nPut this value into $i_2$ into Mesh 1's Equation gives: $i_{2} = \\frac{60}{68}$\n\nTherefore $R_t$ = 13.6 Ohms\n\n# Norton's Equivalent circuit\n![[Attachments/Pasted image 20230304221031.png]]\n\n![[Attachments/Pasted image 20230304221058.png]]\n\n# Thévenin To Norton = Source transformation\n![[Attachments/Pasted image 20230304221156.png]]\n\n![[Attachments/Pasted image 20230304221214.png]]\n\n**We choose the equivalent circuit depending on the overall problem we are trying to solve\n\n# Graphical analysis to determine Thévenin and Norton circuits\n![[Attachments/Pasted image 20230304221356.png]]\n\n**Our two Options\n![[Attachments/Pasted image 20230304221550.png]]\n1. These are only models (=equivalent circuits) !!!\n2. In practice, a voltage source is always a voltage source.\n3. The real circuit with its internal nodes and branches is still there.\n\n# Source Transformation\n![[Attachments/Pasted image 20230304221724.png]]\n\n**Note:**\n\tThe current is unchanged between the ideal and non-ideal voltage source.\n\tThe voltage is unchanged between the ideal and non-ideal current source.\n\n## Equivalence\n![[Attachments/Pasted image 20230304221843.png]]\n\nIf we connect the non-ideal sources to the circuit B, then all the currents and voltages in B will be unchanged. This is called *equivalence*.\n\nThe process of transforming between these two non-ideal sources is called a *source transformation*.\n\n## Conditions\n![[Attachments/Pasted image 20230304222010.png]]\n\nIf the transformed sources are equivalent, then the current and voltage in R will be identical.\n\nSo we start the analysis with 2 extreme example: R = 0 and R = Infinity\nWhen R = 0, we have a short circuit: Hence for *(a)* $i = \\frac{v_s}{R_{s}}$ and for *(b)* $i = i_s$ (Since no current flows through R<sub>p</sub>) **therefore**: $v = v_{s}= i_{s}R_{p}$\n![[Attachments/Pasted image 20230304222504.png]]\n**Examples are in the pdf**\n\n\n# Superposition\n**All the circuits we study in this unit are linear.**\n• If the circuit is linear, you can calculate the output voltages and currents by considering one independent source at a time, then add up all solutions to get the final solution. \n• To consider one source at a time, you need to “zero” the other sources. \n• To zero the independent voltage sources you need to replace them by short-circuits. \n• To zero the independent current sources you need to replace them with open-circuits.\n\n## Linear Circuits\n![[Attachments/Pasted image 20230304222827.png]]\n\n## To \"Zero\" Independent Sources\n![[Attachments/Pasted image 20230304222900.png]]",
        "Attachments": {
          "ELEC2070 Week 4.md": "annotation-target::ELEC2070 Week 4 2023 Complete Response 1st.pdf\n\n>%%\n>```annotation-json\n>{\"created\":\"2023-03-21T05:14:25.469Z\",\"text\":\"Source Free RL Circuit Full Worked KVL\",\"updated\":\"2023-03-21T05:14:25.469Z\",\"document\":{\"title\":\"ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"link\":[{\"href\":\"urn:x-pdf:22fd19e7131e38b9983d43dc847ae324\"},{\"href\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\"}],\"documentFingerprint\":\"22fd19e7131e38b9983d43dc847ae324\"},\"uri\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"target\":[{\"source\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"selector\":[{\"type\":\"TextPositionSelector\",\"start\":3340,\"end\":3344},{\"type\":\"TextQuoteSelector\",\"exact\":\"KVL:\",\"prefix\":\"ircuit (pure natural response)14\",\"suffix\":\"SOLUTIONELEC2070 – Stuart Jackso\"}]}]}\n>```\n>%%\n>*%%PREFIX%%ircuit (pure natural response)14%%HIGHLIGHT%% ==KVL:== %%POSTFIX%%SOLUTIONELEC2070 – Stuart Jackso*\n>%%LINK%%[[#^tqx8c0n2y6i|show annotation]]\n>%%COMMENT%%\n>Source Free RL Circuit Full Worked KVL\n>%%TAGS%%\n>##Working\n^tqx8c0n2y6i\n\n\n>%%\n>```annotation-json\n>{\"created\":\"2023-03-21T06:35:18.959Z\",\"text\":\"First order Circuits\",\"updated\":\"2023-03-21T06:35:18.959Z\",\"document\":{\"title\":\"ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"link\":[{\"href\":\"urn:x-pdf:22fd19e7131e38b9983d43dc847ae324\"},{\"href\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\"}],\"documentFingerprint\":\"22fd19e7131e38b9983d43dc847ae324\"},\"uri\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"target\":[{\"source\":\"vault:/UNI 2023/ELEC2070/Attachments/ELEC2070 Week 4 2023 Complete Response 1st.pdf\",\"selector\":[{\"type\":\"TextPositionSelector\",\"start\":6797,\"end\":6810},{\"type\":\"TextQuoteSelector\",\"exact\":\"Example 8.3-1\",\"prefix\":\"C2070 – Stuart Jackson – Week 4 \",\"suffix\":\"27𝑑𝑑𝑡 𝑣 𝑡 + 𝑣 𝑡𝑅𝐶 = 𝑉-\"}]}]}\n>```\n>%%\n>*%%PREFIX%%C2070 – Stuart Jackson – Week 4%%HIGHLIGHT%% ==Example 8.3-1== %%POSTFIX%%27𝑑𝑑𝑡 𝑣 𝑡 + 𝑣 𝑡𝑅𝐶 = 𝑉-*\n>%%LINK%%[[#^lubjk3nbc5|show annotation]]\n>%%COMMENT%%\n>First order Circuits\n>%%TAGS%%\n>#Examples\n^lubjk3nbc5\n"
        }
      },
      "MECH2003": {
        "Week 7 - Manufacturing Automation.md": " #MECH/2003  #UniNotes\n\n**Slides:**\n[[Attachments/Week 07 MECH203 Lecture Slides V23-0.pdf]]\n\n# Computer Numerically Controlled (CNC) Machines\nCNC mills come in various levels of complexity based on the number of axis that the milling head or the material can be moved in automatically. A 3-axis CNC mill allows for motion in three directions, the x,y and z linear directions.\nA 5-axis CNC mill allows for movement about five directions, the x, y and z linear motions and rotations about an additional two axis. This allows for almost unlimited axis to the component for more complex machining.\n\n**Examples of CNC Machines:**\n1. Lathes\n2. Mills\n3. Routers\n4. Laser and Water jet cutters\n5. CNC welders\n\nAll these machines share one thing in common. They are fundamentally made of three components:\n1. **Part Program:** List of instructions specific to a part that the machine must execute in order to create the part. Each instruction is either a position or motion the machine must achieve. *Think STL*.\n2. **Machine control unit:** A microcomputer that receives, stores and processes the list of instructions.\n3. **Processing equipment:** The machine that actually undertakes the work. *Lathe, mill, router, printer head*\n\n# Coordinate System and Motion Control\nA standard coordinate system is used to control the position of an NC machine. Three linear axes (x, y, z) and three rotational axes (a, b, c) are used.\n\nCoordinate change for rotational NC systems with one less linear direction required. The simplest NC machines use only two of these axes.\n![[Attachments/Pasted image 20230424221749.png]]\nThe simplest NC machines use only two axes, these include plotters, CNC routers and component insertion machines. To control these machines, only a series of x and y coordinates are required. The addition of further axes allows for more complex work to be undertaken. Three axes systems require x, y and z coordinates to be specified.\n\n## Five Axis Machines\nFive axis machines allow the relative position of the work part and the processing tool to be altered. As depicted in this diagram, there are 5 separate motions that can be conducted either independently or in unison.\n![[Attachments/Pasted image 20230424222320.png]]\nThis allows for access to be achieved using alternative configurations depending on the tool being used. In some cases, it can improve the accuracy with which a component is manufactured.\n![[Attachments/Pasted image 20230424222514.png]]\n\n## Types of Motion Control\n1. **Point to Point Systems:** Also called positioning systems, they move the work head to a position with no regard for the path taken to achieve that location. Once at the location, an operation is completed such as drilling, welding, extruding etc.\n2. **Continuous Path Systems:** Undertake simultaneous control of more than a single axis, and as a result have some more control over the path taken. This is critical for achieving angled lines and two or three-dimensional curves.\n\nIn order to be able to achieve a continuous path motion, some interpolation technique is required. Two alternative techniques are employed depending on the required path, which are:\n1. **Linear Interpolation:** used for straight line paths. To determine the motion, a start and end point are required, as well as a feed rate.\n2. **Circular Interpolation:** This is used when a curve needs to be followed. A start and end point is once again required, but the path between the two is described by a series or radii. The interpolator then generates a series of points which satisfy this path moving along a series of long straight segments that at no time deviate between the desired path and the actual path by more than a pre-determined tolerance.\n\nOne additional consideration for defining an NC path is how the position is specified. This may be either:\n1. **Absolute Position:** The tool location is always defined relative to the origin of the axis system.\n2. **Incremental Position:** The subsequent location is defined relative to the previous location.\n![[Attachments/Pasted image 20230424224005.png]]\n\n### Example 1\nUsing an absolute referencing system, determine the 3 coordinates systems that a 2 axes CNC machine would traverse if it employed linear interpolation to travel from point A(150,250) to point B(200, 300).\n![[Attachments/Pasted image 20230424225737.png]]\n$n= \\text{No of points} + 1$\n\n$$\\Delta x = \\frac{x_{b}-x_{a}}{n}$$\n$$\\Delta y = \\frac{y_{b}-y_{a}}{n}$$\n$$A(150, 250) + (\\Delta x, \\Delta y)$$\n$$\\text{Do that N times}$$\n\n### Example 2\nUsing an incremental referencing system, determine the 4 coordinates points that a 2 axes CNC machine would traverse if it employed linear interpolation to travel from point A(100,200) to point B(500, 200).\n![[Attachments/Pasted image 20230424231123.png]]\n### Example 3\nA CNC machine is required to traverse along a 90 degrees arc with radius 100mm. If at no point the tool is permitted to deviate from the required path by more than 0.1mm, how many interpolations would be required to achieve this?\n![[Attachments/Pasted image 20230424231207.png]]\n\n### A Better Solution to Example 3\n![[Attachments/Pasted image 20230424233513.png]]\n\n\n# NC Positioning System\nWe need to determine a method that will allow these values to be converted into physical movement.\nIf we consider a single linear axis only to begin with, the most common arrangement to achieve motion includes a motor that drives a lead screw attached to a worktable. As the lead screw is rotated, the worktable is translated.\n![[Attachments/Pasted image 20230424234631.png]]\nWhile the image depicts only a single axis, a two axis system is created by mounting the shown arrangement on a second similar system positioned normal to the first. \nThe **tool** is dependent on the required processing equipment, it may be a spindle to undertake milling, a welding probe or a laser cutter. In this particular example, a mill is shown.\nThe **worktable** is where the workpart is fixed while the manufacturing operation is undertaken. The worktable may move in order to translate the workpart otherwise the tool can be moved instead.\n\nMotion is a controlled using one of two positioning systems, **open loop or closed loop**. The fundamental difference between the two is whether **feedback** is used to determine the position.\n![[Attachments/Pasted image 20230424235559.png]]\nThe leadscrew for an **open loop positioning systems** is driven by a stepper motor. For every pulse that is sent to the motor, the motor turns a fraction of a rotation called a **stepping angle**. To complete one revolution, usually **48 steps** are required.\n\n## Stepper Motors\n![[Attachments/Pasted image 20230424235853.png]]\nThe step angle that is achieved by each pulse can be determined by using the following equation:\n$$\\alpha = \\frac{360}{n_{s}}$$\nWhere:\n$\\alpha$ = Step angle achieved (degrees)\n$N_{s}$ = Number of steps per revolution (must be an integer)\n\nFor an open loop system, the number of pulses inputted into the stepper motor controls the position of the worktable. The more pulses provided, the greater the translation that will be achieved in a specific direction.\n\nRotation achieved by any number of pulses can be determined by\n$$A_{m}-an_{p}$$\nWhere:\n$A_{m}$ = Angle of motor shaft rotation (degrees)\n$\\alpha$ = Step angle achieved (degrees)\n$n_{p}$ = number of pulses sent to the motor (must be an integer)\n\nSpeed that the shaft rotation will achieve can be determined by the following equation:\n$$N_{m}=\\frac{60af_{p}}{360}$$\nWhere:\n$N_{m}$ = Speed of motor shaft rotation (rev/min)\n$\\alpha$ = step angle achieved (degrees)\n$f_{p}$ = frequency of pulses sent to the stepper motor (Hz)\n\nGearboxes can be mounted to further increase the resolution that can be achieved by a stepper motor. This will also reduce the speed with which the worktable can move with and increase the tourqe on the leadscrew.\n![[Attachments/Pasted image 20230425001033.png]]\nThe effect that the gear reduction has on the rotation and speed of the leadscrew relative to the stepper motor output can be determined:\n$$N_{m}=r_{g}N_{ls}$$\n$$A_{m}=r_{g}A_{ls}$$\nWhere:\n$A_{ls}$ = Angle of rotation of the leadscrew (degrees)\n$N_{ls}$ = Speed of rotation of the leadscrew (RPM)\n$r_{g}$ = Reduction achieved by the gearbox\n\nTranslation is achieved by rotating the leadscrew can be determined using the following equation:\n$$x = \\frac{pA_{ls}}{360}$$\nWhere:\n$A_{ls}$ = Angle of rotation of the leadscrew (degrees)\n$p$ = Pitch of the leadscrew (mm per revolution)\n\nThe number of rotations required to achieve a given translation can be determined using the following equations:\n$$n_{p}=\\frac{360r_{g}x}{p\\alpha}=\\frac{r_{g}n_{s}A_{ls}}{360}$$\nWhere:\n$A_{ls}$ = Angle of rotations of the leadscrew (degrees)\n$p$ = pitch of the leadscrew (mm per revolution)\n\nSpeed of Translation given the rotational speed of the leadscrew:\n$$v_{t}= f_{r}=N_{ls}p$$\nWhere:\n$A_{ls}$ = Angle of rotations of the leadscrew (degrees)\n$v_t$ = Table speed (mm/min)\n$f_{r}$ = feed rate (mm/min)\n$p$ = pitch of the leadscrew (mm per revolution)\n$N_{ls}$ = Rotational speed of the leadscrew (rev/min) \n\nRotational speed of the leadscrew depends on the frequency of pulses driving the stepper motor:\n$$N_{ls}= \\frac{60f_{p}}{n_{g}r_{g}}$$\nWhere:\n$N_{ls}$ = Rotational speed of the leadscrew (rev/min)\n$f_{p}$ = Pulse train frequency (Hz)\n$n_{g}$ = Steps per revolution\n$r_{g}$ = Gear reduction between the motor and the leadscrew\n\n## Closed Loop Systems\nA **closed loop** requires feedback is used to determine the position.\n![[Attachments/Pasted image 20230425192003.png]]\nWhen considering a closed loop system, a common sensor used to determine the number of rotations achieved is a rotary encoder. This measures the number of pulses detected by a photocell through the slots in an encoder disc.\n![[Attachments/Pasted image 20230425192210.png]]\n\nGiven that a number of pulses are now measured for each rotation, the equations required to determine the position of the worktable are very similar to the ones used for an open loop system.\n$$\\alpha = \\frac{360}{n_{s}}$$\n$$n_{p}=\\frac{A_{ls}}{\\alpha}= \\frac{A_{ls}n_{s}}{360}$$\n$$x=\\frac{pn_{p}}{n_{s}}=\\frac{pA_{ls}}{360}$$\n$$v_{t}=f_{r}=\\frac{60pf_{p}}{n_{s}}$$\nWhere:\n$N_{ls}$ = Rotational speed of the leadscrew (rev/min)\n$f_{p}$ = Pulse train frequency (Hz)\n$n_{s}$ = Steps per revolution\n$r_{g}$ = Gear reduction between the motor and the leadscrew\n$A_{ls}$ = Angle of rotations of the leadscrew (degrees)\n$v_t$ = Table speed (mm/min)\n$f_{r}$ = feed rate (mm/min)\n$p$ = pitch of the leadscrew (mm per revolution)\n$\\alpha$ = Step angle achieved (degrees)\n$n_{p}$ = Number of pulses sent to the motor (must be an integer)\n\n### Example 5\n*A stepping motor has 48 step angles. Its output shaft is coupled to a lead screw with a 4:1 gear reduction. The lead screw which drives the worktable has a pitch = 5mm. The table must move a distance of 75mm from its current position at a travel speed of 400mm/min. Determine:* \n**a) How many pulses are required to move the table the specified distance.**\n![[Attachments/Pasted image 20230425193033.png]]\n**b) The motor speed**\n![[Attachments/Pasted image 20230425193045.png]]\n**c) Pulse frequency required to achieve the desired table speed.**\n![[Attachments/Pasted image 20230425193058.png]]\n### Example 6\n*An NC worktable is driven by a closed-loop positioning system consisting of a servomotor, leadscrew and optical encoder. The leadscrew has a pitch of 3mm and is coupled to the motor with a gear ratio of 5:1. The optical encoder generates 100 pulses per revolution of the leadscrew. The table has been programed to move a distance of 95mm at a feed rate = 300mm/min. Determine:*\n**a) How many pulses are received by the control system to verify that the table has moved exactly 95mm**\n![[Attachments/Pasted image 20230425193201.png]]\n**b) The pulse rate**\n![[Attachments/Pasted image 20230425193222.png]]\n**c) Motor speed that corresponds to the required feed rate.** \nCalculated in previous step:\n![[Attachments/Pasted image 20230425193255.png]]\n\n# Part Programming\nPart programming refers to the programming that would be prepared for a specific part. Part programming requires the programmer to define points, lines, and surfaces of the workpart in the axis system to control the tool relative to the defined part features. Including:\n```ad-info\ntitle: Manual Part Programming\nUsed for jobs such as drilling operations. it requires basic numerical data and special alphanumeric codes to define the steps in the process.\n\n**N010 x70.0 y85 f175 s500**\n\nEach aspect of the code is called a \"word\". The **N word** specifies a sequence number. x, y, f, s, are x and y coordinates, feed, and speed values respectively.\n```\n```ad-bug\ntitle: Computer Assisted Part Programming\nRequires the programmer to first enter a series of geometric features that define the part. This is undertaken using APT motion statements which take the following form:\n\n**P1 = POINT/25.0, 150.0** \n\n**L1 = LINE/P1, P2**\n\nThese descriptions are then used to generate the path that is required. Terms exist for lines, circles, and planes. They can also be used to control feed rates, spindle speed, tool sizes, and tolerances.\n```\n```ad-note\ntitle: CAD/CAM Assisted Part Programming\nUtilises software that allows for the most complex of operations to be controlled easily and with the aid of visual feedback. 3D models can be generated by the user, and instructions generated automatically. Simulations of the operations generated allow for more errors to be picked up on before commiting.\n```\n```ad-example\ntitle: Manual Data Input\nData is directly entered into the machine being controlled.\n```\n\n## Non Machining Operations\nCNC machine operations can either be machining operations or **non-machining operations**. Machining is performing work on the workpiece. However non-machining operations include things such as:\n1. Tape laying machines - Used in composite manufacturing\n2. Coordinate measureing tools - Accurate measurements (BLtouch, feeler gauge)\n3. Drawing plotters - draws funny images and can i guess make marks on workpieces for folds n shit\n",
        "Week 6 - Material Removal Methods.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n[[Attachments/Week 06 MECH203 Lecture Slides V23-1.pdf]]\n\n- Non machining removal techniques\n- Types of different machining options\n- Theory associated with producing chips in machining operations\n- Determining the forces associated with machining\n- Determining the power required for machining operations\n- How temperature affects machining\n\n# Non-Machining Material Removal\nMaterial removal processors can be categorised into a number of families depending on the technique used.\nThere are three main families of material removal processes.\n\n```ad-info\ntitle: Conventional Machining\nPretty Standard Stuff\n\n*Turning, drilling, milling*\n![[Attachments/Pasted image 20230424114911.png]]\n```\n```ad-danger\ntitle: Abrasive Processes\nWhen hard, abrasive particles are utilised to remove material. They are usually used as part of a finishing operation to improve the surface finish. \n\n*Grinding, sanding, filing, polishing, sandblasting, etc.*\n![[Attachments/Pasted image 20230424115057.png]]\n```\n```ad-bug\ntitle: Non-traditional Processes\nAny items that do not fall into either Conventional or Abrasive processes. They remove material by using either; alternative mechanical, electrochemical, thermal, or chemical processors. Think etching, forging, etc. Developed around the second world war, to shape materials that either.\n1. Have special mechanical properties and are not suitable for traditional machining\n2. The desired geometries are too complex for traditional machining\n3. There is a requirement to avoid damage to the surface or the stress associated with traditional machining\n\n*Laser/plasma cutting, etching, water jet cutting, electric discharge wiring, electron beam machining*\n![[Attachments/Pasted image 20230424115751.png]]\n*Chemical processes include cleaning, masking, etching, demasking*\n```\n\n# Machining Operations\n\nReasons we still use machining:\n1. *Variety of Work Materials:* Virtually all solid metals (except the funny ones) can be machined, as well as plastics and wood. Ceramics are typically too brittle and hard to be machined, although it isn't impossible, it is much better to shape ceramics using abrasive machining processes.\n2. *Variety of part shapes and features:* Machining can be used to make regular geometries such as flat planes, round holes, and cylinders. Combine these using variations in shape, tool paths, and tool shapes, irregular geometries can be created.\n3. *Dimensional Accuracy:* Some machining processes can produce dimensions with very tight tolerances. Within $\\pm0.025mm$. Depending on the precision of the equipment you're using and whether you're eyeballing it.\n4. *Good surface finishes:* Machining is capable of creating very smooth surfaces. Roughness values less than 0.4 microns can be achieved in conventional machining operations. Abrasive processes are required to improve this.\n\nWhy it still kinda sucks:\n1. *Wasteful:* Inherently wasteful. Chips generated are waste material, although these can be recycled, they represent waste in terms of the unit operation. Also, unlikely that you'll find and recycle 100% of any waste.\n2. *Time Consuming:* Generally takes longer than alternative processes such as casting or forging. Also, depending on your equipment, you'll have to operate it yourself (NON CNC).\n\n# Chip Production Theory\n![[Attachments/Pasted image 20230424121728.png]]\n![[Attachments/Pasted image 20230424121740.png]]\nMachining is a complex three-dimensional model that can be simplified to a two-dimensional representation. This technique is called the **orthogonal cutting model**, and is represented above. The cutting edge is **ALWAYS** **perpendicular** to the direction of the **cutting speed**.\n\n## Features of a Cutting Tool\nAs the tool is forced into the material, the **chip** is formed by **shear deformation** along a plane called the **shear plane**, which is oriented at the angle φ with the surface of the work. **Only at the sharp cutting edge of the tool does the failure of the material occur**, resulting in the separation of the chip from the parent material. The bulk of the mechanical energy is spent along the shear plane, the material plastically (permanent deformation) deforms along this plane.\n\nThe tool in orthogonal cutting has two elements of geometry\n1. **Rake Angle:** Determines the direction that the chip flows as it is formed from the work part. (Written as $\\alpha$)\n2. **Rake Face:** Deflects the chip, oriented at the **rake angle**\n3. **Clearance angle:** Provides a small clearance between the tool **flank** and the newly generated work surface (Also called the **relief angle**)\n\n## Chip Ratio\nDuring cutting, the cutting edge is positioned a certain distance below the original work surface (**Depth**). This corresponds to the thickness of the chip prior to formation ($t_{o}$). \nAs the chip forms along the shear plane, its thickness increases to $t_{c}$. The **Chip Thickness Ratio** is the relationship between these two (chip ratio).\n$$r= \\frac{t_{o}}{t_{c}}$$\n**Chip thickness ALWAYS increases after cutting**, ($t_{c}>t_{o}$) the ratio will always be less than 1.0. The orthogonal cut has a width $w$, even though this dimension does not contribute much to orthogonal analysis. (Determined by the width of the bit)\n\n## Tool and Chip Geometry\nThe geometry of the orthogonal cutting model allows us to establish an important relationship between the chip thickness ratio, the rake angle, and the shear plane angle. \n(**Where $l_{s}$ = length of the shear plane**)\n$$r= \\frac{l_{s}\\sin \\phi}{l_{s}\\cos (\\phi - \\alpha)}=\\frac{\\sin \\phi}{\\cos (\\phi - \\alpha)}$$\nThis can be rearranged for $\\phi$:\n$$\\tan \\phi = \\frac{r \\cos \\alpha}{1-r \\sin \\alpha}$$\n\nThe shear strain that occurs along the shear plane can be estimated. The left figure demonstrates shear deformation approximate by a series of parallel plates sliding against one another to form a chip. Realistically the shear is felt continuously, although who cares.\n![[Attachments/Pasted image 20230424124138.png]]\n\nReferring to the small portion at the base of each plate (Left diagram) and analysing the shear strain triangle below, it's possible to determine an expression for shear strain:\n![[Attachments/Pasted image 20230424124346.png]]\n$$\\gamma = \\tan (\\phi - \\alpha) + \\cot \\phi$$\n\n\n## Example Question\n*In a machining operation that approximates orthogonal cutting, the cutting tool has a rake angle = 10. The chip thickness before the cut 𝑡𝑜 = 0.50 mm and the chip thickness after the cut 𝑡𝑐= 1.125 mm. Calculate the shear plane angle and the shear strain in the operation.*\n\n**Answer:**\nShear Plane Angle\n$$\\tan \\phi = \\frac{r \\cos \\alpha}{1-r\\sin\\alpha} \\text{ and } r=\\frac{t_{o}}{t_{c}}$$\n$$\\tan \\phi = \\frac{\\frac{0.5}{1.125} \\cos 10}{1-\\frac{0.5}{1.125}\\sin10}=25.4\\degree$$\n$$\\phi = 25.4\\degree$$\n\n## Speeds and Feeds\nA machining operation is any operation that requires the relative motion between the material and a sharp cutting tool. The relative motion is referred to as the cutting speed (rotation), the secondary motion is called the feed (tool movement speed)\n![[Attachments/Pasted image 20230424125109.png]]\nIn milling, the rotating tool is fed slowly across the workpiece, the direction of the feed motion is perpendicular to the tool's axis of rotation (speed)\n\n## Cutting Edges\nCutting tools can have a single cutting edge (left) which are most commonly used in turning operations. Or multiple cutting edges (right), which are used when the relative motion is achieved through spinning the tool like in drilling/milling.\n![[Attachments/Pasted image 20230424132530.png]]\nRegardless of the number of cutting edges, relative motion is required. The primary motion is accomplished at a certain cutting speed $v$. The depth of each cut is denoted by $d$.\n\n## Material Removal Rate\nThe material removal rate $R_{MR}$ for a single cutting edge tool can be calculated as follows:\n$$R_{MD}=vfd$$\n**NOTE:** SI units are not used for this equation, the units are as follows:\n$R_{MR}$ = Material Removal Rate ($mm^{3}/s$)\n$v$ = Cutting Speed ($mm/s$)\n$f$ = Feed ($mm$)\n$d$ = Depth ($mm$)\n\n## Types of Cuts\n1. **Roughing Cuts:** Used to remove large amounts of material, used to get close to the final dimensions quickly. Usually larger depth, speed, or feed. Typically done on a different tool/bit designed specifically for roughing.\n2. **Finishing Cuts:** Used to precisely achieve the desired dimensions and are done during the final stage (Never before roughing). Usually slower, and done with a more precise tool. As getting as precise measurements is much harder with a larger bit.\n\n## Types of Chips\n![[Attachments/Pasted image 20230424133720.png]]\n*Ignore the fucking red circle.*\nThe piece of material removed from the machined component is the chip. There are four different types.\n1. **Discontinuous Chip:** When relatively brittle materials are machined at low cutting speeds, chips often form into separate segments. This tends to impart an irregular surface to the new surface. Typically seen on brittle materials such as cast irons.\n*High tool-chip friction and large feed and depth of cut. Sometimes unavoidable, not that bad.*\n2. **Continuous Chip:** Ductile work materials cut at high speeds and relatively small feeds and depths. Long continuous chips are formed, typically form into long ribbons. Leaves a good surface finish. These can cause chip disposal issues as they can get tangled about the tool, turning tools are often equipped with chip breakers to combat this.\n*Sharp cutting edge, low tool-chip friction, relatively tough material, appropriate feed and speed. Pretty ideal.*\n3. **Continuous Chip with Built-Up edge:** Friction between tool and chip tends to cause portions of the work material to adhere to the rake face of the tool near the cutting edge. This formation is called build-up edge (BUE). Much of the detached BUE is carried away with the chip, sometimes taking portions of the tool rake face with it, reducing the tool's life.\n*Ductile materials at low-to-medium speeds. This isn't ideal. If this is the case adjust settings.*\n4. **Serrated Chips**: These chips are semi-continuous, as they don't come off the work piece smoothly. Cyclical chip formation creates alternating low and high shear strain zones, causing the saw-tooth like appearance in the diagram.\n*Associated with difficult to machine alloys such as titanium and nickel-based superalloys. Even austenitic stainless steels when machined at high cutting speeds.*\n\n# Forces in Metal Cutting\nForces applied against the chip by the tool can be separated into two component forces. Friction force and the Normal force. **Friction force (F)** is the frictional force resisting the flow of the chip along the rake face. The **Normal force (N)** is the force perpendicular to the friction force, and is equal to the normal reaction between the chip and the tool. We can use these to find the coefficient of friction between tool and chop.\n$$\\mu = \\frac{F}{N}$$\n![[Attachments/Pasted image 20230424135452.png]]\nThe **Resultant Force (R)** is the vector combination of these two forces. This is oriented at angle $\\beta$, called the **friction angle**. You can use the same rules around friction to find $\\beta$.\n$$\\mu = \\tan \\beta$$\n\nThere are corresponding forces applied by the work piece back on the tool. **Shear force** \n($F_{s}$) and **normal force to shear** ($F_{n}$). $F_{s}$ is the force that causes shear deformation to occur in the shear plane, $F_{n}$ is perpendicular to the shear force. \n\nBased on the shear force, we can define the shear stress that acts along the shear plane between the work and chip.\n$$\\tau  = \\frac{F_{s}}{A_{s}}$$\nWhere:\n$\\tau$ = Sheer Stress ($N/m$)\n$F_{s}$ = Shear Force ($N$)\n$A_{s}$ = Area ($m^2$)\n\n$\\tau$ represents in this equation represents the level of stress required to perform the machining operation. Therefore, this stress value should be equal to the shear strength of the work material ($\\tau = S$) under the conditions at which cutting occurs.\n\n**We can pretty easily calculate $A_{s}$** : $A_{s}=\\frac{t_{o}w}{\\sin \\phi}$\n\nNone of the four force components, $F, N, F_{s} \\text{ or } F_{n}$ can be directly measured in a machining operation, because the directions in which they are applied vary with different tool geometries and cutting conditions. However, it is possible for the cutting tool to be instrumented using a force measuring device called a **dynamometer**, so that two additional force components acting against the tool can be directly measured: cutting force and thrust force.\n\n## Thrust Force and Cutting Force\n![[Attachments/Pasted image 20230424141145.png]]\nThe cutting force $F_{c}$ is in the direction of cutting, the same direction as cutting speed $v$. Thrust force $F_{t}$ is perpendicular to the cutting force. Cutting forces are pictured above along with the resultant force $R$. The respective directions of these forces are known, so the force transducers in the dynamometer can be aligned accordingly (depending on tool shape and cut angle).\n\nWe can derive equations for the four unknown forces in terms of the two forces that can be measured.\n$$F = F_{c}\\sin \\alpha + F_{t} \\cos \\alpha$$\n$$N = F_{c}\\cos \\alpha - F_{t}\\sin\\alpha$$\n$$F_{s}= F_{c}\\cos\\phi-F_{t}\\sin\\phi$$\n$$F_{n}= F_{c}\\sin\\phi + F_{t}\\cos\\phi$$\n\nGiven we are estimating a real world system, these equations will only give an estimate. For the most part, that's all we need.\n\n## The Importance of Phi\n**Eugene Merchant** determined that the angle $\\phi$ is the angle where the shear stress is equal to the shear strength of the material. He demonstrated that the chip formation will occur in a way that minimises the energy used to create it.\n\nAt any other angle, the shear stress of the material will exceed the shear stress being applied. **Merchant** derived a mathematical expressing relating shear stress to the shear stress angle using this information:\n$$\\tau = \\frac{F_{c}\\cos\\phi-F_{t}\\sin\\phi}{t_{o}w/\\sin\\phi}$$\nHe also found the relationship between shear stress angle, the tool rake, and friction angle:\n$$\\phi = 45 + \\frac{\\alpha}{2}+\\frac{\\beta}{2}$$\nAgain, these are approximations as they do not accommodate for temperature and other influences on material properties.\n\n# Power Required for Machining Operations\nThe product of cutting force and speed gives the power ($W$) required to perform a machining operation:\n$$P_{c}= F_{c}v$$\nWhere:\n$P_{c}$ = Cutting Power ($W$)\n$F_{c}$ = Cutting Force ($N$)\n$v$ = Cutting Speed ($m/s$)\nThis is the power required **at the tool** to complete the machining operation, and does not take into account the losses associated with delivering that power. Most of these losses are a result of gearboxes and friction. **Most machine tools are approximately 90% efficient.**\n\nIt's often useful to calculate power into power per unit volume rate of metal cut. This allows comparison of the power required for different materials regardless of removal rate.\n$$P_{u}=\\frac{P_c}{R_{MR}}$$\nWhere:\n$P_{u}$ = Power per unit volume rate ($W/mm^{3}/s$)\n$P_{c}$ = Cutting power ($W$)\n$R_{MR}$ = Cutting Force ($N$)\n\nBelow is a reference table for different metals values for $P_{u}$ assuming tool is sharp and chip thickness is 0.25 mm:\n![[Attachments/Pasted image 20230424143554.png]]\n```ad-important\nIf the tool is worn, the values here should be multiplied by a factor between 1 and 1.25, with a larger value being used when the tool wear is greater. (If your tool is worn above 1.25 its probably useless anyway)\n```\n\nA correction factor can also be applied to values in the previous table for the power per unit volume of each material, this is used to alter the chip thickness after selecting the appropriate value from the graph below.\n![[Attachments/Pasted image 20230424144019.png]]\nLess power is used to remove more material per cut. This is because this energy instead heats up the bit and workpiece.\n\n# Cutting Temps\nOf the total energy consumed in machining, approximately ~98% is converted into heat (power at the bit). This heat can cause temperatures to be very high at the tool-chip interface. Temps over $600\\degree$ is not uncommon. The remaining energy is retained as elastic energy in the chip.\n\nHigh Temperatures:\n1. Reduce tool life\n2. Produce hot chips which are a safety hazard to the machine operator\n3. Can cause inaccuracies in work part dimensions due to thermal expansion of work material\n\nOne method for determining temp increase associated with machining was derived by Cook using experimental data:\n$$\\Delta T = \\frac{0.4U}{\\rho C}(\\frac{vt_o}{K})^{0.333}$$\nWhere:\n$\\Delta T$ = Mean temperature rise at the tool-chip interface ($C\\degree$)\n$U$ = Specific energy in the operation ($N*m/mm^3$)\n$v$ = Cutting speed ($m/s$)\n$t_o$ = Chip thickness before cut ($m$)\n$\\rho C$ = Volumetric specific heat of the work material ($J/mm^{3}*C$)\n$K$ = Thermal diffusivity of the work material ($m^{2}/s$)\n",
        "Week 9 - Permanent and Non-Permanent Joints.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n[[Attachments/Week 09 MECH203 Lecture Slides V23-0.pdf]]\n\n# Bolts VS Screws\n![[Attachments/Pasted image 20230522103616.png]]\nA bolt is a fastener that is tightened through the use of a nut. A screw is tightened from the head and tightened by the thread in a hole. \n\nBoth screws and bolts operate in the same manner. They have torque applied to them such that the bolt or screw is placed under tension. The tension in the bolt/screw clamps the first component applying a compressive force, increasing the friction force between the two objects. \nA bolt does not prevent the two components from moving relative to each other directly. The clamping action which increases the friction between the two allows a stronger joint in shear to be achieved.\n![[Attachments/Pasted image 20230522103938.png]]\nAs a result, the shank of a screw or bolt must have clearance through the component being clamped. and only be fixed to the far component threads.\n![[Attachments/Pasted image 20230522104359.png]]\nBolts can clamp several components together so long as clearance is allowed.\n\n# Head Geometry\nScrews and bolts come with a variety of different heads depending on the finish required and tools available to apply the necessary torque.\n![[Attachments/Pasted image 20230522104636.png]]\n## Cap/Hex Head and Domed/Mushroom\n![[Attachments/Pasted image 20230522104707.png]]\nCap head (Left) and Domed/Mushroom (Right) head screws can have torque applied through the use of Allan keys. They include a hexagonal recess to insert the Allan key into.\n\nHex head, cap head, and domed/mushroom head screws all protrude above the surface they are bolting against in an assembly.\n![[Attachments/Pasted image 20230522105036.png]]\n**Countersunk** screws fasten against a countersunk hole providing a flush finish. This is only possible when the material is adequately thick enough to accommodate the head. This is only possible where the material is adequately thick.\n\n![[Attachments/Pasted image 20230522105448.png]]\n\nCountersunk screws can have a variety of different recesses to accommodate different tools.\n![[Attachments/Pasted image 20230522105545.png]]\n\n# Screw/Bolt Dimensions\nThere are several key dimensions\n- Diameter\n- Length\n- Thread pitch and type\n\nThe **diameter** of a screw or bolt is specified by the nominal size hole that it will fit into. An M8 screw will fit in an 8mm diameter hole, but it is unlikely that any section of the screw or bolt will have that dimension.\n![[Attachments/Pasted image 20230522105840.png]]\n\nThe length of a screw or bolt is an indication of the combined thickness that the component is required to assemble.\n![[Attachments/Pasted image 20230522105924.png]]\nFor this reason, the length is specific to the type of head being used. For **countersunk** screws and bolts, the length is specified as the overall length.\n![[Attachments/Pasted image 20230522110030.png]]\nFor all other screws and bolts, the length is measured from the base of the head regardless of what head type it may be.\n![[Attachments/Pasted image 20230522110223.png]]\n\nWhen selecting screws and bolts, be certain that the length is sufficient to also include the necessary washers and nuts. At least two turns of thread should be exposed past the nut once assembly is complete.\n![[Attachments/Pasted image 20230522110337.png]]\nMetric screws and bolts are available with two different thread sizes, either coarse or fine. Fine threads are typically only available for diameters greater than M6.\n![[Attachments/Pasted image 20230522110445.png]]\nImperial screws and bolts have a larger variety of threads and great care must be taken that the correct thread is selected.\n![[Attachments/Pasted image 20230522110536.png]]\n\n## Measuring Thread\nThread gauges are used to determine this, they should be located against the screw to ensure the pitch is correct.\n![[Attachments/Pasted image 20230522110803.png]]\n\n# Nuts\n\n## Hex Nuts\nThe most common nut to use is hexagonal in shape and approximately 0.8 times the diameter of a bolt (height not diameter). A half nut may also be used as security which usually has a height of 0.5 times.\n![[Attachments/Pasted image 20230522111033.png]]\n\n## Wing Nuts\nWing nuts provide an option that can be tightened or loosened by hand. They do not allow for the same amount of tension to be applied to the bolt for this reason.\n![[Attachments/Pasted image 20230522111154.png]]\n\n## Lock Nuts (Nylock nuts)\nNylock nuts (Lock nuts) use a ring of plastic at one end which is cut into by the bolt thread, preventing it from loosening. Nylocks should only be used once.\n![[Attachments/Pasted image 20230522111308.png]]\n\n## Castle Nuts\nCastle nuts are designed to be used with locking wire or split pins. The locking wire / split pins ensure the nut cannot come loose without cutting and removing the wire.\n![[Attachments/Pasted image 20230522111407.png]]\n\n# Washers\nWashers are used to spread the compressive load supplied by the bolt and prevent the component that is being clamped from being damaged. They can also be used as spacers.\n\n## Spring Washers\nSpring washers assist with preventing a nut and bolt from loosening by constantly applying a force that increases the friction between bolt and nut thread. More or less they're like a small spring between the nut and the material.\n![[Attachments/Pasted image 20230522111751.png]]\n\n# Rivets\nRivets provide a permanent joint that acts in a similar way to a bolt or screw. The tension in a rivet increases the friction between the two components, restricting movement in the shear direction. Rivets have a head on one side before they are affixed, the second head is often formed through cold working or heating the rivet and hammering it flat to form another head.\n![[Attachments/Pasted image 20230522112133.png]]\nRivets are cheap to manufacture, but take increased labour to install. They have fallen out of favour as things become cheaper and easier to manufacture and labour costs increase.\n\n## Solid Rivets\n![[Attachments/Pasted image 20230522112356.png]]\nSolid rivets have been used in the construction of the Harbor Bridge, Golden Gate Bridge, and many other large steel structures\n\nThey require compression in order to form a secondary head and apply a compressive force to the two components being assembled.\n\nWhen used in large steel structures (requiring large rivets) solid rivets were heated prior to installation, assisting with forming the second head and increasing the compression force once cooled. Workers used to throw red hot rivets to each other during construction, catching them with heat resistant gloves or with tools.\n\n## Semi-Tubular Rivets \nSemi-Tubular rivets have material removed from the end of the shank to reduce the pressure required to form the second head. **This is typically a quarter of the force required for similar solid rivets.**\n![[Attachments/Pasted image 20230522113036.png]]\n\n## Blind Rivets (Pop Rivets)\nThe installation of Blind Rivets naturally apply tension in the fastener without having to apply any heating. They only require access to one side (hence blind) and also offer greater flexibility in the size of components assembled. These are the kind of rivets you use with a pop rivet gun.\n![[Attachments/Pasted image 20230522113312.png]]\n\n## Rivet Selection\nWhen selecting any rivet, it is necessary to specify the diameter, the grip range (length), the head type and material required to apply the required tension.\n![[Attachments/Pasted image 20230522113450.png]]\n\n# Welding\n![[Attachments/Pasted image 20230522115530.png]]\nTwo components are locally heated to the point that the material they are made of melt and fuse together once cooled.\n![[Attachments/Pasted image 20230522114201.png]]\nHistorically its only been done with metals, although welding can be applied to plastic and composites.\n\nTypes include:\n- Stick Welding\n- MIG Welding (Metal Inert Gas)\n- TIG Welding (Tungsten Inert Gas)\n- Spot Welding\n- Oxy-Acetylene Welding \n\n## Stick Welding\nUtilises a sacrificial stick which has the same composition as the parent material being welded. Large currents are passed through the stick to the region being welded to melt the material. Requires decent skill and technique to get right.\n![[Attachments/Pasted image 20230522114657.png]]\nAs welding is conducted the stick is consumed, depositing itself into the final weld. As a result, the operator is required to move the electrode closer to the region as the weld progresses.\n\nThe external coating of the stick (electrode) when melted generates a gas that prevents impurities entering the final weld and compromising its mechanical properties.\n![[Attachments/Pasted image 20230522114910.png]]\n\n## MIG Welding\nMIG welding differs in that a wire, which acts as an electrode, is constantly fed to the region being welded by the weld head. An inert gas is also fed into the region surrounding the wire ensuring the weld is not mechanically compromised by impurities (Lack if oxygen means no oxidization).\n![[Attachments/Pasted image 20230522120438.png]]\n\n## TIG Welding\nTIG Welding uses a tungsten electrode that is only used to create the arc which melts the material. An inert gas is also introduced from the electrode holder.\n![[Attachments/Pasted image 20230522120548.png]]\nThe operator is required to feed the wire into the region by hand to contribute material to the weld. The use of a semi permanent electrode offers the most concentrated heating source, making it ideal for detailed work.\n\n## Spot Welding\nSpot welding utilises electrodes that clamp two pieces of material together and pass large currents between them, melting them where they're clamped. This is commonly used in automated mass production with components made of sheet metal.\n\n## Oxy Acetylene Welding\nUtilises an ignited gas to heat the filler material and the adjacent parent material in order to achieve a weld.\n![[Attachments/Pasted image 20230522123542.png]]\nElectricity isn't required for this process as the torch is fed by an oxygen acetylene mix that is pressurised and ignited.\n![[Attachments/Pasted image 20230522123646.png]]\nThis process is most suitable for remote locations, and even allows for **underwater welding**.\nIf you're comfortable with high currents in a conductive fluid, stick welding is also a possibility. (Should be safe so long as voltage is low enough and DC power is used)\n\n## Weld Types\n**Bead, fillet, plug, or groove** welds are names that describe their location on a component.\n![[Attachments/Pasted image 20230522123910.png]]\n\n## Consequences of Welding\nAs part has undergone heating and cooling, the geometry of the part may be warped. This can make it difficult to achieve necessary tolerances. Jigs and clamps are often used to minimise the effects of warp.\n\n# Bonded Joints\nInclude:\n- Brazing\n- Soldering\n- Cementing\n\n## Brazing\nTwo different materials are joined using a third material that has been heated to fill the gap between the two components utilising capillary action (material flows to fill the space like water would accumulate in crevices). This provides a very smooth/neat finish.\n![[Attachments/Pasted image 20230522124247.png]]\nThe components are heated to temperatures greater than $427 \\degree C$ (800F) using either a furnace or a high temp flame to melt the third material and allow capillary action to occur.\n\n## Soldering\nSoldering is similar to brazing but occurs at temps less than $426 \\degree C$. Joints using this technique should ensure the parent material take all the loads. Load bearing solder is an option, however it isn't very strong and is harder to work with. This is typically used for electrical components.\n![[Attachments/Pasted image 20230522124538.png]]\n## Cementing\nCementing is a fancy word for adhesive. Adhesives offer advantages over fasteners in that they provide much more distributed loads.\n![[Attachments/Pasted image 20230522124646.png]]\nMost adhesives remain inert until some curing process activates the adhesive. These processes may include:\n- Anaerobic Curing - Contact with metal surfaces and absence of oxygen between them\n- Heating\n- Interaction - Two part epoxy or mixing an adhesive with a primer\n- Solvent evaporation\n- Ultraviolet Light\n\n",
        "Week 5 - Small Volume Manufacturing Techniques.md": " #MECH/2003  #UniNotes\n\n**Slides:**\n[[Attachments/Week 05 MECH203 Lecture Slides V23-0.pdf]]\n\n# Why is small volume manufacturing important?\nParticularly in research and development. There is a need to be able to manufacture bespoke pieces of equipment in a cost-effective manner. Examples include.\n- Prototyping\n- Product research and development\n- Custom machinery\n\n## What kind of components do we use?\n- Bearings (linear and rotary)\n\tMinimise the friction between components (linear rails and rotating shafts)\n- Pulleys, belts, chain drives, and gears\n\tCoupling methods for transferring torque from one shaft to another or to another location.\n- Flexible couplings CV Joints\n\tDirect method for coupling two shafts that are close to being aligned. They attach between two non-aligned shafts and transmit power through a flexible center.\n- Fasteners\n\tAllows components to be non-permamently or permanently joined together. (Bolts, screws, clamps, etc)\n- Motors\n\tElectric Motors allow mechanical power to be generated wherever there is suitable electrical supply. IC Engines (Internal Combustion) Use fuel to generate torque\n- Piping and Ducting Sections\n\tUsed to transport gas and fluids in a mechanical system.\n- Extrusions, billets, plate and sheet metal\n\tRaw materials, metal and other materials are available as either extrusions, billets, or sheets. Some extrusions are designed specifically for assembly (rails). A lot more machining is required when working with billets, so it's preferred to use initial materials most similar to your final component.\n\tSheet metal can be folded from a net (2D foldable design) to create shapes so long as the part doesn't need significant wall thickness.\n\n# Manufacturing Techniques\n\n## Material Removal Techniques\n[[Week 6 - Material Removal Methods]]\n*Starting with a piece of greater desired component geometry is achieved.*\n- CNC Machining\n- Milling\n\t![[Attachments/Pasted image 20230424113718.png]]\n- Cutting\n- Grinding\n- Chiselling\n- Lathe\n\n## Additive Material Techniques\n*Laying material such that the final components volume is similar to the volume of material used.*\n- 3D Printing\n- Casting\n- Rapid Prototyping\n\n# Material Removal Theory\n![[Attachments/Pasted image 20230424113812.png]]\nThis is controlled by the speed (or RPM) of the spindle. The following equation can assist with determining the correct RPM after selecting the appropriate cutting speed from the table.\n$$RPM = \\frac{300 * \\text{Cutting Speed}}{\\text{Diameter}}$$\n![[Attachments/Pasted image 20230424114000.png]]\n\n```ad-note\nIt's also important to account for heat buildup in both the part and the drill bits. An ideal cutting speed ensures the heat is concentrated on the chips being removed. Lubricant and coolant is used for this reason.\n```\n\n# Summary\n1. There are many available components that can be purchased pre-processesd to create mechanical systems.\n2. When the desired components can not be purchased, small volume manufacturing techniques can be used to achieve the desired result.\n3. The manufacturing process will usually rely on adding or removing material to achieve the desired component (Forging is also an option but we wont look at it here)",
        "Week 4 - 3D Printing and Laser Cutting.md": "#CAD  #MECH/2003 #UniNotes\n\n**Slides:**\n[[../../../Attachments/Week 04 MECH203 Lecture Slides V23-0.pdf]]\n\n```ad-faq\ntitle: Material Removal VS Material Addition\n**Material removal manufacturing techniques** - Any process where material is removed to create a component. (CNC, Lathe, Cutting, Sawing, Drilling etc)\n\n**Material additive manufacturing techniques** - Any process where material is added to create a component. (3D Printing, Casting)\n\n```\n\n# Rapid Prototyping\nRapid prototyping is typically done using additive manufacturing methods, these have multiple advantages:\n\n- Manufacturing Time\n\tMachining components will generally take longer.\n\n- Material Used\n\tUsing removal manufacturing techniques wastes a lot of material (off cuts, chips, sawdust). Additive manufacturing techniques use a volume of material similar to the volume of the desired object. With tech like 3D printing, you can control exactly how much filament is used to create the part (Assuming supports are negligible)\n\n- Complexity Possible\n\tAdditive manufacturing processes are capable of much more complex geometries (Print in place, vase mode, etc)\n\nAdditive rapid prototype machines all manufacture components by adding material in layers (for now). The way that this is achieved is dependent on which form the materials being used are in. \n\n- Liquid\n\tLiquid monomer or polymer is cured layer by layer (resin printer - cured via UV exposure - Stereo lithography (STL) (File type was named after that))\n\n- Powder\n\tAggregated and bonded layer by layer (laser sintering and powdered metal printers (Powder cast?))\n\n- Solids\n\tLaminated layer by layer (FDM printers)\n\n## Fundamentals of Rapid Prototyping\n\n1. Geometric Modelling - Make your model\n![[Attachments/Pasted image 20230327152845.png]]\n\n2. Tessellation of geometric model - Convert to STL (series of points, triangles, and quadrilaterals)\n![[Attachments/Pasted image 20230327152938.png]]\n\n3. Slicing the model into layers - Cross-sections of the model taken at intervals equal to the layer thickness you're using\n![[Attachments/Pasted image 20230327153052.png]]\n\n### Alternate Names\n- Layer manufacturing\n- Direct CAD manufacturing\n- Solid free form fabrication\n- Rapid prototyping manufacturing\n- 3D Printers\n\n# Stereolithography\n\n![[Attachments/Pasted image 20230327153429.png]]\n\nThe laser used is typically helium-cadmium or argon ion lasers. Which can solidify monomer at a rate of 500 mm/s to \n2500 mm/s.\n\nOnce complete, the part is roughly 95% cured and needs extra UV radiation (UV box) to fully cure.\n\n# Solid Ground Curing\nSimilar to stereolithography only instead of a laser directing light. A mask is used to restrict light from curing monomer other than the monomer that needs curing.\n![[Attachments/Pasted image 20230327153921.png]]\nOnly a thin layer of resin is used\n\nThe light turns on for around 2 seconds, before the light turns off, and the mask is changed to the mask for the next layer. (Electrostatic glass, similar to a photocopier)\n\nThe vacant volume surrounding the component is then filled by pouring a liquid wax into this cavity, By doing this, it is not required to create supports.\n\nThe top of the wax is machined flat to ensure the subsequent layer flat and level.\n![[Attachments/Pasted image 20230327154310.png]]\n\nEach later can be created every 90s, which can be up to 8 times faster than other methods (depending on cross-section and complexity). No support structure is needed due to the wax, and no additional curing is needed\n\n# Droplet Deposition Manufacturing\nOperates by melting the starting layer. As the droplets cool, they weld with the existing layer to create the new layer.\n\nThe location of where each droplet is positioned is controlled by a moving print nozzle. Once the layer is complete, the platform is lowered and the process repeats.\n\nMaterials compatible with this method include wax, thermoplastics, and some low melting point metals (tin, zinc, lead, aluminium, probably pewter that useless fucking lead wannabe)\n\nThe surface created is unlikely to be smooth, therefore a machining operation may be required for each layer to ensure that it remains flat. This method can generate layer thicknesses of 0.1 mm and can apply between 10,000 and 15,000 droplets per second.\n![[Attachments/Pasted image 20230327154912.png]]\n\n",
        "Week 3 - The Design Process.md": "#MECH/2003 #CAD #CAM #UniNotes\n\n**Slides:**\n[[Attachments/Week 03 MECH203 Lecture Slides V19-0.pdf]]\n\n```ad-important\ntitle:Definition - Design\nThe process in which scientific principles and the tools of engineering - mathematics, computers, graphics and language are used to produce a plan, which when carried out, will satisfy a human need\n```\n\n# The Design Process\n![[Attachments/Pasted image 20230327143923.png]]\n\n1. **Identification of Need**: What needs to be solved? Also known as identification of need. Recognising what the problem *may be* and phrasing it in a way that can be communicated to others. Projects may have conflicting requirements, stakeholders are often ignorant of, it's our job to fix 'em.\n\n3. **Definition of the problem**: Defining the problem is a critical task and cannot be understated. It is required to be detailed and include specifications that the solution must comply to in order to be successful. Should also consider the input and output of a given system. Anything that limits freedom of choice may be considered a *constraint* and should be outlined thoroughly. These can includes manufacturing, legal, regulatory, material, time, and financial constraints. Aim should be measurable and an include a date to be achieved by.\n```ad-important\n\nIt may be necessary to return to step 1 (identification of need) discuss with stakeholders and re-evaluate\n```\n\n\n3. **Synthesis**: The Synthesis is a proposed strategy/plan that will be considered to solve the identified problem. This step involves identifying possible ways of solving the definition of the problem. All suggestions should be documented, and some analysis should be conducted to either promote or discount a suggestion based on merit. All assumptions about the system (temporary values) must be clearly stated. It is necessary to synthesise, optimise, and repeat, it may take several iterations\n\n4. **Analysis and Optimisation**: Requires mathematical models be created and utilised to assist with predicting system performance. These must be relative to the aims outlined as part of the definition to the problem.  *This also includes cost analysis and comparisons to competing designs both in the marketplace and other synthesised plans*. Risk must also be included (community, environment, operator, etc)\n```ad-important\n\nIn the event analysis demonstrates the need is not met or the plan is otherwise non-viable. Repeat step 3 (Synthesis) and determine an alternate plan/design. This is normal, and should happen multiple times before presentation. You may even need to re-identify the need if analysis proves it is not feasible to address those specific aims.\n```\n\n5. **Evaluation**: Physical testing is conducted to validate the mathematical models created in step 4 (Analysis and Optimisation) This is done using prototypes. All results must be carefully measured and compared with the aims determined at the beginning.\n```ad-important\n\nFrom this step, it may be necessary to revisit any of the other previous steps if evaluation of the prototypes yields unfavourable results. Mathematical models may need to be revisited. It is critical that each iteration of the design cycle is documented, to prevent unnecessary repetition.\n```\n\n6. **Presentation**: Once the need has been satisfied, the design needs to be presented to stakeholders or potential customers. Presentation is still just as critical as each of the other steps, arguably more. If the design is not widely recognised as solving the need that has been addresses, then there is little value in having addressed the need.",
        "Week 12 - Spring Selection.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n[[Attachments/Week 12 MECH203 Lecture Slides V20-1.pdf]]\n\n# Role of a Spring\n- **Store Mechanical Energy:** For this reason mechanical watches using torsional springs. By winding the watch you store energy in the spring which is released over time.\n- **Provide Force:** Helical extension springs are used to provide a force which will eject toast from a toaster\n- **Reduce Impulse:** We see this in the use of suspension members. A spring allows the impulse to be stretched over a period of time and reduce impulse force.\n\n# Types of Springs\n![[Attachments/Pasted image 20230607191214.png]]\nSprings can be catagorized into three groups. They all work in using the same principles.\n\n## Helical Springs\nThe most common spring, also known as **coil** springs. They are predominantly cylindrical in shape and consist of a constant diameter wire. (Not identical in cross sectional diameter, but in thickness of the wire itself.\n![[Attachments/Pasted image 20230607191428.png]]\nThese come in two different forms depending on the direction they are loaded. \n- If placed in tension, **helical extension** springs are more suitable. \n- If the most frequent load will cause compression, then **helical compression** springs would be required.\n![[Attachments/Pasted image 20230607191617.png]]\n\n## Torsional Springs\nSpace constraints and/or the desire to produce torque make **torsional springs** more suitable in some applications. Torsional springs store energy by being twisted about a central axis.\n![[Attachments/Pasted image 20230607191748.png]]\nTorsional springs can utilise either rectangular or circular cross sections depending on the desired stiffness and anticipated deflection.\n![[Attachments/Pasted image 20230607191835.png||500]]\n\n## Flat Springs\nLike other springs, **flat springs** store and release energy in response to an external load. They are typically manufactured by flat pieces of metal that have been stamped.\n![[Attachments/Pasted image 20230607192032.png||500]]\n### Leaf Springs\nA type of flat spring. These springs are unique as when they are used in a multi leaf configuration, the friction between the multiple flat springs sliding over each other provides damping.\n![[Attachments/Pasted image 20230607192208.png||800]]\n\n### Spring Washers\nAnother type of flat spring. These store energy when a nut is tightened against a bolt, providing load. This adds friction to the assembly which prevents the nut and bolt from coming loose.\n![[Attachments/Pasted image 20230607192439.png||600]]\n\n# Specifying Springs\n\n## Helical Springs\nTo specify a compression helical spring, you must indicate:\n- The spring stiffness required. This is defined by the nominal diameter, the wire material, and wire diameter\n- Length of the spring (without load)\n![[Attachments/Pasted image 20230607192616.png]]\n- Type of end that is required (plain end, squared end, closed end)\n- Direction the spring is wound (left or right handed)\n![[Attachments/Pasted image 20230607192725.png]]\n- The type of end that is required (Machine half loop, raised hook, short twisted loop, full twisted loop)\n![[Attachments/Pasted image 20230607192908.png||600]]\n![[Attachments/Pasted image 20230607192752.png||600]]\n\n## Torsional Springs\nTo specify a torsional spring, you must indicate:\n- The spring stiffness required. This is defined by spring nominal diameter, wire material, and wire diameter\n- Body length of spring desired.\n![[Attachments/Pasted image 20230607193058.png||700]]\n- The type of end that is required (axial, tangential radial, and the angle between ends.\n- Direction that the spring is wound (left or right handed)\n![[Attachments/Pasted image 20230607193216.png]]\n\n# Manufacturing\nSprings are made from a wire wound about a mandrel with some tension. This can be done **hot or cold**.\n\n# Calculations\nForce that a spring provides is proportional and relative to its deflection. With no deflection, the spring provides no force, but as it is compressed/stretched/rotated, the force that it provides increases.\n![[Attachments/Pasted image 20230607193932.png]]\nThe rate with which the spring force increases with deflection is known as the **spring coefficient**. The stiffer the spring, the higher the spring coefficient.\n![[Attachments/Pasted image 20230607194041.png]]\n\nWhile keeping all other parameters equal, a spring can be made stiffer by:\n- Increasing the wire diameter\n- Reducing the mean spring diameter\n- Increasing the pitch (for a compression helical spring)\nA deflected spring stores energy. The amount of energy that is stored is proportional to the spring coefficient and the displacement squared. Therefore, **every time you double the spring deflection, you quadruple the potential energy it is stored.**\n![[Attachments/Pasted image 20230607195719.png]]\nThe energy can be stored by a spring also increases with the **spring coefficient**. The stiffer the spring, the more energy can be stored at a given deflection.\n![[Attachments/Pasted image 20230607195859.png]]\n\n## Examples\n![[Attachments/Pasted image 20230607200024.png]]\n![[Attachments/Pasted image 20230607200040.png]]\n![[Attachments/Pasted image 20230607200053.png]]\n\n## Forces and Force Diagrams\nConsider a mass (m) hung from a spring. When at rest $F_{spring}$ and $mg$ are balanced.\n![[Attachments/Pasted image 20230607200922.png]]\nNow what would happen if the mass was excited by an additional temporary force acting down ($F_{excite}$).\n![[Attachments/Pasted image 20230607201026.png]]\nThe excitation will result in the spring extending. Once fully extended, the potential energy in the spring will return a force. Because of the additional spring extension, the force $F_{spring}$ is now greater than the weight ($mg$) resulting in the object being accelerated into the opposite direction.\n\nAll the potential energy in the spring is consumed and instead the mass now has the potential energy. At this point there is no spring force and the weight of the mass will cause it to begin falling again.\n\nThis initiates the process again causing the spring to deflect, and once again, store the energy in the spring.\n\nThis results in an oscillating motion which, when neglecting friction or gravity, will never stop. This is undesirable for most mechanical systems.\n![[Attachments/Pasted image 20230607201543.png]]\n For this reason springs are usually coupled with dampers as they provide a force that is proportional to the speed of a piston through a fluid.\n ![[Attachments/Pasted image 20230607201629.png]]\nThis dampens the motion, and allows excited mass to come to rest again. Without damping the spring and mass would oscillate indefinitely (or at least for a while)\n![[Attachments/Pasted image 20230607201757.png]]\n\n## Impulse\nSprings reduce the force experienced at any moment in time by increasing the duration that an impulse is transferred with. An impulse is the multiple of force and time.\n$$I = \\Delta mv = Ft$$\nWhere:\n$I$ = Impulse (Ns)\n$m$ = Mass (kg)\n$v$ = Velocity (m/s)\n$F$ = Force (N)\n$t$ = Time (s)\n\n## Stress\nThe maximum stress in a wire of a helical spring can be determined by cutting a spring, and at the cut cross section considering the internal forces/moments to determine the shear force and torsional moment. This reduces to be:\n![[Attachments/Pasted image 20230607202606.png]]\n$$\\tau_{max} = \\frac{8FD}{\\pi d^{3}}+\\frac{4F}{\\pi d^{2}}$$\nWhere:\n$F$ = Spring Force (N)\n$D$ = Spring mean diameter (m)\n$d$ = Wire diameter (m)\n\n## Spring Index and Stress\nThe spring index (C) is the ratio of the spring mean diameter to the wire diameter. Where $K_{s}$ is the shear stress correction factor. Both are defined below:\n$$C = \\frac{D}{d}$$\n$$K_{s} = \\frac{2C + 1}{2C}$$\nThe stress in the spring reduces to be:\n$$\\tau = K_{s}\\frac{8FD}{\\pi d^{3}}$$\n\n## Deflection-Force Relationship\nThe deflection-force relationship can be obtained considering the total strain energy. For a helical spring, this is composed of a torsional and shear component. This allows the spring rate, also known as the spring scale, to be determined as:\n$$k = \\frac{d^{4}G}{8D^{3}N_{a}}$$\nWhere:\n$G$ = Shear Modulus (Pa)\n$N_{a}$ = Number of active coils\n![[Attachments/Pasted image 20230607203818.png]]\n\n## Buckling\nWhen the load on a compression spring becomes too large, it will buckle. This compromises the springs ability to carry a load (obviously), therefore it is necessary to determine when this will occur. This is the same as determining of the spring is stable. For steel springs, this occurs when:\n$$L_{0}<2.63 \\frac{D}{\\alpha}$$\n![[Attachments/Pasted image 20230607204045.png]]\n\n## Tensile Strength of Spring Materials\nTensile strength varies with wire size, the process it undergoes and the material used. The tensile strength of spring materials relative to wire diameter can be represented by.\n$$S_{ut}= \\frac{A}{d^{m}}$$\n![[Attachments/Pasted image 20230607204305.png]]\n\n## Examples\n\n### Example 3 (Impulses)\n![[Attachments/Pasted image 20230607202134.png]]\n![[Attachments/Pasted image 20230607202149.png]]\n\n### Example 4 (Spring at Rest)\n![[Attachments/Pasted image 20230607202220.png]]\n![[Attachments/Pasted image 20230607202238.png]]\n\n### Example 5 (Spring Properties)\n![[Attachments/Pasted image 20230607204343.png]]\n![[Attachments/Pasted image 20230607204359.png]]\n![[Attachments/Pasted image 20230607204632.png]]\n![[Attachments/Pasted image 20230607204859.png]]\n![[Attachments/Pasted image 20230607204910.png]]\n![[Attachments/Pasted image 20230607204923.png]]\n![[Attachments/Pasted image 20230607204942.png]]\n![[Attachments/Pasted image 20230607204957.png]]",
        "Week 2 - Manufacturing Drawings.md": "#MECH/2003 #CAD #CAM #UniNotes\n![[Attachments/Week 02 MECH2003 Lecture Slides V20-0 - SV.pdf]]",
        "Week 1 - Introduction to MECH2003.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n![[Attachments/Week 01 Lecture Slides V23-0.pdf]]",
        "Week 13 - Revision and Summaries.md": "#UniNotes #MECH/2003 \n![[Attachments/Lecture 13 - Revision.pdf]]",
        "Week 11 - Motors and Motor Selection.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n[[Attachments/Week 11 MECH203 Lecture Slides V23-0.pdf]]\n\n# Internal Combustion Engines\nInternal Combustion Engines convert chemical energy into mechanical energy. There are multiple types of internal combustion engines:\n- Four stroke engines\n- Two stroke engines\n- Rotary  engines\n\nAll of these engines have one thing in common, they produce a mixture of fuel and air at a ratio that is volatile. This mixture is compressed, then ignited so that combustion occurs.\nThe resultant pressurised gas is used to drive a mechanism that transfers kinetic energy to the output shaft of the engine.\n\nSuck $\\rightarrow$ Squeeze $\\rightarrow$ Bang $\\rightarrow$ Blow\n\nEach cylinder comprises of multiple moving components that allow the mixture to enter the cylinder, be compressed, ignite and then transfer the kinetic energy to the output shaft.\n![[Attachments/Pasted image 20230606194728.png]]\n\n## Four Stroke\nThey are called four stroke engines as the piston passes either up or down four times in a single combustion cycle, **note how critical the timing of opening and closing valves**.\n\n## Two Stoke\nTwo stroke engines have similar components to a four stroke engine, but the cylinder only moves up and down once in each direction per cycle. (piston moves twice per cycle)\nAs a result, there is no need to have exhaust and intake valves as the air/fuel mixture enters as the exhaust leaves while the piston is in its lowest position.\n![[Attachments/Pasted image 20230606195323.png||400]]\n\n## Rotary Engines\nThese are very unique. They do not utilise pistons, instead they have an eccentrically mounted rotor that compresses the air fuel mixture and is also driven by the combusted and expanding gasses.\nThe technique utilised by a rotary engine dictates that even less moving components are required in comparison to four or two stroke engines and they ignite three times per revolution.\n![[Attachments/Pasted image 20230606195728.png]]\n\n# Motor Efficiency\nAdvantages and disadvantages exist for each type of engine that may make it suitable for different applications. In terms of cost, the engines with the least components would be cheapest making a 2 stroke engine the most cost effective.\n![[Attachments/Pasted image 20230606200037.png]]\n\nA 4 Stroke Engine would be considered the most efficient because its operation ensures all fuel in the cylinder is combusted and very little escapes.\n![[Attachments/Pasted image 20230606200655.png]]\nAll combustion engines produce carbon dioxide. Two stroke engines produce additional pollutants as oil is added to the fuel to lubricate the crank which results in some oil being burnt in the process.\n![[Attachments/Pasted image 20230606201038.png||500]]\nThe efficiency of an IC engine varies depending on the speed with which it is operated and can be anywhere between 25% and 30% efficient.\n\n## Cooling\nA **significant** portion of power produced by an engine is converted to heat and noise. For this reason some IC engines require radiators or cooling fins to help dissipate the unwanted heat.\n![[Attachments/Pasted image 20230606201214.png||800]]\n\n## Turbo (and heat2power?)\nSome engines incorporate turbos in an attempt to recover some of the energy lost through the exhaust gasses. This is used to pressurise the air entering the chamber increasing the quantity of fuel and air that can be combusted.\n![[Attachments/Pasted image 20230606201441.png]]\nAs a result, the energy density and the efficiency of the system can be increased given that some of the wasted heat energy is being re-utilised.\n![[Attachments/Pasted image 20230606201543.png]]\n\n## Engine Control Unit (ECU)\nA critical factor for the efficient operation of an internal combustion motor is the timing of the ignition and control of the air fuel mixture entering the cylinder. This is usually managed using an Engine Control Unit (ECU)\n![[Attachments/Pasted image 20230606201834.png]]\nMost internal combustion engines operate with a fuel to air to ratio by mass of approximately 13%. This value is monitored in an engine with the quantity known as **the lambda value.**\n\nAn ECU will use maps that relate the optimum time to fire the ignition and the desired air fuel mixture depending on the speed of the engine and the throttle position.\n![[Attachments/Pasted image 20230606202240.png]]\nMore advanced four stroke motors also have the ability to alter when the intake or exhaust valves are opened to further enhance efficiency and performance.\n![[Attachments/Pasted image 20230606202515.png]]\n\nThe power and torque produced by a 4 stroke motor varies depending on the speed with which the motor is turning. The torque curve can be estimated as an inverse parabola.\n![[Attachments/Pasted image 20230606202755.png]]\nThe small \"optimum\" band with which an IC engine operates within causes an additional complication that often needs to be addressed. \nTo keep the engine at the peak of the power curve, a gearbox is required to ensure that an adequately large speed range can be achieved which further reduces the efficiency.\n![[Attachments/Pasted image 20230606203139.png]]\n\n## Example\n![[Attachments/Pasted image 20230606203206.png]]\n![[Attachments/Pasted image 20230606203242.png]]\n![[Attachments/Pasted image 20230606203524.png]]\n![[Attachments/Pasted image 20230606203536.png]]\n![[Attachments/Pasted image 20230606203550.png]]\n\n# Electric Motors\nElectric motors offer an alternative method of producing kinetic energy. There are two main categories.\n- Alternating Current (AC) Motors\n- Direct Current (DC) Motors\n\n## DC Motors\n![[Attachments/Pasted image 20230606204029.png]]\nFor a motor that is supplied with direct current, we use a commutator ring making contact with brushes that switch the current through the loop every $180\\degree$. You fucken know how these work.\n![[Attachments/Pasted image 20230606204322.png]]\nAdd more coils to get consistent torque on the output shaft.\nCarbon or brass brushes are frequently used to provide the rotor with current.\n\n### Torque\nThe torque available from a DC motor is linearly proportional to its operating speed, with decreasing torque as the speed increases. **Peak torque is produced at 0rpm, and is available more or less instantly.**\n![[Attachments/Pasted image 20230606204909.png||500]]\nThe torque curve can be raised or lowered by alternating the voltage of the electrical supply while maintaining the current.\n![[Attachments/Pasted image 20230606205014.png||500]]\nThe efficiency is also dependent on the operating speed. Note, this graph indicates a peak of 75% but greater efficiencies are possible.\n![[Attachments/Pasted image 20230606205244.png||500]]\n### Types\nThere are a large variety of DC motors that exist. They include:\n- **Permanent Magnet DC Motor** - (Inexpensive up to 300W) Requires large DC currents which may be difficult to get from common power supplies. Inexpensive and simple to control speed using a chopped DC supply from a battery.\n- **DC Stepper Motors** - Common up to 200W. Give simple and reliable open loop position control. Have high inertia and can be underdamped. Require sophisticated drive electronics.\n- **DC Servo Motors** - With appropriate control system can give good position and speed control. More expensive.\nAll the above options can be considered to be low to medium power options.\n\n### Brushless DC Motors\nBrushless DC motors utilise electronics to switch the direction of the current as opposed to a commutator. The electronics that achieves this is referred to as the **Drive**.\n\n## AC Motors\nAC Motors are the best option for high powered drives (>300W) and are inexpensive when required to operate a single speed. Their large power output is possible as they use induction coils in both the stator and rotor (armature) increasing the magnetic field strength.\n![[Attachments/Pasted image 20230606212425.png||600]]\nCoupled with a modern variable frequency drive, they have excellent speed and torque control. This is because the power being sent to the AC power is stepped (processed/discretised).\n![[Attachments/Pasted image 20230606212615.png||600]]\nBy doing this, the pulse duration can be spread out to provide an effectively lower or higher current supply while the switching can be adjusted to control the frequency.\n![[Attachments/Pasted image 20230606212820.png]]\n### Torque\nTorque characteristics differ to that of a DC motor, but both are capable of producing torque at no rotation.\n![[Attachments/Pasted image 20230606212938.png]]\nThis results in excellent acceleration.\n\n### Examples\n![[Attachments/Pasted image 20230606213055.png]]\n![[Attachments/Pasted image 20230606213104.png]]\n\n# Motor Selection\nBoth IC engines and Electric Motors provide different torque at different speeds. They also take different fuels. This makes their power delivery very different and suited to different niches.\n\n## IC Engines\nThe initial peak torque produced by a DC motor would make it ideal for controlling with high precision.\n\nThe power delivery and operating speed range required could also affect the system. If an IC motor is chosen a gearbox may have to be included.\n\nThe duration with which an IC engine will be required to operate for will determine the amount of fuel needed. This adds to the weight and overall size of the system.\n\n## AC or DC Motors\nIf an AC or DC motor is utilised in a device that is intended to be mobile, a battery will likely need to be included. Depending on the longevity required, this will have an impact on both weight and size.\n\nBatteries would not be required though if the device was stationary and a power source was available. The Duty Cycle will also impact the duration the motor can be operated for.\n![[Attachments/Pasted image 20230606214510.png]]\nIf batteries or a fuel tank were being used to store energy, considerations must be made for safety. Fuel is flammable, and can easily make a bomb. Batteries can be dangerous if damaged or operated outside of rated conditions (charged while used, input voltage too high)\n\n",
        "Week 10 - Design of Basic Rotating Systems.md": " #MECH/2003 #UniNotes\n\n**Slides:**\n[[Attachments/Week 10 MECH2003 Lecture Slides V23-1.pdf]]\n\n# Bearing and Bushings\nAll the mechanisms shown thus far have one thing in common, they have shafts that are rotating at a variety of angular velocities with various torques. \n\nBut somehow, rotating shafts need to be held in position without restricting their rotation. This is what bearings and bushings are required for.\n\nBushings attempt to minimise the friction through careful material selection. Ball bearings minimise the friction by incorporating elements that roll instead of slide. As a result ball bearings are much more efficient.\n![[Attachments/Pasted image 20230605234603.png]]\n\n## Bushings\nBushings are used when cost must be minimised or the shaft rotation speed and loads perpendicular to the shaft are small. They are made of materials that are softer than the shaft so that they wear sacrificially.\n![[Attachments/Pasted image 20230605234752.png]]\n\n## Bearings\nFor high speed applications where loads are being carried by a shaft are also high, bearings are more suitable. Many different types exist, but they all contain similar components.\n![[Attachments/Pasted image 20230605234924.png]]\n\nmany different bearings exist with the type required being dependent on the direction of the load being transferred.\n![[Attachments/Pasted image 20230605235019.png]]\n\nDeep groove ball bearings are designed to accommodate loads that are normal to the axis of rotation. Therefore the steel balls/rollers are supported in this direction.\n![[Attachments/Pasted image 20230605235150.png]]\n\nFor high loads in the direction normal to the shaft, thrust bearings are most suitable. The raceways and rings are reoriented to provide support to the steel balls/rollers in this direction.\n![[Attachments/Pasted image 20230605235310.png]]\n\nWhen a combination of loads both parallel and normal to the shaft are required to be accommodated, tapered or angled bearings are more appropriate with a variety of angles available.\n![[Attachments/Pasted image 20230605235425.png]]\n```ad-note\nThere are many more types of bearings than just these. It is our role as engineers is to ensure that your choose the most suitable for your application, always check the loads and speeds provided by the manufacturer\n```\n\n\n# Torque and Power\nWe can calculate the torque and angular velocity we should expect as the output for a rotating system when we have a variation of connections like gears and belts between shafts.\n$$\\text{Power} = \\text{Torque} * \\text{Angular Velocity}$$\n$$P=T\\omega$$\n\n## Gears\nFor gears, the angular velocity ratio is equal to the inverse of the number of teeth between each gear. **The direction of rotation is reversed between each gear.**\n$$\\frac{\\text{Number of teeth on gear 1}}{\\text{Number of teeth on gear 2}}=-\\frac{\\omega_2}{\\omega_1}$$\n![[Attachments/Pasted image 20230606000840.png]]\n## Chain Drives\nFor chain drives, the angular velocity ratio is also equal to the inverse of the number of teeth between each gear. **The direction of rotation remains the same.**\n$$\\frac{\\text{Number of teeth on gear 1}}{\\text{Number of teeth on gear 2}}=\\frac{\\omega_2}{\\omega_1}$$\n![[Attachments/Pasted image 20230606001012.png]]\n\n## Timing Belts\nFor toothed belt drives, the angular velocity ratio is determined in the same way. **The direction of rotation is not changed UNLESS the belt is crossed.**\n$$\\frac{\\text{Number of teeth on gear 1}}{\\text{Number of teeth on gear 2}}=\\frac{\\omega_2}{\\omega_1}$$\n![[Attachments/Pasted image 20230606001209.png]]\n## V Belts\nThese systems have no teeth, the angular velocity ratio is equal to the inverse of the two pulley diameters.\n$$\\frac{\\text{Pitch Diameter of Pulley 1}}{\\text{Pitch Diameter of Pulley 2}}=\\frac{\\omega_2}{\\omega_1}$$\n![[Attachments/Pasted image 20230606001419.png]]\nOnce the angular velocity has been determined, it is possible to calculate the torque that each shaft experiences **assuming no transmission losses, the power that both shafts have is equal**\n$$T_{1}\\omega_{1}=T_{2}\\omega_{2}$$\n\n## Examples\n![[Attachments/Pasted image 20230606001658.png]]\n![[Attachments/Pasted image 20230606001752.png]]\n## Summary of Practical Uses\nEach one of these methods of transferring torque have their uses.\n### Required Torque\n![[Attachments/Pasted image 20230606002018.png]]\n\n### Shaft Positions\n![[Attachments/Pasted image 20230606002153.png]]\n\n### Efficiency\n![[Attachments/Pasted image 20230606002216.png]]\n\n### Cost Effectiveness\n![[Attachments/Pasted image 20230606002253.png]]\n\n### Angular Velocity Ratio\n![[Attachments/Pasted image 20230606002329.png]]\n\n### Noise Level\n![[Attachments/Pasted image 20230606002405.png]]\n\n### Accuracy of Relative Position\n![[Attachments/Pasted image 20230606002509.png]]\n\n# Losses in the System\nEven bearings that drastically reduce the friction in comparison to a bushing still have some measurable inefficiencies related to their operating load and speed, which can be estimated:\n$$M = 0.5\\mu Pd$$\nWhere:\nM = Frictional Moment (Nm)\n$\\mu$ = Constant coefficient of friction\nP = Equivalent dynamic bearing load (N)\nd = Bearing bore diameter (m)\n**Extra Resource:**\nhttp://www.skf.com/group/products/bearings-units-housings/ball-bearings/principles/friction/estimating-frictional-moment/index.html\n\n## Examples\n![[Attachments/Pasted image 20230606002954.png]]\n![[Attachments/Pasted image 20230606003102.png]]\n![[Attachments/Pasted image 20230606003122.png]]\n\n# Transferring Torque Between Components\nWe can prevent the torque we wish to transfer from simply spinning the shaft within the pulley/gear a number of ways.\n![[Attachments/Pasted image 20230606003309.png]]\n![[Attachments/Pasted image 20230606003327.png]]\n\n## Interference Fit\nRelies on a shaft which is oversized relative to the hole in the pulley/gear. To assemble an interference fit it is necessary to heat the pulley and cool the shaft. Once all components return to the same temperature they will apply pressure to each other.\n\n## Flat and Grub Screw\nBy machining a flat portion into the shaft, it is possible to fix a pulley/gear to the shaft using a grub screw. To do this a threaded hole is required in the pulley/gear where the grub screw is inserted.\n![[Attachments/Pasted image 20230606184938.png||500]]\n\n## Keyway\nA keyway requires a slot to be machined into the shaft and the pulley which a \"key\" can be inserted into preventing free rotation.\n![[Attachments/Pasted image 20230606185104.png||500]]\n\n## Splines\nA series of grooves or teeth that are machined into both the shaft and the pulley/gear, acting like many keyways.\n![[Attachments/Pasted image 20230606185205.png||500]]\n\n## Cost Effectiveness\n![[Attachments/Pasted image 20230606185242.png]]\n\n# Tolerances\nIn reference to interference fits, how much interference is required. Surprisingly little, it is specified by the tolerance provided for that particular section of the shaft.\n![[Attachments/Pasted image 20230606185813.png]]\n\nA shaft refers to a component that fits into another member and does not only refer to circular sections.\n![[Attachments/Pasted image 20230606185858.png||500]]\nThe hole is the location that the shaft fits into, this may not be a hole. This can refer to a gap between two other components or a slot.\n![[Attachments/Pasted image 20230606190003.png||500]]\n\n## Types of Fits\n- **Interference fits** - The two components are fixed together due to the shaft being larger than the hole and can only be assembled after heating and cooling.\n- **Transition fits** - The two components can be assembled with some effort and the two mating components are very similar sizes.\n- **Clearance fits** - the two components easily fit together as the hole is larger than the shaft.\n![[Attachments/Pasted image 20230606190309.png]]\n\nTolerance for each fit include a **basic (nominal) size** as well as the **Limits of size**\n\n# Tolerance Tables\n## Hole Basis System\n![[Attachments/Pasted image 20230606190732.png]]\n\n## Shaft Basis System\n![[Attachments/Pasted image 20230606190752.png]]"
      },
      "ELEC2040": {
        "Week 7 - Laplace Transform.md": "#Communication/SignalProcessing #Communication #ELEC/2040 #UniNotes\n\n**Slides/Audio:**\n[[Attachments/Week 8 Laplace TF.pptx]]\n[[Attachments/Week 8 Laplace TF.pdf]]\n\n**Relevant Videos:**\n- [Laplace Transform Explained with an Example](https://youtu.be/wvs8jhW-Z1I)\n- [Laplace Transform Equation Explained](https://youtu.be/F_XmgIryugU)  \n- [Laplace Transform Region of Convergence Explained](https://youtu.be/SexBL1OlhhU)\n- [Laplace Transform of Exponential Function](https://youtu.be/xnoDSl71jqY)\n- [Laplace Transform of Exponential of Mod Time](https://youtu.be/teuk1QxM-yw)\n[Laplace Matlab Examples](https://ilearn.mq.edu.au/pluginfile.php/8194502/mod_label/intro/LaplaceExamples.m)\n\n",
        "Week 4 - Convolution.md": "#ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides/Audio**\n![[Attachments/Audio Book Week 4 1.pptx]]\n[[Attachments/Audio Book Week 4 1.pdf]]\n\n**Relevant Videos**\nIain Collings - How to understand Convolution (Good Explanation)\nhttps://www.youtube.com/watch?v=x3Fdd6V_Hok&feature=youtu.be\n- What is convolution? and two examples where it arises\n- Convolution Equation explained\n- How to Understand Convolution\n- Convolution with Delta\n- Convolution Square with Rectangle\n- Convolution Square with Exponential\n- Convolution of Two Exponentials\n\n# Convolution of Two Square Pulses\n![[Attachments/Pasted image 20230612163243.png]]\n![[Attachments/Pasted image 20230612163256.png]]\n\n",
        "Week 9 - Sampling.md": " #ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/Week 9 Sampling.pdf]]\n\n**Relevant Videos:**\n- [Sampling Signals](https://youtu.be/AcuQnIXiZ2A)\n- [Sampling Example](https://youtu.be/50sZh1YWu_o)  \n- [How are Signals Reconstructed from Digital Samples?](https://youtu.be/dD9HC1GThZY)\n- [What is Aliasing?](https://youtu.be/B3nZUFNkTGY)\n- [Fourier Transform of sum of delta functions](https://youtu.be/t0NLutwAi3c)  \n- [Why is the Fourier TF of a Sum of Deltas also a Sum of Deltas?](https://youtu.be/ry171Hgvm-8)\n\n# CT and Samples\nHow fast do you need to sample a CT signal and then **EXACTLY** reconstruct it from the samples?\n![[Attachments/Pasted image 20230524195139.png]]\n\n## Impulse Train Sampling\n\nUsing an Impulse Train: $p(t) = \\sum_{n=-\\infty}^{\\infty} \\delta (t-nT)$ To sample $x(t)$\n\nGives $x_{p}(t) = x(t)p(t)$\n\n$x_{p}(t) = \\sum_{n=-\\infty}^{\\infty} x(nT)\\delta(t-nT)$\n\n**In the frequency domain:**\n$X_p(j\\omega) = \\frac{1}{{2\\pi}}X(j\\omega)\\ast P(j\\omega)$\n\nWhere: $P(j\\omega) = \\frac{2\\pi}{T}\\sum_{k=-\\infty}^{\\infty} \\delta(\\omega - k \\omega_s)$ (Fourier transform of the impulse train)\nWhere: $\\omega_{s}= \\frac{2\\pi}{T}$\n\n$X_{p}(j\\omega) = \\frac{1}{T}X(j\\omega)\\ast \\sum_{k=-\\infty}^{\\infty}\\delta(\\omega - k\\omega_s)$\n\n$X_p(j\\omega)=\\frac{1}{T}\\sum_{k=-\\infty}^{\\infty}X(j(\\omega - k\\omega_s))$\n\n![[Attachments/Pasted image 20230524201220.png]]\n\n# Sampling Theorem\n\nFor $x(t)$ bandlimited, $X(j\\omega) = 0$ for $|\\omega|>\\omega_s$ \nIf sampling is done at period T\nthen $x(t)$ is uniquely determined by samples $x(nT)$ **IF**\n$$\\omega_{s}=\\frac{2\\pi}{T}> 2\\omega_m$$\n\nWhere: $2\\omega_m$ is called the **NYQUIST RATE**\nand: $\\omega_m$ is called the **NYQUIST FREQUENCY**\n\nRecover $x(t)$ from $x_p(t)$ using ideal LPF.\n![[Attachments/Pasted image 20230525135204.png]]\n\n$x_{p}(t) \\ast x(t) \\text{ IF } \\omega_{s}>2\\omega_{m}$\n$h(t)$ is an ideal LPF\n\n# Reconstruction from samples interpolation\n\n## Ideal Low Pass Filter\n*With Gain T*\n![[Attachments/Pasted image 20230525140031.png]]\n\n\n$h(t) = T*\\frac{sin(\\omega_{c}t)}{\\pi t}$\n![[Attachments/Pasted image 20230525140221.png]]\n$h(t) = 0$ when $\\omega_{c}t = kTC$\ni.e. $t = \\frac{2k\\pi}{\\omega_{s}}= kT$\n\n**Recall:**\n$x_{p}(t) = \\sum_{n=-\\infty}^{\\infty}x(nT)\\text{ }\\delta(t-nT)$\n$x_{r}(t) = \\sum_{n=-\\infty}^{\\infty}x(nT)\\text{ }h(t-nT)$\n![[Attachments/Pasted image 20230525141244.png]]\nReconstructed **EXACTLY** if Nyquist is satisfied.\n\n## Zero Order Hold\n![[Attachments/Pasted image 20230525141428.png]]\n$$H(j\\omega)=e^{-j\\omega \\frac{T}{2}} \\frac{2 \\sin(\\omega \\frac{T}{2})}{\\omega}$$\n![[Attachments/Pasted image 20230525141632.png]]\n\n## First Order Hold\n![[Attachments/Pasted image 20230525141747.png]]\n$$H(j\\omega)=\\frac{1}{T}[\\frac{\\sin(\\frac{\\omega T}{2})}{\\omega/2}]^2$$\n![[Attachments/Pasted image 20230525142004.png]]\n\n# Under sampling: Aliasing\n\nSuppose $\\omega_{s} < 2\\omega_{m}$\n![[Attachments/Pasted image 20230525142127.png]]\n\nUsing ideal LPF does **NOT** recover the signal. Higher frequencies are **mapped (folded back)**.\n\nSince \"Noise\" in a system has a broad spectrum, a typical signal **REALLY** looks like.\n![[Attachments/Pasted image 20230525142420.png]]\nWe need a LPF **Before** sampling so that the HIGH FREQ noise doesn't get folded back, affecting our reconstruction.\n\n## Examples\n![[Attachments/Pasted image 20230525143645.png]]",
        "Week 8 - Laplace Transform Properties.md": "#ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/Week 9 Laplace TF Properties.pdf]]\n\n**Relevant Videos:**\n- [What is the Fourier Transform?](https://youtu.be/G74t5az6PLo)\n- [What is the Fourier Transform Used For?](https://youtu.be/VtbRelEnms8)\n- [Fourier Transform Equation Explained](https://youtu.be/8V6Hi-kP9EE)  \n- [Fourier Transform of cos function](https://youtu.be/McITNfo3LKc)  \n- [Fourier Transform of cos with phase shift](https://youtu.be/97eKhJwf9Mk)  \n- [What is negative frequency?](https://youtu.be/gz6AKW-R69s)\n- [Time and Frequency Scaling](https://youtu.be/7M0js8Y9EyY)\n\n**Practical:**\n[[Attachments/Practical Week 8 Laplace Properties.pdf]]\n\n# Properties of Laplace Transform\nRecall:\n$$x(t) \\leftrightarrow_{L} X(s) \\text{ With ROC = R}$$\n\n## Linearity\n$$ax_{1}(t) + b x_{2}(t)\\leftrightarrow_{L} aX_{1}(s)+bX_{2}(s)$$\nWith $ROC = R_{1}\\cap R_{2}$\n(At least)\n\n## Time Shift\n$$x(t-t_{0})\\leftrightarrow_{L}e^{-st_{0}}X(s)\\text{ ROC = R}$$\n\n## Convolution\n$$x_{1}(t)*x_{2}(t) \\leftrightarrow_{L} X_{1}(s) X_{2}(s)$$\nWith $ROC = R_{1}\\cap R_{2}$\n\n## Differentiation\n$$\\frac{dx(t)}{dt} \\leftrightarrow_{L}sX(s)$$\nWith $ROC \\text{ Contains } R$\nROC Larger if pole at S=0 is cancelled\n$$\\frac{d}{dt}\\leftrightarrow_{L}S$$\n$$\\frac{d^{2}}{d^{2}t} \\leftrightarrow_{L}S^{2}$$\nNot mathematically correct, although in practice this works.\n\n## Integration\n$$\\int_{-\\infty}^{t}x(t) dt \\leftrightarrow_{L} \\frac{1}{s}$$\nWith $ROC Contains R\\cap{Re\\{s\\}>0}$\n\n## Initial Value Theorem\n$$x(ot) = \\lim_{s\\rightarrow\\infty} sX(s)$$\nFor $x(t) = 0, t<0$ and no singularities at $t=0$\n\n## Final Value Theorem\n$$\\lim_{t\\rightarrow \\infty} x(t) = \\lim_{s\\rightarrow 0}sX(s)$$\nFor $x(t) = 0, t<0$ and no singularities at $t=0$\n\n## Examples\n![[Attachments/Pasted image 20230612135336.png]]\n![[Attachments/Pasted image 20230612135354.png]]\n![[Attachments/Pasted image 20230612135412.png]]\n\n# Analysis And Characterization of LTI Systems with the Laplace Transform\n$$Y(s) = H(s) X(s)$$\nRecall that if $s = j\\omega$ then its just the fourier transform.\n\n## Causality\n$$h(t) = 0\\text{ For } t<0$$\n$$h(t) \\text{ Right Sided}$$\n```ad-note\nROC Must be a right half plane in order to be causal. BUT only holds in reverse if $H(s)$ is rational.\n```\n### Examples\n#### Example 1\n![[Attachments/Pasted image 20230612140432.png]]\n\n#### Example 2\n![[Attachments/Pasted image 20230612140501.png]]\n\n#### Example 3\n![[Attachments/Pasted image 20230612140521.png]]\n\n\n## Stability\nLTI System is Stable If:\n$$\\int_{-\\infty}^{\\infty} |h(t)| \\text{ dt }<\\infty$$\nA stable LTI has a Fourier Transform\n\nAlso, Fourier Transform = Laplace Transform when evaluated along $j\\omega$ axis\n```ad-important\nLTI System is Stable if ROC of $H(s)$ includes $j\\omega$ axis\n```\n```ad-attention\ntitle: Important Observation\nA causal system with rational $H(s)$ is stable if all poles of $H(s)$ have \n\nRe{s} < 0\n```\n\n\n### Examples\n#### Example 1\n![[Attachments/Pasted image 20230612141208.png]]\n![[Attachments/Pasted image 20230612141219.png]]\n\n## LTI Systems Described by Differential Equations\n![[Attachments/Pasted image 20230612142850.png]]\n![[Attachments/Pasted image 20230612142902.png]]\n\n![[Attachments/Pasted image 20230612142918.png]]\n![[Attachments/Pasted image 20230612142934.png]]\n",
        "Week 2 - Signal Operations and Signal Properties.md": "#ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides/Audio:**\n[[Attachments/Audio Book Week 2.pptx]]\n\n**Relevant Videos:**\n- [Shifting Functions](https://www.youtube.com/watch?v=mPo6LkaIKAY&feature=youtu.be)\n- [Time Scaling and Shifting a Sinusoid](https://youtu.be/NK0Pl3CODQ0)\n- [Signal Power and Energy](https://youtu.be/7I9XEhAup4c)\n- [Decibels and 3dB](https://youtu.be/ZMgd2obTZyc)\n",
        "Week 6 - Fourier Transform Principles.md": "#ELEC/2040  #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/Week 6- Fourier Transform Properties.pptx]]\n[[Attachments/Week 6- Fourier Transform Properties.pdf]]\n\n**Relevant Videos:**\n- [Fourier Transform Property Examples](https://youtu.be/kbRYf1CwPMU)\n- [Duality Example](https://youtu.be/2FoJrppVZuk)  \n- [Fourier Transform Duality Rect and Sinc Functions](https://youtu.be/rUgBhEpeqxo)\n- [Convolution using the Fourier Transform - Example](https://youtu.be/5Rygv682Y9E)\n- [System Example with cos Input](https://youtu.be/GkG3naauh_4)\n- [Why is the Fourier TF of a Sum of Deltas also a Sum of Deltas?](https://youtu.be/ry171Hgvm-8)\n\n**Prac:**\n[[Attachments/Practical Week 6.pdf]]\n",
        "Week 5 - Fourier Series.md": "#ELEC/2040  #Communication/SignalProcessing #Communication #UniNotes\n\n**Relevant Videos:**\n- [What is the Fourier Transform?](https://youtu.be/G74t5az6PLo)\n- [What is the Fourier Transform Used For?](https://youtu.be/VtbRelEnms8)\n- [Fourier Transform Equation Explained](https://youtu.be/8V6Hi-kP9EE)  \n- [Fourier Transform of cos function](https://youtu.be/McITNfo3LKc)  \n- [Fourier Transform of cos with phase shift](https://youtu.be/97eKhJwf9Mk)  \n- [What is negative frequency?](https://youtu.be/gz6AKW-R69s)\n- [Time and Frequency Scaling](https://youtu.be/7M0js8Y9EyY)\n\n**Slides:**\n[[Attachments/Week 5 Fourier Transform.pptx]]\n[[Attachments/Week 5 Fourier Transform.pdf]]\n\n# The Fourier Transform\n$$f(t) \\rightarrow_{F}F(\\omega)$$\n$F(\\omega)$ is a signal in the frequency domain, its a function of frequency\n\n$y(t) = e^{j\\omega t}$ is a function of t for a fixed value of $\\omega$\n$Z(\\omega) = e^{j\\omega t}$ is a function of $\\omega$ for a fixed value for t\n\n**Inverse Fourier Transform:**\n$$f(t) = \\frac{1}{2\\pi} \\int^{\\infty}_{-\\infty} F(\\omega) e^{j\\omega t} d\\omega$$\nThis takes $F(\\omega)$ and tells us how to get $f(t)$\n\n**Fourier Transform:**\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} dt$$\nThis takes $f(t)$ and gives us $F(\\omega)$\n\n*Both the fourier and inverse fourier transforms are linear*\n\n![[Attachments/Pasted image 20230612170053.png]]\n![[Attachments/Pasted image 20230612170107.png]]\n\n# Energy Spectral Density (Huh)\nFor an energy signal $x(t)$ with Fourier Transform $X(\\omega)$ we can interpret $\\frac{1}{2\\pi}|X(\\omega)|^{2}$ as the energy density at frequency $\\omega$.\n\n**Parseval's Equation States that**\n$$\\int_{-\\infty}^{\\infty} |x(t)|^{2} dt = \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}|X(\\omega)|^{2}d\\omega$$\nWe can compute the energy density in either time domain.\n\n**Time domain:**\n$$E = \\int_{-\\infty}^{\\infty}|x(t)|^{2}dt$$\n\n**Frequency Domain:**\n$$E = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty}|X(\\omega)|^{2}d\\omega$$\n\nWe can change the range over which we integrate in order to find the energy within a specific band\n\n```ad-note\nThere is no energy density for signals like $x(t) = cos(\\omega_{0}t)$ but there is a power spectrum for such signals.\n```\n\n# Properties\n\n## Linearity\n![[Attachments/Pasted image 20230612171315.png]]\n\n## Time Reversal\n![[Attachments/Pasted image 20230612171340.png]]\n\n## Time Scaling\n![[Attachments/Pasted image 20230612171437.png]]\n![[Attachments/Pasted image 20230612171503.png]]\n\n## Time Shift\n![[Attachments/Pasted image 20230612171519.png]]\n\n## Frequency Shift\n![[Attachments/Pasted image 20230612171539.png]]\n\n",
        "Week 13 - Digital Filter Design.md": "#ELEC/2040 #Communication/SignalProcessing #Circuits #Communication #UniNotes\n\n**No Slides, likely to not be assessed**\n\n**Iain Collings Videos:**\n[Introduction to Image Processing with 2D Fourier Transform](https://youtu.be/tlwIWjeuu8U)\n\n**Practicals:**\n- [Filter Design in Matlab](https://ilearn.mq.edu.au/pluginfile.php/8194516/mod_label/intro/Matlab%20code%20for%20filter%20design.docx?time=1685597706701)\n- [VoiceSignal](https://ilearn.mq.edu.au/pluginfile.php/8194516/mod_label/intro/VoiceSignal.mat)\n- [Filtering in 2D in Matlab](https://ilearn.mq.edu.au/pluginfile.php/8194516/mod_label/intro/ImageProcExample.m)\n- [Sample Image](https://ilearn.mq.edu.au/pluginfile.php/8194516/mod_label/intro/ImageSmall.JPG)\n",
        "Week 3 - Linear Time-Invariant Systems.md": "#ELEC/2040 #Circuits #Communication #UniNotes\n\n**Slides/Audio**\n[[Attachments/Audio Book Week 3.pdf]]\n\n**Relevant Videos:**\n- Delta Function\n- How to Understand the Delta Impulse Function\n- Sum of Delta Functions\n- What is a linear time-invariant system?\n- Impulse Response\n\n**Practical**\n[[Attachments/PracticalWeek3.pdf]]\n\n# Linear Time-Invariant Systems and Impulses - Intro to convolution\nSystems are essentially anything that takes an input signal, performs some action, and then gives an output signal.\n![[Attachments/Pasted image 20230306152013.png|400]]\n\n## Gain\nGain circuits will multiply some signal by another value. In both examples the signal is multiplied by two, with the constant 3V signal becoming a constant 6V signal. The second example alters the slope of the signal to be 3 as opposed to the previous gradient of 1.5.\nThe gain can also be a number 0 < h < 1, this is often referred to as attenuation.\n\n![[Attachments/Pasted image 20230306152051.png|400]]\n\n## Square Law Device\nThe Square Law Device simply raises the input signal to the power of 2.\n$x(t)$ -> Square Law Device -> $y(t)=(x(t))^2$\n![[Attachments/Pasted image 20230306153744.png]]\nIf the signal has a slope, the Square Law Device will transform it into a curve. It raises the degree of whichever signal enters it.\n\n## Delay\nDelaying a signal is as easy as it sounds. Delay the signal by T seconds.\n$x(t)$ -> Delay of T Seconds -> $y(t) = x(t-T)$\n![[Attachments/Pasted image 20230306154155.png]]\n\n# Two Path Radio Channel\n![[Attachments/Pasted image 20230306154238.png|400]]\nA two path radio channel sends out two signals that follow a different path. Each signal has its own delay and gain values. Two Path signals follow the form:\n$$y(t) = h_{1}x(t-T_{1})+h_{2}x(t-T_2)$$\n\nWhere:\n$h_{1}$ = Gain of Path 1\n$h_2$ = Gain of Path 2\n$T_1$ = Delay of Path 1 (sec)\n$T_2$ = Delay of Path 2 (sec)\n\n## N-Path Radio Channel\nFor signals that go through more than two channels, the equation is as follows.\n$$y(t) = \\sum_{i=1}^{n} h(T)x(t-T)\\space \\Delta T$$\n\n## Continuum of Paths\nFor a continuum of paths, the sum of paths and the output signal is as follows\n\n$$y(t) = \\int h(T)x(t-T)\\Delta T$$\nbetween infinity and negative infinity\n\n# Electrical Circuit\n![[Attachments/Pasted image 20230313131734.png]]\n\n$$i(t) = \\frac{v_{s}(t) - v_{c}(t)}{R}$$\n$$i(t) = C \\frac{\\Delta v_{c}}{\\Delta t}$$\n$$RC = 1/2$$\n$$\\frac{\\Delta v_{c}}{\\Delta t} + 2v_{c}(t) = 2v_{s}(t)$$\n\n\n> All above systems (except Square Law Device) are linear, time invariant systems\n\n# Linear Systems\nIf a system is linear:\n\n$$ x(t) \\rightarrow System \\rightarrow y(t)$$\n$$\\alpha x(t) \\rightarrow System \\rightarrow \\alpha y(t)$$\nFor any constant $\\alpha$.\n\nA more formal definition\n\n$$x(t) = \\alpha_{1}x_{1}(t)+\\alpha_{2}x_{2}(t) \\rightarrow System \\rightarrow y(t) = \\alpha_{1}y_{1}(t) + \\alpha_{2}y_{2}(t)$$\n\nFor any input signals $x(t)$ & $y(t)$ and constants $\\alpha_1$ & $\\alpha_2$\n**Then system is linear**\n\n# Unit Impulse Signal\n![[Attachments/Pasted image 20230313133107.png]]\n\n$\\delta^{\\epsilon}(t)$ Is a short pulse of duration $\\epsilon$\n\n![[Attachments/Pasted image 20230313133312.png]]\n\n$$\\int_{-\\infty}^{\\infty} \\delta^{\\epsilon}(t)\\Delta t = 1$$\n\n![[Attachments/Pasted image 20230313133803.png]]\n$$\n \\delta(t) = \\begin{cases} \n      \\infty & \\textrm{ if $t=0$} \\\\\n      0 & \\textrm{Everywhere Else} \\\\\n   \\end{cases} \n$$\n\n$$\\int_{-\\infty}^{\\infty} \\delta (t)\\Delta t = 1$$\n## Magnitude of Impulse and Integration\n![[Attachments/Pasted image 20230313134608.png]]\n\n$$x(t) = 3 * \\delta (t)$$\n\n\n\n$$\\int_{-\\infty}^{\\infty} x (t)\\Delta t = 3$$\n$$y(t) = 48(t-2)$$\nIntegral between 3 & 1 of y(t) = 4\n\n## Integration Properties of Signals made up of Impulses\n\nRecall some integrations properties of the $\\delta$ function.\n![[Attachments/Pasted image 20230313141758.png]]\n\nHere is a signal with two delta functions:\n$$x(t) = 2*\\delta*(t+3) + 0.5*\\delta*(t-2)$$\nWe can also integrate this signal, x(t), over different intervals\nThe rule is to add up the magnitudes of the impulses that lie in the range of integration.\n![[Attachments/Pasted image 20230313142200.png]]\n\nSince we are looking at integrating the unit impulse signal, there is a simple connection between the unit impulse signal and the unit step function, which is obtained by integration\"\n![[Attachments/Pasted image 20230313142529.png]]\n![[Attachments/Pasted image 20230313142541.png]]\n\n## Some other Properties of Unit Impulses\nWhat happens if we multiply a signal by $\\delta (t)$?\n![[Attachments/Pasted image 20230313142642.png]]\n\nWhat does $\\delta (-t)$ look like?\n![[Attachments/Pasted image 20230313142944.png]]\n\nWhat happens if we multiply a signal by $\\delta (t-t_{0})$?\n![[Attachments/Pasted image 20230313143020.png]]\\\n\n## Impulse Response Of a System\n![[Attachments/Pasted image 20230313143054.png]]\n\n# Time Invariant System\n\nA system is time invariant if the system impulse response is the same, no matter what time we send the impulse.\n![[Attachments/Pasted image 20230313143157.png]]\nIf system is time-invariant output will be $h(t-\\tau)$\n\nA Linear Time-Invariant system (LTI System) Is one that is Linear and Time-Invariant.\n\n\n# The Sifting Property of the $\\delta$ Function\n\n$$\\int_{-\\infty}^{\\infty} f(t) \\delta(t) \\Delta t = \\int_{-\\infty}^{\\infty} f(0) \\delta(t) \\Delta t = f(0)$$\n\nThis first equation says we can use the unit $\\delta$ function to **sift** out the value of the signal $f(t)$ at $t=0$\n\nA more general version of the sifting property of a $\\delta$ function is the following\"\n$$\\int_{-\\infty}^{\\infty} f(t) \\delta(t-\\tau_{1)} \\Delta t=\\int_{-\\infty}^{\\infty} f(\\tau_1) \\delta(t-\\tau_{1)} \\Delta t = f(\\tau_1)$$\n\nThis second equation says that if we multiply signal $f(t)$ by a unit impulse, with the impulse located at a particular time, say $t=\\tau_1$, and we integrate the whole thing, we sift out the value of the signal $f(t)$ at that particular time (i.e. $f(\\tau_1)$)\n\nWe can use the unit $\\delta$ function to sift out the value of the signal at $f(t)$ at any arbitrary time $t=\\tau_1$\n\n# Convolution\n\n$$y(t) = \\int_{-\\infty}^{\\infty} h(\\tau)x(t-\\tau)\\Delta \\tau$$\nThink of $t$ as a fixed constant. What then is $x(t-\\tau)$?\n\nThink of $\\tau$ as the input variable.\nFor the signal: $Z(\\tau)=x(t-\\tau)$\n$\\tau$ Is the time Variable of $Z(\\tau)$\n\nThe integral above is then:\n$$y(t) = \\int_{-\\infty}^{\\infty} h(\\tau)Z(\\tau)\\Delta \\tau$$\n![[Attachments/Pasted image 20230313145815.png]]\n\n## What does $Z(\\tau)$ look like?\n![[Attachments/Pasted image 20230313145935.png]]\n\nConvolution commutes; in other words, $$h(t)*x(t) = x(t)*h(t)$$which can be verified by showing:\n![[Attachments/Pasted image 20230313150020.png]]\n\n## Convolution with a $\\delta$ function\n![[Attachments/Pasted image 20230313150100.png]]\nThis shows that convolving a signal with the unit impulse doesn’t do anything to the signal. Its like multiplying a number by 1: no change to the number. Here, there is no change to the signal x(t).\n\n![[Attachments/Pasted image 20230313150143.png]]\nHere, we are looking at a shifted delta function, or, in other words, a delayed unit impulse (well, delayed if t0 > 0). \n\nThe mathematics here shows that convolving a signal with an impulse located at a particular time, delays the signal by that amount of time, and that is all that it does. \n\nThis results includes the earlier result, which was the special case when the impulse happens at time t=0. Delaying a signal by 0 seconds doesn’t do anything to a signal. \n\nThe result on this page is more general, allowing the impulse to occur at an arbitrary time $t_0$ .",
        "Week 12 - Z Transform.md": " #ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/Week 13 Z Transform.pdf]]\n\n**Relevant Videos:**\n- [What is the Z Transform?](https://youtu.be/n6MI-nEZoL0)  \n- [Z Transform Region of Convergence Explained](https://youtu.be/uq_qv3Spzbs)  \n- [Z Transform Example](https://youtu.be/8fFnBAX8aeg)\n\n*Its like the S Transform but for Discrete Time*\n\n# Z Transform\nGiven $x[n]$\n$$X(z) = \\sum\\limits_{n=-\\infty}^{\\infty}x[n]z^{-n}$$\n\nIf $z = e^{j\\omega} \\rightarrow X(e^{j\\omega})=$ DT FT of $x[n]$\n\n**More generally:**\nIf $z=re^{j\\omega}\\rightarrow X(re^{j\\omega})=\\sum\\limits_{n=-\\infty}^{\\infty}x[n]r^{-n}e^{-j\\omega n}$\nWhere the summation is the FT of $x[n]r^{-n}$\n![[Attachments/Pasted image 20230611203918.png]]\n\n## Examples\n\n### Example 1\n![[Attachments/Pasted image 20230611204025.png]]\n\n### Example 2\n![[Attachments/Pasted image 20230611204044.png]]\n![[Attachments/Pasted image 20230611204053.png]]\n\n### Example 3\n![[Attachments/Pasted image 20230611204122.png]]\n![[Attachments/Pasted image 20230611204145.png]]\n\n### Example 4\n![[Attachments/Pasted image 20230611204216.png]]\n\n### Example 5\n![[Attachments/Pasted image 20230611204229.png]]\n\n### Example 6\n![[Attachments/Pasted image 20230611204251.png]]\n\n# Inverse Z Transform\n$$x[n] = \\frac{1}{2\\pi j} \\oint X(z) z^{n-1} \\text{ } dz$$\n\n$\\oint$ Means integrate counter clockwise around a circle of constant amplitude in the ROC (Circle is meant to be a counter clockwise arrow)\n\nEither directly solve the above equation, or use **partial fraction expansion and the formula sheet.**\n\n## Examples\n### Example 1\n![[Attachments/Pasted image 20230611204849.png]]\n\n### Example 2\n![[Attachments/Pasted image 20230611204908.png]]\n\n### Example 3\n![[Attachments/Pasted image 20230611204926.png]]\n\n# Geometric Evaluation from Pole-Zero Plot\n\nSuppose $H(z) = \\frac{10}{1-\\frac{1}{2}z^{-1}}$ Where: $|z| > \\frac{1}{2}$\nWhat is $H(z)$ when $z = e^{j \\frac{\\pi}{4}}$\n![[Attachments/Pasted image 20230611205153.png]]\n## Observations\n1. As $\\omega$ increases, distance from pole to point increases and the magnitude of the transfer function decreases.  $\\therefore$ Low Pass Filter\n2. If the pole is moved towards the origin, the effect described in 1. is reduced, so the system is more stable.\n\n# Properties of the Z Transform\n## Time Delay\n$$x[n-n_{o}] \\leftrightarrow_{Z}z^{-n_{0}}X(z)$$\n\n1 Delay in time $\\rightarrow$ Multiply by $z^{-1}$\n\n## Convolution\n$$x[n]*y[n] \\leftrightarrow X(z)Y(z)$$\nConvolution in the time domain is multiplication in the frequency domain.\n\n### Example\n![[Attachments/Pasted image 20230611205843.png]]\n\n# LTI Systems\n\n**Causal:** IF ROC of $H(z)$ is exterior of a circle extending to $\\infty$\n\n**Stability:** ROC must contain unit circle $|z| = 1$\n\n**Difference Equations:**\n## Example\n### Difference Equations\n![[Attachments/Pasted image 20230611210048.png]]![[Attachments/Pasted image 20230611210059.png]]\n\n### Filtering Example\n![[Attachments/Pasted image 20230611210154.png]]",
        "Week 11 - Discrete-Time Signals and Systems.md": "#Communication/SignalProcessing #ELEC/2040 #Communication #UniNotes\n\n**Slides:**\n[[Attachments/Week 12 Discrete Time Signals and Systems.pdf]]\n\n**Relevant Videos:**\n- [Discrete Time Convolution Example](https://youtu.be/KAOJsqCyd5Y)\n- [Discrete Time System Output Example](https://youtu.be/Um564Ftq5s0)\n\n# Linear Time-Invariant Systems - Discrete Time\n\nAny $x[n]$ can be constructed from unit impulses with various gains\n![[Attachments/Pasted image 20230610090212.png]]\n$$x[n] =-\\frac{1}{2} \\delta[n+1] + \\delta[n] + \\frac{1}{2}\\delta[n-1]$$\n$$x[-1]\\delta[n+1]+x[0]\\delta[n]+x[1]\\delta[n-1]$$\n\n**Therefore:**\n$$x[n] = \\sum\\limits_{k=-\\infty}^{\\infty}x[k]\\delta[n-k]$$\nWhere:\n$x[k]$ Represents our coefficients\n$\\delta[n-k]$ Represents our basis functions.\n\n# Convolutional Sum Representation of a System\n![[Attachments/Pasted image 20230610090736.png]]\nBecause this is linear,\n$$x[k]\\delta[n-k] \\rightarrow x[k]h_{k}[n]$$\nWhere:\n$x[k]$ Represents our coefficients\n$\\delta[n-k]$ Represents our function\n\n$h_{k}[n]$ Is still our function written in a general form (Described above)\n\nIn general notation, any $x[n]$ can be represented as:\n$$x[n] = \\sum\\limits_{k=-\\infty}^{\\infty}x[k]\\delta[n-k]$$\n\n**For LTI Systems:**\n$$y[n] = \\sum\\limits_{k=-\\infty}^{\\infty}x[k] h_{k}[n]$$\n\nSince our system is time invariant we can also assume:\n$h_{1}[n] = h_{0}[n-1]$\n$h_{2}[n] = h_{0}[n-2]$\n$h_{3}[n] = h_{0}[n-3]$\n\n$$y[n] = \\sum\\limits_{k=-\\infty}^{\\infty}x[k]h[n-k]$$\n$$=x[n]*h[n]$$\nWhere * Denotes Convolution and $h[n]=h_{0}[n]$\n\n## Properties\n- $h[n]$ **FULLY** Characterises a LTI System\n- $x[n] * h[n] = h[n] * x[n]$\n- Finite Impulse Response (FIR)\n\t- IF $h[n] = h[0]\\delta[n]+h[1]\\delta[n-1]+\\text{... }h[M]\\delta[n-M]$ For M finite\n\t**Example: Averaging Filter with Weights**\n\t$y[n] = 3x[n] + 2x[n-1]+x[n-2]$\n\n\tTest with $x[n] = \\delta[n]$:\n\t$y[n] = 3\\delta[n]+2\\delta[n-1]+\\delta[n-2]$\n\n\t$y[-2] = 0, y[-1]=0, y[0] = 3, y[1]=2, y[2]=1, y[3] = 0$\n\n![[Attachments/Pasted image 20230610093949.png]]\n- Infinite Impulse Response (IIR)\n\tIf $h[n]$ has $\\infty$ number of non zero elements\n\t**Example:** $y[n] = \\frac{9}{10}y[n-1] + x[n]$![[Attachments/Pasted image 20230610095201.png]]\n\n# Calculating a Convolution\n\n**Example:**\nSuppose an LTI system has unit impulse response\n![[Attachments/Pasted image 20230610095404.png]]\nWhat is the output when the input is\n![[Attachments/Pasted image 20230610095426.png]]\n## Method 1: Maths and Shit\n![[Attachments/Pasted image 20230610095513.png]]\n\n## Method 2: Graphical\nThink of $x[n]$ as two impulses summed.\n$\\frac{1}{2}\\delta[n]$  &  $2\\delta[n-1]$\n\nSince this is an LTI system, output will be the sum of 2 responses (as $x[n]$ is made of 2 delta functions in this example)\n![[Attachments/Pasted image 20230610100631.png]]\n#Why \n\n## Example\nWhat is the impulse response of this IIR System\n$$y[n+1] - y[n] = x[n]$$\nWhere: $y[n] = 0 \\text{ for } n <0$\n\n**Answer:**\nChoose $x[n] = \\delta[n]$\n\n$y[0] = y[-1]+x[-1]=0$\n$y[1] = y[0] + x[0] = 1$\n$y[2] = y[1] + x[1] = 1$\n![[Attachments/Pasted image 20230610102145.png]]\n\n## Convolution Example\nCompute $h[n] * x[n]$ for: \n$x[n]= \\alpha^{n} u[n]$\n$h[n] = \\beta^{n}u[n]$\nWhere: $\\beta \\neq \\alpha$\n\n![[Attachments/Pasted image 20230610102813.png]]\n![[Attachments/Pasted image 20230610102834.png]]\n\n# Properties and Examples of DT FT\n\n## Time Shift\n$$x[n-n_{0}] \\leftrightarrow_{FT} e^{-j\\omega n_{0}}X(e^{j\\omega}) $$\n\n## Frequency Shift\n$$e^{j\\omega_{0}n} x[n] \\leftrightarrow_{FT} X(e^{j(\\omega - \\omega_0})$$\n\nIn **Discrete Time** once you have shifted by $2\\pi$ in frequency, you are back to the start.\n$$e^{j(\\omega+2\\pi)n}=e^{j\\omega n}e^{j2\\pi n} = e^{j\\omega n}$$\n\n$e^{j2\\pi n}$ is *ALWAYS* equal to 1 because in DT n is an *INTEGER*\n\n**Therefore:**\nLOW Frequencies = $0,2\\pi,4\\pi,6\\pi ...$\nHIGH Frequencies = $\\pi,3\\pi,5\\pi,7\\pi ...$\n\n## Time Expansion\n**In Continuous Time:**$$x(at) \\leftrightarrow_{FT} \\frac{1}{|a|}X(\\frac{j\\omega}{a})$$\n**In Discrete Time, IF:**\n$$\n x_{k}[n] = \\begin{cases} \n      x[n/k] & \\textrm{If n is a multiple of k} \\\\\n      0 & \\textrm{If n is not a multiple of k} \\\\\n   \\end{cases} \n$$\n\n*Then:*\n$$x_{k}[n] \\leftrightarrow_{FT} X(e^{jk\\omega})$$\n![[Attachments/Pasted image 20230610121553.png]]\n\n### Example (Time shift, Time expansion and Linearity)\n![[Attachments/Pasted image 20230610121703.png]]\n![[Attachments/Pasted image 20230610121729.png]]\n\n## Convolution\n$$x[n] * h[n] \\leftrightarrow_{FT}X(e^{j\\omega})H(e^{j\\omega})$$\n\n## Multiplication\n$$x_{1}[n] x_{2}[n] \\leftrightarrow_{FT} \\frac{1}{2\\pi} \\int_{2\\pi}X_{1}(e^{j\\theta})X_{2}(e^{j(\\omega-\\theta)}) \\text{ }d\\theta$$\nPeriodic Convolution over $2\\pi$\n\n## Difference Equaitons\n![[Attachments/Pasted image 20230610123141.png]]\n\n# Summary Table\n![[Attachments/Pasted image 20230610123204.png]]\n",
        "Week 10 - Discrete-Time Signals and Sampling.md": " #ELEC/2040 #Communication #Communication/SignalProcessing #UniNotes\n\n**Slides:**\n[[Attachments/Week 10 Discrete Time Signals and Sampling.pdf]]\n\n**Relevant Videos:**\n- [Discrete Time Signals](https://youtu.be/mMPxfhplRGw)  \n- [Discrete Time Basis Functions](https://youtu.be/P7q2YMQiat8)\n- [Fourier Transform of Discrete Time Signals are not Discrete](https://youtu.be/AOQAlrtGUzo)  \n- [Sampling Discrete Time Signals](https://youtu.be/mKGp7kus4yo)  \n- [Discrete Time Sampling Example](https://youtu.be/vGxvrq5kCzQ)  \n- [Decimation of Discrete Time Signals](https://youtu.be/jP267ZoMChw)  \n- [Interpolation of Discrete Time Signals](https://youtu.be/C5HoWirRQiU)\n- [How does the Discrete Fourier Transform DFT relate to Real Frequencies?](https://youtu.be/pIFz84oj9cA)\n- [Discrete / Fast Fourier Transform DFT / FFT of a Sinusoid Signal](https://youtu.be/lwQTNcWtN7w)  \n- [How do the Frequency, Sample Rate and Duration affect the DFT of a Sinusoid?](https://youtu.be/5diC6XLLVoA)\n\n# Discreet Time and Continuous Time Cases\n\n**Continuous Time:**\n$$x(t) = Ce^{at}$$\nBoth C and a, complex\n\nSome Cases:\n1. C & a $\\rightarrow$ Real Valued\n2. $C = Ae^{j\\phi}, a=j\\omega_o$\n3. $C=Ae^{j\\phi}, a=r+j\\omega_o$\n$\\rightarrow x(t)=Ae^{rt}\\cos(\\omega_{o}t+\\phi) + jAe^{rt}\\sin(\\omega_{o}t + \\phi)$\n\n**Discrete Time:**\n$$x[n] = C \\alpha^{n}$$\nBoth C and $\\alpha$, complex\n\nSome more cases\n1. $C$ & $\\alpha \\rightarrow$ Real\n2. $C = Ae^{j\\phi}, \\alpha = e^{j\\omega_o}$\n3. $C = Ae^{j\\phi}, \\alpha = |\\alpha| e^{j\\omega_o}$\n\n# Periodicity Properties of DT Complex Exponentials\n\n```ad-attention\ntitle: Important Property of Discrete TIme\nIn **Continuous Time**, $x(t) = e^{j\\omega_{0}t}$ is always periodic as $e^{j\\omega_{0}t} = e^{j\\omega_{0}(t+T)}$ can always be solved and the solution is independent of t.\n\nIn **Discrete Time**, $x[n] = e^{j\\omega_{0}n}$ is **NOT** always periodic. This is because n is an integer rather than a continuous variable like t.\n\n```\n\nSuppose we sample a CT signal $x(t) = e^{j\\omega_{0}t}$ at times t = 0, T, 2T, 3T...\nWe can generate $x[n] e^{j\\omega_{0}Tn}$, which looks like this:\n![[Attachments/Pasted image 20230608164509.png]]\nWhen T is small (fast sampling)\nThis will **ONLY** be periodic **IF** you choose T to sample the **SAME** bit of the curve on it's next cycle.\n\n![[Attachments/Pasted image 20230608165042.png]]\nWould be periodic if sampled here and with same period as the sine wave.\n\n**NOT** same period if sampled at 1.5T. This is actually twice the period. #Why \n\n![[Attachments/Pasted image 20230608165425.png]]\n\n# Discrete time samples for various values of $\\omega_0$\n\n![[Attachments/Pasted image 20230608165613.png]]\n\n# Unit and Impulse Functions in Discrete Time\n$$\n \\delta[n] = \\begin{cases} \n      1 & n=0 \\\\\n      0 & n \\neq 0 \\\\\n   \\end{cases} \n$$\n![[Attachments/Pasted image 20230608174719.png]]\nImpulse function is a single sample of height 1 at n=0 in discrete time.\n$$\n u[n] = \\begin{cases} \n      1 & n>=0 \\\\\n      0 & n < 0 \\\\\n   \\end{cases} \n$$![[Attachments/Pasted image 20230608174800.png]]A unit step function is a series of samples of height 1 at n >= 0 in discrete time.\n\n## Difference Equations (Differentials in CT)\n\n$$\\delta[n] = u[n] - u[n-1]$$\nWhere:\n$$u[n] = \\sum\\limits_{m=-\\infty}^{n} \\delta[m]$$\n\n## Sampling Property\n$$x[n] \\delta[n] = x[0]\\delta[n]$$\nResults in sampling $x[n]$ at n = 0\n\n$$x[n] \\delta[n-n_{0}]=x[n_{0}]\\delta[n-n_{0}]$$\n\n# Discrete Time Fourier Transform for Aperiodic Signals\n$$x[n]= \\frac{1}{2\\pi}\\int_{2\\pi}X(e^{j\\omega}) e^{j\\omega n} \\text{ }d\\omega$$\n$$X(e^{jw}) = \\sum\\limits_{n=-\\infty}^{\\infty} x[n] e^{-j\\omega n}$$\nWhere:\n$\\int_{2\\pi}$ Means integrate over any $2\\pi$ range\n\n## Examples\n### Example 1\n![[Attachments/Pasted image 20230608181053.png]]\n\n### Example 2\n![[Attachments/Pasted image 20230608181132.png]]\n\n### Example 3\n![[Attachments/Pasted image 20230608181211.png]]\n\n```ad-attention\nMost of this is getting our equation in the right form and using the identity sheet to get the answer.\n```\n\n# Discrete Time Fourier Transform for Periodic Signals\n$$X(e^{j\\omega}) = \\sum\\limits_{k=-\\infty}^{\\infty} 2\\pi a_{k} \\delta(\\omega - k\\omega_0)$$\n\n## Examples\n### Example 1\n![[Attachments/Pasted image 20230608181711.png]]\n\n# Discrete Time Processing of Continuous Signals\n![[Attachments/Pasted image 20230608185242.png]]\n**But how do $X_{p}(j\\omega)$ (CT FT of $x_{p}(t)$) and $X_{d}(e^{j\\ohm})$ (DT FT of $x_{d}[n]$) Relate?**\n\n$$x_{p}(t) = \\sum\\limits_{n=-\\infty}^{\\infty} x_{c}(nT) \\delta(t-nT)$$\nTherefore:\n$$X_{p}(j\\omega) = \\sum\\limits_{n=-\\infty}^{\\infty} x_{c}(nT) e^{-j\\omega nT}$$\n\nAND:\n$$X_{d}(e^{j\\ohm})=\\sum\\limits^{\\infty}_{n=-\\infty}x_{d}[n]e^{-j\\ohm n}$$\n$$= \\sum\\limits_{n=-\\infty}^{\\infty} x_{c} (nT) e^{-j\\ohm n}$$\n\n```ad-important\ntitle: Therefore\n$$\\text{C.T Frequency  } \\omega = \\frac{\\text{Discrete Time Frequency } \\ohm}{T}$$\n```\nIn order for $x_{p}(t)$ to have same frequency properties as $x_{d}[n]$\n\n# Sampling of DT Signals\nGiven $x[n]$ sample to produce \n$$\nx_{p}[n] = \\begin{cases} \n      x[n] & n=mN \\\\\n      0 & \\text{Other} \\\\\n   \\end{cases}\n$$\n\n![[Attachments/Pasted image 20230608200907.png]]\n\n$$p[n] = \\sum\\limits_{k = -\\infty}^{\\infty} \\delta[n-kN]$$\n$$x_{p}[n] = x[n]p[n]$$\n![[Attachments/Pasted image 20230608201046.png]]\n\n**Given $X(e^{j\\omega})$ what is $X_{p}(e^{j\\omega})$?**\n$p[n]$ is periodic, with a period of 3\n\n$$a_{k}= \\frac{1}{3}\\sum\\limits_{n=0}^{2} p[n] e^{-jk \\frac{2\\pi}{3}n} = \\frac{1}{3}$$\n$$P(e^{j\\omega})=2\\pi \\int_{2\\pi} \\frac{1}{3}\\delta(\\omega - k\\omega_{s})$$\nWhere $\\omega_{s} = \\frac{2\\pi}{3}$\n\n$$X_{p}(e^{j\\omega}) = \\frac{1}{2\\pi} \\int_{2\\pi} P(e^{j\\theta}) X(e^{j(\\omega-\\theta)}) \\text{ }d\\theta$$\n$$=\\frac{1}{2\\pi} \\int_{2\\pi} \\frac{2\\pi}{3}\\sum\\limits_{k=-\\infty}^{\\infty} \\delta(\\theta - \\frac{2\\pi}{3}k)X(e^{j(\\omega-\\theta)})\\text{ }d\\theta$$\n$$\\frac{1}{3}\\sum\\limits_{k=0}^{2}X(e^{j(\\omega- \\frac{2\\pi}{3}k)})$$\n![[Attachments/Pasted image 20230608202530.png]]\n```ad-attention\ntitle: Recovery\nWe can recover the original signal if:\n$$\\omega_{s}= \\frac{2\\pi}{N} > 2\\omega_{m}$$\n\n```\n\n# Discrete Time Decimation (Down Sampling)\n\nDecimation removes samples from a sampled DT signal and then removes the subsequent zeroes created by doing this. Decimation is a form of compression, and is used to store signals in a more \"space\" efficient manner.\n![[Attachments/Pasted image 20230608203009.png]]\n$$X_{b}(e^{j\\omega})= \\sum\\limits^{\\infty}_{k=-\\infty}x_{b}[k]e^{-j\\omega k}$$\n$$=\\sum\\limits^{\\infty}_{k=-\\infty} x_{p}[kN]e^{-j\\omega k}$$\nUse $kN = n$\n$$= \\sum\\limits_{n=\\text{multiple of N}}x_{p}[n] e^{-j\\omega \\frac{n}{N}}$$\n$$= \\sum\\limits_{n=-\\infty}^{\\infty}x_{p}[n] e^{-j\\omega \\frac{n}{N}}$$\n\n**THEREFORE**\n$$X_{b}(e^{j\\omega})=X_{p}(e^{\\frac{j\\omega}{N}})$$\n![[Attachments/Pasted image 20230608203834.png]]\n\n# Interpolation (Upsampling)\n![[Attachments/Pasted image 20230608204342.png]]\n![[Attachments/Pasted image 20230608204353.png]]\n",
        "Week 1 - Complex Numbers.md": "#Communication  #ELEC/2040 #Communication/SignalProcessing #UniNotes\n\n**Slides/Audio**\n[[Attachments/WorldOfSignals.pptx]]\n[[Attachments/1 Review Complex Numbers.pdf]]\n\n**Relevant Videos:**\n- Visualising Complex Numbers with an Example\n- How do Complex Numbers Relate to Real Signals?\n- Why are Complex Numbers written with Exponentials?\n\n**Practical**\n[[Attachments/Practical Week 1.pdf]]\n\n**Practice Quiz**\n[[Attachments/Practice Quiz.docx]]\n\n**Weekly Project**\n\n# Complex Numbers\nA complex number has two components: a real component, and an “imaginary” component that is indicated by being multiplied by the complex variable “i” (or “j”). For example.\n\n$$ z1 = 3 + 5i$$\n$$z2 = 5 + 0.5j$$\n> Note - Imaginary numbers are such that  $i^{2}= -1$\n\nComplex numbers are often plotted on the \"Complex plane\", where the X axis represents the real component and the Y axis represents the imaginary component\n\nThe following MATLAB code will plot two complex numbers as shown.\n```\nz0 = 0+0j;   % Origin\nz1 = 3+5i;\nz2 = -0.5+1.5j;\nfigure(1) hold off plot(z1,'*');\nhold on plot(z2,'+');\nplot(complex(z0),'gO');\naxis([-10 10 -10 10]) \naxis('square') \ngrid\n```\n\n![[Attachments/Pasted image 20230227135954.png]]\n\n## Why though?\nComplex numbers are a succinct and easy way to manipulate and describe both phase and magnitude. Useful especially in electronics(j), physics(i), and engineering(j). Essentially, the name \"Imaginary\" is a bit of a misnomer.\n\n# Operations on Complex Numbers\n## Conjugate\n\nThe “complex conjugate” of a complex number is a number with the same “real” part, and the negative “imaginary” part. Conjugates are often denoted with an asterisk. Below is an example.\n$$z = x + jy$$\n$$z* = x-jy$$\nIn MATLAB, you can obtain a conjugate using the conj() command.\n\n```\nz1 = 5 + 4j;\nconj(z1) = 5 - 4j;\n```\n\n## Complex Number Operations\n![[Attachments/Pasted image 20230227144146.png]]\n![[Attachments/Pasted image 20230227144204.png]]\n![[Attachments/Pasted image 20230227144223.png]]\n![[Attachments/Pasted image 20230227144238.png]]\n\n# Formats\n## Rectangular/Cartesian\nThis is the one most would be familiar with. Complex numbers in Rectangular format follow the form:\n$$ z = a + ib$$\nWhere *a* and *b* are both real numbers and *i* is the imaginary number (root -1)\n![[Attachments/Pasted image 20230227141446.png]]\n\nThe Cartesian form can be plotted as such:\n![[Attachments/Pasted image 20230227141558.png]]\nBoth the real part and the imaginary part can be isolated in MATLAB (and obviously in regular handwritten maths). The notation for which is as such:\n\nLet $z = a + ib$\n\nMaths:\n$a = Re(z)$\n$b = Im(z)$\n\nMATLAB:\n$a = real(z)$\n$b = imag(z)$\n\n## Polar\nPolar format is represented as such:\n![[Attachments/Pasted image 20230227142246.png]]\n![[Attachments/Pasted image 20230227142317.png]]\n\nMagnitude can also be called:\n- Modulus\n- Absolute Value\n- Gain\n- Amplitude\nPhase can also be called:\n- Angle\n- **Argument**\n\nMATLAB uses radians in its polar form (i.e. the full circle is 2pi radians round)\n\nThe following equations can be used to convert from **Cartesian to Polar**:\n\n$| z | = \\sqrt(x^{2}+y^{2}) = r$\n\n$arg(z) = \\theta = tan^{-1}(y/x)$\n\nThe following equations can be used to convert from **Polar to Cartesian**:\n\n$z = r*cos(\\theta) + j*r*sin(\\theta)$\n\n$x = r*cos(\\theta)$\n$y = r*sin(\\theta)$\n\nThe Polar form is particularly useful as it is much easier to 'rotate' by simply changing the phase while keeping the amplitude constant. This essentially rotates the Complex Polar around the origin. ($\\theta$ is measured from the positive x-axis as per convention)\n\n\n\n## Exponential\n![[Attachments/Pasted image 20230227143535.png]]\n![[Attachments/Pasted image 20230227143649.png]]\n![[Attachments/Pasted image 20230227143721.png]]\n\n# Format Conversions\n![[Attachments/Pasted image 20230227143750.png]]\n![[Attachments/Pasted image 20230227143805.png]]\n![[Attachments/Pasted image 20230227143852.png]]\n![[Attachments/Pasted image 20230227143909.png]]\n![[Attachments/Pasted image 20230227143935.png]]\n![[Attachments/Pasted image 20230227143951.png]]\n\n# Properties\n![[Attachments/Pasted image 20230227144312.png]]\n\n# Notes and Examples\n#Examples \n![[Attachments/Practice Quiz.pdf]]"
      }
    },
    "SEM 2": {
      "Weekly Work.md": "\n# ELEC2005\n- [x] Slides/Lecture Content\n- [x] Pre lecture quiz **Closes when lecture starts. Do on Monday. Covers that week's topics**\n- [x] Lab Quiz\n\n# ENGG3000\n- [ ] Minutes and update GANTT\n\n# MTRN3026\n- [x] Homework questions in each week's page **Tuesdays Midnight**\n- [x] Slides/Lecture Content\n- [ ] Lab Notes\n\n# MTRN3060\n- [x] Homework task after lecture **Wednesdays Midnight**\n- [x] Slides/Lecture Content\n- [ ] Lab Notes",
      "MTRN3060": {
        "Lectures+Workshop": {
          "Week 2 - Transformation Operators, Components of Robots.md": "#MTRN/3060 \n\n**Slides:**\n[[Attachments/Week 2 lecture.workshop ilearn.pdf]]\n\n**Lecture:**\n- Describe object in 3D space\n- Map object in 3D space\n- Transformation operators\n- Transformation matrices\n\n**Practical:**\n- Lab safety\n- Robotic arm\n- Gripper safety\n- Movement and coordinates\n\n# Position:\nDefine the point \"P\" relative to coordinate frame {A}\n![[Attachments/Pasted image 20230803130517.png]]\n\nIndividual elements of a vector are given subscripts x, y, z\n$$P_{A} = \\begin{bmatrix}   P_{x} \\\\  P_{y} \\\\ P_{z}   \\end{bmatrix}$$\n\n## Orientation\nWe define the orientation of an object relative to the coordinate frame {A} regardless of position, A new frame {B} on the object is required, positioned at P.\n\nUnit Vector {B} are $\\hat{X}_{B}, \\hat{Y}_{B}, \\hat{Z}_{B}$\n\nWritten in terms of {A}: $\\prescript{A}{\\hat{X}_{B}}$\n",
          "Week 1 - Intro and Spatial Descriptions.md": "#MTRN/3060 \n\n**Slides:**\n[[Attachments/Week 1-iearn-1 1.pdf]]\n\n**Recent Robots:**\nIndustrial robotics:\nhttp://www.youtube.com/watch?v=KBLEPlznHWY&feature=related\n\nArc welding robot: \nhttp://www.youtube.com/watch?v=5HphVrleXlQ&feature=related\n\nASIMO:\n• http://www.youtube.com/watch?v=5HphVrleXlQ&feature=related\n• http://www.youtube.com/watch?v=M4rgaLW163k&feature=related\n\nRobot-Araigne:\nhttp://www.youtube.com/watch?feature=endscreen&v=Mfjn79oiM0Q&NR=1\nHexapod Robot:\nhttp://www.youtube.com/watch?v=-uKIDyFMTyQ&feature=related\n\n# Description of position and orientation (chapter 2)\n![[Attachments/Pasted image 20230805210746.png]]\nCoordinate systems or \"frames\" are attached to the manipulator and to objects in the environment.\n\n## Kinematics\n![[Attachments/Pasted image 20230805211052.png]]\n```ad-note\n**Kinematics** is the science of motion that treats motion without regard to the forces which cause it.\nWithin the science of kinematics, one studies position, velocity, acceleration, and all higher order derivatives of the position variables.\n\n```\n\n## Inverse Kinematics\n![[Attachments/Pasted image 20230805215311.png]]\n```ad-note\nIs used when we aim to use a given position and orientation of the end-effector of the manipulator to calculate all possible sets of joint angles that could be used to attain this given position and orientation.\n\n```\nFor a given position and orientation of the tool frame, values for the joint variables can\nbe calculated via the inverse kinematics.\n\n#"
        },
        "Practicals": {
          "Week 2 - ABB IRB120 and IRC5.md": "#MTRN/3060 \n\n**Slides:**\n![[Attachments/Prac2.pdf]]\n\n**Task 1: Physics Config**\n",
          "Week 1 - RobotStudio Introduction.md": "#MTRN/3060\n![[Attachments/Prac1.pdf]]\n\n**Q: Describe the jog join function. What does it do? How does it effect the End Effector (end of the robotic arm, in this case a robot flange) (EE) position?**\nThe jog joint function allows the user to manually control with the mouse the position of a given joint. When used on the EE, it is able to rotate the end effector as the current end effector is just a robotic flange.\n\n**Q: Describe the jog linear function, and what it does. How does it affect the joint's position?**\nThe jog linear function allows us to control the position of the end effector in 4 linear directions, this moves the rest of the robot automatically in order to facilitate the linear motion. The angle of the end effector head does not change.\n\n**Q: Describe the jog orient function, and what it does. How does it effect the joint's position?**\nThe jog orient function rotates whatever is attached to the end effector on 3 different axis relative to the ground. This function moves the joints positions in order to facilitate smooth rotational movement. Whatever is held should only rotate about one axis.\n\n*Rest is in the PDF*"
        }
      },
      "GANTT.md": "```mermaid\ngantt\n    title 2023 S2 Assignments\n    dateFormat DD-MM-YYYY\n    \n    section ELEC2005\n        A task          :a1, 2014-01-01, 30d\n        Another task    :after a1, 20d\n        \n    section MTRN3026\n        Task in Another :2014-01-12, 12d\n        another task    :24d\n        \n    section MTRN3060\n        Task in Another :2014-01-12, 12d\n        another task    :24d\n        \n    section ENGG3000\n        Task in Another :2014-01-12, 12d\n        another task    :24d\n        \n    section ENGG4099\n        Task in Another :2014-01-12, 12d\n        another task    :24d\n```\n\n",
      "MTRN3026": {
        "Week 3 - Sensors and Control Fundamentals.md": "#MTRN/3026 \n\n**Slides:**\n[[Attachments/Briefing for Motor Control Assignment.pptx]]\n[[Attachments/Briefing for Motor Control Assignment.pdf]]\n\n# Sensors\nThere are a number of sensors for measuring real world parameters relative to mechatronics.\n\n- Internal sensors (Dead-reckoning)\n- Speed measurement – Tacho-generator, encoder\n- Current measurement\n– Wheel Encoders, Odometry\n– Accelerometers (spring-mounted masses)\n– Gyroscopes (spinning mass, laser light)\n– Compasses, inclinometers (earth magnetic field, gravity)\n• **Proximity sensors**\n\t- Ultrasound\n\t- Sonar (time of flight) (SOund Navigation And Ranging)\n\t- Radar (phase and frequency) (RAdio Detection And Ranging)\n\t- LIDAR, Laser range-finders (triangulation, ToF, phase) (LIght Detection And Ranging)\n\t- Infrared (intensity)\n• **Visual sensors: Cameras**\n• **Satellite-based sensors: GPS**\n\n## Tacho-Generator\n![[Attachments/Pasted image 20230807111951.png]]\nTacho-generator measures the Back EMF in order to measure speed. The resulting voltage across the tacho-generator is proportional to speed.\n\n## Encoders\n![[Attachments/Pasted image 20230807112114.png]]\nGenerates a square wave pulse when the slots in the disk line up with the LED and photosensor. The slots in the disk are usually a power of two. We can use two disks to determine the direction as well.\n\n## Current Measurement of DC Motor\n![[Attachments/Pasted image 20230807112520.png]]\n\nWe measure the current to determine the power draw compared to the duty type. To protect the motor in case current spikes (locked up shaft, electrical fault). And to get an idea of the load.\n\n# Processing of Sensor Signals\n\n## The Operation Amplifier ([[Operation Amplifiers]])\n\n[[../../../UNI 2022/MTRN2060/Strain Gauges and Op-Amps|Strain Gauges and Op-Amps]]\n[[../../SEM 1/ELEC2070/Week 3 - Ideal Operational Amplifiers|Week 3 - Ideal Operational Amplifiers]]\n\n![[Attachments/Pasted image 20230807113429.png]]\n\n- **Digital Voltage Gain**: The amplification of the op-amp difference between two inputs, also known as the *open loop gain*\n- In a good amplifier the voltage gain should be as high as possible\n- Gain of $10^{6}$ or higher are common\n- An ideal amplifier should have an infinite gain.\n\n#Important Test 3 will have one question from week 1, 2, and 3. Q3 is on transfer function\n\n",
        "Week 1 - Introduction, Mechatronic Fundamental and Transformers.md": "#MTRN/3026 #MagneticCircuits\n\n**Slides:**\n![[Attachments/Week-1a(Mechatronics_Systems).ppt]]\n![[Attachments/Week-1b(Mechatronics_Systems) 1.ppt]]\n![[Attachments/Week_1c_(Transformer).ppt]]\n\n# Magnetic Circuit Analysis\n\n## Permanent Magnets\n![[Attachments/Pasted image 20230724205243.png]]\nPermanent magnets can come in a variety of forms for different purposes.\n- Neodymium Iron Boron\n- Samarium Cobalt\n- Ceramic\n- Alnico\n\n## Magnitude and Direction of Magnetic Field\n### [[../../../Distilled Notes/Amperes Circuital Law|Amperes Circuital Law]]: Current Through Conductor\n![[Attachments/Pasted image 20230724205610.png]]\n$$\\int H.dl = \\sum i = Ni$$\n$$H = \\frac{i}{2\\pi r}$$\nWhere r is the distance of the point from the conductor\n\n### [[../../../Distilled Notes/Amperes Circuital Law|Amperes Circuital Law]]: Coil around a core\n![[Attachments/Pasted image 20230724210132.png]]\n$$H = \\frac{Ni}{2\\pi r}$$\nWhere r is the radius of the core.\n\n## Magnetic Reluctance\n![[Attachments/Pasted image 20230724211607.png]]\nCoils around a core will generate magnetic flux. Reluctance of the magnetic circuit element ($\\mathscr{R}$). Its a measure of how difficult it is to establish magnetic flux in the element. With the **flux** in the core equal to: $$\\phi = \\frac{Ni}{\\mathscr{R}}$$\nIn a magnetic circuit, the **reluctance** is written as:\n$$\\mathscr{R} = \\frac{l}{\\mu A}$$\n\n$$\\therefore Hl = \\phi \\mathscr{R}$$\n$$NI = \\sum\\limits^{\\infty}_{n=1}(H_nl_n)$$\n![[Attachments/Pasted image 20230724213315.png]]\n\n\n## Amperes Law\n![[Attachments/Pasted image 20230724213509.png]]\nMagnetic circuits also follow [[Amperes Law]], the sum of flux entering and exiting a point must be equal to zero.\n![[Attachments/Pasted image 20230724213826.png]]\n\n## Magnetic Circuits\nMagnetic circuits can be represented by an electrical analog.\n![[Attachments/Pasted image 20230724214345.png]]\nHere the reluctance is replaced with resistors, and our coil around the core is replaced with a source. The analogy can be supplemented as such:\n![[Attachments/Pasted image 20230724214714.png]]\n![[Attachments/Pasted image 20230724214738.png]]\n\n\n## Inductor Voltage and Current in Steady State\n![[Attachments/Pasted image 20230724215308.png]]\nThe volt-seconds for a signal over period t is zero in steady state.\n\n## Capacitor Voltage and Current in Steady State\n![[Attachments/Pasted image 20230724215447.png]]\nAmp-Seconds over t of a periodic signal equals zero in steady state.\n\n# B-H Relationship; Core Saturation\n![[Attachments/Pasted image 20230724220137.png]]\nAs $H$ increases, $B_{s}$ plateaus at a certain point. At this point the core is saturated\n\n## B-H for various materials\n![[Attachments/Pasted image 20230724220534.png]]\n\n# B-H Loop for transformer cores\n![[Attachments/Pasted image 20230724220837.png]]\nHere we are tracking what the B-H graph changes as we have to do work to change the magnetic orientation of the material in the operation of a transformer. #todo Here the distance between the two lines represents a loss in energy.\n\n## Hard Magnetic vs Soft Magnetic\n![[Attachments/Pasted image 20230724222521.png||500]]\n![[Attachments/Pasted image 20230724222628.png||500]]\n\n| Hard Magnetic Material                                   | Soft Magnetic Material                                   |\n| -------------------------------------------------------- | -------------------------------------------------------- |\n| **Large hysteresis loss**                                | **Low hysteresis loss**                                  |\n| Domain wall moment is **difficult**                      | Domain wall moment is relatively **easier**              |\n| Coercivity and Retentivity are **large**                 | Coercivity and retentivity are **small**                 |\n| **Cannot be easily** magnetized and demagnetized         | **Can be easily** magnetized and demagnetized            |\n| Magneto static energy is **large**                       | Magneto static energy is **small**                       |\n| Have **small values** of permeability and susceptibility | Have **large values** of permeability and susceptibility |\n| Used to make **permanent magnets**                       | Used to make **electromagnets**                          |\n\n## Permanent Magnet Characteristics\n#todo Ask for clarification on this diagram, what the fuck is this\n![[Attachments/Pasted image 20230724222731.png]]\n\n# Inductance\nWe can generate flux using a coil around our medium.\n![[Attachments/Pasted image 20230725214120.png]]\n\n## Coupled Coils\n![[Attachments/Pasted image 20230725214306.png]]\n**Time Domain:**\n$$v_{1}=L_{1} \\frac{di_{1}{dt}} +L_{1,2} \\frac{di_{2}}{dt}$$\n$$v_{2}= L_{2,1} \\frac{di_{1}}{dt} + L_{2} \\frac{di_{2}}{dt}$$\n\n**Phasor Domain:**\n$$V_{1}=j\\omega L_{1}I_{1}+j\\omega L_{1,2}I_{2}$$\n$$V_{2}= j\\omega L_{2,1}I_{1}+j\\omega L_{2} I_{2}$$\n\nWhere:\n$L_{1,2}= \\pm k\\sqrt{L_{1}L_{2}}$\n\n### Example\n![[Attachments/Pasted image 20230725215001.png]]\n$$Z_{in} = \\text{voltage multiplier} + j\\omega L_{1}\\{ 1-k^2 \\}$$\n\nFor ideal transformer:\n$$Z_{in}= R_{L} \\frac{L_{1}}{L_{2}}$$\n\n## The Dot Convention for Inductors in Series\n![[Attachments/Pasted image 20230725220013.png]]\nTake note of the dots and how they effect the sign of 2M. Its like positive vs negative.\n\n## Eddy Current Loss\n![[Attachments/Pasted image 20230725220420.png]]\n\n# Transformers\n[[Transformers (Not the funny robot)]] is an AC static device used to change low voltage/high voltage AC system into high voltage/low voltage AC system without changing the frequency at almost 100% efficiency.\n\n1. Transfers electric power from one circuit to another without any electrical connection.\n2. Does so without changing frequency.\n3. It does this by generating flux inside of a core typically or some other medium.\n4. Where the two electrics circuits are in mutual inductive influence from one another.\n\n## Principle of Operation\nIt is based on principle of MUTUTAL INDUCTION. An EMF is induced in a coil when flux in the neighbouring coil changes.\n![[Attachments/Pasted image 20230725221237.png]]\n**Mathematical Induction:**\n*[[Faraday's Law]]:*\n$$\\epsilon = \\frac{d \\phi}{dt}$$\n\n*[[Lenz's Law]]* (for N turns)\n$$\\epsilon = - N\\frac{d \\phi}{dt}$$\n$$\\epsilon = -N \\frac{\\phi_{2}-\\phi_{1}}{t}$$\nFlux changes from phi 1 and phi 2. In time t.\n\n*Working principle:*\n1. When current in the primary coil changes being alternating in nature, a changing magnetic field is produced.\n2. This changing magnetic field gets associated with the secondary through the soft iron core.\n3. Hence magnetic flux linked with the secondary coil changes.\n4. Which induces EMF in the secondary coil.\n\n## EMF Equation of a Transformer\n![[Attachments/Pasted image 20230726184500.png]]\nlet:\n$N_1$  = Number of Primary turns\n$N_2$ = Number of Secondary turns\n$\\Phi_m$  = Maximum flux in core (**Webers**)\n$f$ = Frequency of AC input (Hz)\n\nThe above graph shows us that flux increases from its minimum to its maximum ($\\Phi_m$) in a quarter of a cycle ($\\frac{1}{4f}$ Seconds ).\n$$\\text{This means our Average rate of change (flux) }= \\frac{\\Phi_{m}}{\\frac{1}{4f}}$$\n$$= 4f\\Phi_{m}\\text{ Wb/s or Volts}$$\n$$\\text{Average e.m.f/turn} = 4f\\Phi_{m} \\text{Volt}$$\n\nSince flux varies sinusoidally, then r.m.s value of *induced emf* can be calculated by multiplying the average value with form factor.\n$$\\text{Form Factor} = \\frac{\\text{r.m.s value}}{\\text{average value}}=1.11$$\nNow rms value of the induced emf in the entire primary winding is this:\n$$E_{1}= 4.44 f N_{1}\\Phi_{m}=4.44fN_{1}B_{m}A$$\n\n## Core Types\n![[Attachments/Pasted image 20230726190438.png]]\nWindings are wrapped around the two sides of a laminated square core.\n![[Attachments/Pasted image 20230726190542.png]]\n```ad-note\nHigh voltage conductors have a lower cross section than low voltage conductors as the low voltage conductors have a higher current. This means the cross section of the low voltage conductors needs to be larger to allow for greater current flow and to prevent overheating/melting.\n\n```\n![[Attachments/Pasted image 20230726191021.png]]\nCores are laminated to reduce Eddy Currents which contribute highly to losses.\\\n*Laminated slices can range from 3mm to less.*\n\n### Shell Type Transformer/Sandwich Windings\n![[Attachments/Pasted image 20230726193431.png]]\nWindings are both wrapped around the centre limb of the core.\n![[Attachments/Pasted image 20230726194830.png]]\n- The HV and LV windings are split into a number of sections - HV lines between two LV windings\n- In sandwich coils leakage can be controlled.\n\n## Ideal Transformers\n- **Zero Leakage flux:**\n\t- Flux produced by the primary AND secondary currents are confined within the core\n- **The windings have no resistance:**\n\t- Induced voltages equal applied voltages\n- **The core has infinite permeability:**\n\t- Reluctance of the core is zero\n\t- Negligible current is required to establish magnetic flux\n- **Loss-Less magnetic core**\n\t- No Hysteresis or eddy currents.\n![[Attachments/Pasted image 20230726200400.png]]\nWhere:\n$V_1$= Supply Voltage\n$V_2$ = Output Voltage\n$I_{m}$ = Magnetising Current\n$E_{1}$ = Self induced emf\n$I_{1}$ = No Load Input Current\n$I_{2}$ = Output current\n$E_{2}$ = Mutually induced emf\n\n![[Attachments/Pasted image 20230726202431.png]]\n$$\\frac{V_p}{V_{s}}= \\frac{N_{p}}{N_{s}}=\\frac{I_{s}}{I_{p}}$$\n$$\\text{Power}_\\text{prim} = \\text{Power}_\\text{sec}$$\n$$\\frac{E_1}{N_{1}}= \\frac{E_{2}}{N_{2}} = 4.44f\\Phi_{m}$$\n\n\n## Phasor Diagrams\n\n### No Load\n![[Attachments/Pasted image 20230727153526.png]]\n(a) is a transformer with no load.\n(b) Is a phasor diagram of a loadless transformer. Plotted on a $\\phi$ axis.\nPrimary current $I_{0}$ is represented as a vector.\n#todo \n### Transformer on Load - Assuming no voltage drop in the winding\n![[Attachments/Pasted image 20230727154124.png]]\n![[Attachments/Pasted image 20230727154137.png]]\n\nThe phasor diagram for of a transformer assumes:\n1. No voltage drop in the winding\n2. Equal primary and secondary turns\n\n## Equivalent Circuit of a Transformer\n![[Attachments/Pasted image 20230727154515.png]]\n$$R_{0}= \\frac{V_{1}}{I_{c}}$$\n$$X_{0}= \\frac{V_{1}}{I_{m}}$$\n$$I_{m}= I_{0}\\sin\\phi_{0} = \\text{Magnetizing Component}$$\n$$I_{c}= I_{0}\\cos\\phi_{0}= \\text{Active Component}$$\n\n![[Attachments/Pasted image 20230727155256.png]]\nWe can group inductors and resistors on primary and secondary sides. We can represent these with complex numbers.\n![[Attachments/Pasted image 20230727155405.png]]\n\n- The effect of circuit parameters shouldn't be changed while transferring the parameters from one side to another side.\n```ad-attention\nIt can be proved that a resistance of $R_{2}$ in sec. is equivalent to $\\frac{R_{2}}{k^{2}}$ will be denoted as $R_{2}'$ (ie. Equivalent sec. resistance w.r.t primary) which would have caused the same loss as $R_{2}'$ in the secondary.\n\n```\n\n\n$$I_{1}^{2}R'_{2}= I_{2}^{2}R_{2}$$\n$$R'_{2}=(\\frac{I_{2}}{I_{1}})^{2}R_{2}$$\n\n```ad-note\n$$R'_{2}=a^{2}R_{2}$$\n```\n\n$$a = \\frac{N_{1}}{N_{2}}= \\text{Turns Ratio}$$\n\n## Approximate Equivalent Circuit\nSince the no load current is approx. 1% of the full load current, it can be neglected\n![[Attachments/Pasted image 20230727192000.png]]\n\n## Transformer Tests\nThe performance of a transformer can be calculated with an equivalent circuit.\nThe four main parameters are:\n1. $R_{01}$ is the Primary Resistance\n2. $X_{01}$ is the Primary equivalent leakage reactance\n3. $B_{0}$ Magnetising susceptance (Or Reactance $X_{0}$)\n4. $G_{0}$ is Core Loss Conductance (Or Resistance $R_{0}$)\n\nThe above constants can be easily determined by two tests.\n- Open Circuit test (OC test / No load test)\n- Short Circuit test (SC test / Impedance test)\nThese are both economical and convenient.\n\n### Open Circuit Test\nWe **open circuit the secondary winding**, and connect the primary winding to **full rated voltage**\n![[Attachments/Pasted image 20230727195125.png]]\nUsually conducted on the HV side. We use it to find:\n1. No load loss / Core loss\n2. No load current $I_{0}$ which is helpful in finding $G_{0}$ (or $R_{0}$) and $B_{0}$ (or $X_{0}$)\n$$Coreloss = W_{oc}= V_{0}I_{0}\\cos\\phi_{0}$$\n$$\\cos\\phi_{0} = \\frac{W_{oc}}{V_{0}I_{0}}$$\n\n$$I_{c} \\text{ or } I_{w}= I_{0}\\cos \\phi_{0}$$\n$$I_{m}\\text{ or }I_{\\mu}= I_{0}\\sin \\phi_{0} = \\sqrt{I^{2}_{0}-I^{2}_{w}}$$\n$$I_{0}= V_{0}Y_{0} \\therefore Y_{0}=\\frac{I_{0}}{V_{0}}$$\n\n\n$$R_{0}= \\frac{V_{0}}{I_{w}}$$\n$$X_{0}= \\frac{V_{0}}{I\\mu}$$\n$$G_{0}= \\frac{I_{w}}{V_{0}}$$\n$$B_{0}= \\frac{I\\mu}{V_{0}}$$\n\n$$W_{oc}= V^{2}_{0}G_{0}$$\n$$\\therefore \\text{Exciting Conductance }G_{0}= \\frac{W_{oc}}{V^{2}_{0}}$$\n$$\\text{Exciting susceptance } B_{0}= \\sqrt{Y^{2}_{0}-G^{2}_{0}}$$\n\n### Short-Circuit Test\n**Secondary terminals are short circuited** and the *primary terminals are connected to a fairly low-voltage source.*\nThe input voltage is adjusted until the current in the short circuited windings **is equal to its rated value.** The *input voltage current and power is measured.*\n![[Attachments/Pasted image 20230727203009.png]]\nUsually conducted on LV side, we're looking for it.\n- Full load copper loss - to pre determine the efficiency\n- $Z_{01}\\text{ or }Z_{02};X_{01}\\text{ or }X_{02};R_{01}\\text{ or }R_{02}$ to determine the voltage regulation\n![[Attachments/Pasted image 20230727203411.png]]\nfull load cu loss = $W_{sc} = I^{2}_{sc}R_{01}$\n$Z_{01}= \\frac{V_{sc}}{I_{sc}}$\n$\\therefore X_{01}=\\sqrt{Z_{01}^{2} - R^{2}_{01}}$\n\n## Transformer Voltage Regulation and Efficiency\n- The output voltage of any given transformer varies with the load, even if the input voltage is constant. \n- This is because real transformers have a series impedance in the circuit (above see $X_{01}$). \n- Full load Voltage Regulation is a quantity that compares the output voltage at no load with the output voltage at full load. Defined as:\n$$\\text{Regulation Up} = \\frac{V_{S,nl}-V_{S,fl}}{V_{S,fl}}*\\text{100}$$\n$$\\text{Regulation Up} = \\frac{V_{S,nl}-V_{S,fl}}{V_{S,nl}}*\\text{100}$$\n```ad-important\n$$\\text{At no load: }k=\\frac{V_{s}}{V_{p}}$$\n```\n$$\\text{Regulation up (no load) }= \\frac{(V_{p}/k)-V_{S,fl}}{V_{S,fl}}*100$$\n$$\\text{Regulation up (no load) }= \\frac{(V_{p}/k)-V_{S,fl}}{V_{S,nl}}*100$$\n\n**Ideal transformer our VR = 0%**\n\n\n### Voltage Regulation of a Transformer\n$$\\text{Voltage regulation} = \\frac{\\text{no load voltage - full load voltage}}{\\text{no load voltage}}$$\n$$\\text{Since } \\frac{V_{s}}{V_{p}}= \\frac{N_{s}}{N_{p}}$$\n$$\\text{Secondary voltage on no load } V_{2}= V_{1}(\\frac{N_{2}}{N_{1}})$$\n$V_{2}$ is a secondary terminal voltage on full load\n\n$$\\text{Voltage regulation} = \\frac{V_{1}(\\frac{N_{2}}{N_{1}})-V_{2}}{V_{1}(\\frac{N_{2}}{N_{1}})}$$\n\n**Voltage:**\nIn terms of *secondary* values:\n$$\\text{Regulation:} = \\frac{V_{2,0} - V_{2}}{V_{2,0}}=\\frac{I_{2}R_{02}\\cos \\phi_{2}\\pm I_{2}X_{02}\\sin \\phi_{2}}{V_{2,0}}$$\n\nIn terms of *primary* values:\n$$\\text{Regulation:} = \\frac{V_{1} - V'_{2}}{V_{1}}=\\frac{I_{1}R_{01}\\cos \\phi_{1}\\pm I_{1}X_{01}\\sin \\phi_{1}}{V_{1}}$$\nWhere + for lagging and - for leading\n\n\n## Transformer Phasor Diagram\nIgnoring the excitation of the branch (since current flowing through the branch to be small) more consideration is given to the series impedances ($R_{eq}+jX_{eq})$\n**Voltage regulation depends on magnitude of series of impedances and the phase angle of the current flowing through the transformer.**\n\nPhasor diagrams will determine the effects of these factors on the voltage regulation. A phasor diagram consist of current and voltage vectors.\nAssume that the reference phasor is the secondary voltage, $V_{s}$ . Therefore the reference phasor will have an angle of 0.\n\n*Based on the equivalent circuit, apply [[Kirchhoff's Law]]*\n$$\\frac{V_{p}}{k}=V_{s}+R_{eq}I_{s}+jX_{eq}I_{s}$$\n\n![[Attachments/Pasted image 20230727220552.png]]\nFor lagging loads, the vertical components of $R_{eq}$ and $X_{eq}$ will partially cancel each other out. Due to that, the angle of $\\frac{V_{p}}{a}$ will be very small, hence we can assume that $\\frac{V_{p}}{k}$ is horizontal.\n\n## Transformer Efficiency\nEfficiency is defined as:\n$$\\eta=\\frac{P_{out}}{P_{in}}*100$$\n$$\\eta = \\frac{P_{out}}{P_{out}+P_{loss}}*100$$\n\nTypes of losses:\n- Copper $I^{2}R$ losses\n- Hysteresis losses\n- Eddy current losses\nTherefore efficiency can can be calculated:\n$$\\eta = \\frac{V_{s}I_{s}\\cos \\theta}{P_{Cu}+P_{Core}+V_{s}I_{s}\\cos \\theta} * 100$$\n\n### Losses in a Transformer\nCore and iron losses:\n$$\\text{Hysteresis Loss } W_{h}= \\eta B^{1.6}_{max}fV \\text{ Watts}$$\n$$\\text{Eddy Current Loss } W_{e}=\\eta B^{2}_{max}f^{2}t^{2}\\text{ Watts}$$\n\nCopper loss:\n$$\\text{Total Cu Loss} = I_{1}^{2}R_{1}+I_{2}^{2}R_{2}= I_{1}^{2}R_{01}+I_{2}^{2}R_{02}$$\n\n**Conditions for maximum efficiency:**\n![[Attachments/Pasted image 20230727222932.png]]\n![[Attachments/Pasted image 20230727222958.png]]\n\n**All day efficiency:**\n![[Attachments/Pasted image 20230727223035.png]]\n\n",
        "Week 2 - DC Motors and Selection in MTRN Systems.md": "#MTRN/3026 \n\n**Slides:**\n[[Attachments/DC-motor.pdf]]\n![[Attachments/DC-motor.pptx]]\n![[Attachments/DC_motor.doc]]\n![[Attachments/Rotating_motors_overview 1.doc]]\n\n# [[../../../UNI 2022/MTRN2060/Actuators|Actuators]]\n- Turn energy into movement.\n- Usually needs control signals and power\n- Control signal is usually low energy. Can be chemical, human, electrical, physical\n\n## Actuator Systems\n1. Electric motor\n2. Power converter\n\t1. Rectifier\n\t2. Choppers #What\n\t3. Inverters\n\t4. Cycloconverters #What\n3. Controllers  - Matching the motor and power converter to meet the *load* *requirement*.\n4. Load - Load depends on the application: Current/Mass/Torque. Depends on electrical or mechanical. *How much work is required to be done?*\n\n## Electric Motors\n**Used for speed control applications**\n1. DC Excited\n\t1. Shunt\n\t2. Series\n\t3. Compound\n\t4. Seperately Excited\n\t5. Switch reluctance motors #What \n2. AC Excited\n\t1. Induction - **Popular**\n\t2. Wound rotor synchronous\n\t3. Permanent Rotor Synchronous\n\t4. Reluctance Motor\n\n# Fundamentals of Rotating Machines (Motors)\n$$\\text{Input power}\\rightarrow \\text{Rotating Machine} \\rightarrow \\text{Output power}$$\n![[Attachments/Pasted image 20230731112651.png]]\nOne motor driving another. The one being driven acts as a generator.\n\n*Power output = Power input - Losses*\n\n**Input**\n$P_{in}=V_{in}I_{in}$  *For a DC motor*\n$P_{in}= V_{in}I_{in}\\cos \\phi$ *For single phase AC*\n$P_{in} = \\sqrt{3V_{in}I_{in} \\cos \\phi}$\n\nTherefore, *Power output:*\n$$T_{out}= \\omega _{m}T_{m}=\\frac{2\\pi N T_m}{60}$$\n\nEfficiency:\n$$\\eta = \\frac{P_{out}}{P_{in}}$$\n\n## Operating Principles\n![[Attachments/Fleming’s-Left-Hand-Rule.png]]\n![[Attachments/uKEFw.png]]\nWe can use these rules to quickly determine the directions of forces and magnetic fields in induction questions.\n\n**Fleming's Left Hand Rule**\n$$F = iL * B$$\n\nOr we use our old friend:\n$$F = BiL \\sin \\theta$$\n*Bill Returns*\nTheta is our angle between them if not 90 degrees.\n\n## Force on a Charge\n\n*For a stationary charge in an electric field:*\n$$F = QE$$\n\n*For a charge in motion or moving charge in magnetic field:*\n$$F = Qv*B$$\n\n*Combination of electric and magnetic field:*\n$$F = Q(E+vB)$$\n**Known as the Lorentz force equation.**\n\nF = Force on the charge Q (N)\nE = Electric field intensity\nQ = Charge (Coulumbs)\nB = Magnetic Field Strength\nWhere * is dot product symbol\n\n## Brushed DC Motors\n- Winding assembly with stationary magnetic field\n- Brushes and commutators switch current to different windings *in correct relation to the outer permanent magnetic field.*\n![[Attachments/Pasted image 20230731114220.png]]\n\n| Pros                                           | Cons                                               |\n| ---------------------------------------------- | -------------------------------------------------- |\n| Simple electronics as control is not necessary | Sensors required for speed control                 |\n| Requires only four power transistors           | Brushes and commutators create sparks and wear out |\n|                                                | Sparks limit peak power                            |\n|                                                | Heat in armature is difficult to cool              |\n|                                                | Low power density                                  |\n\n1.5mm motor lamination\n3mm Transformer lamination\n\n## Different Connections of DC motors with Field Windings\nUsually the field winding is supplied with a source for excitation. Here are a couple of different excitation configurations.\n![[Attachments/Pasted image 20230731115610.png]]\n\n#What #Why \nCombination of different methods of getting power to both armature and rotor.\n\n## DC Motor Characteristics\n![[Attachments/Pasted image 20230731115801.png]]\n![[Attachments/Pasted image 20230731115908.png]]\n#Why \n\n\n## Losses\n- $I^{2}R$ Loss (copper loss): Motor winding (stator and rotor)\n- Magnetic Loss: (Eddy current and hysteresis)\n- Friction and windage loss: (Rotational loss or mechanical loss)\n\nManifest in the form of *HEAT* and increases the temperature of the winding of the motor. Cooling *FAN* is required to maintain the *TEMPERATURE.*\n\n**Hysteresis Loss:**\n$P_{h}= f \\int B$ dH $W/{m^{3}}$\n![[Attachments/Pasted image 20230731120941.png]]\n\n\n**Eddy Current Loss:**\n$$P_{e}= \\frac{\\pi^{2}B^{2}_{m}f^{2}t^{2}}{6 \\rho}$$\n\n# Mathematical Equations for analysing DC  Motors\n\n## Performance Equation\n*The following equations are used to analyse the operation of DC motors*\n$$V = E_{a}+I_{a}R_{a}= K_{a} \\phi \\omega + I_{a}R_{a}$$\n$$K_{a}= \\frac{PZ}{2 \\pi a}$$\n\n**Torque Equation:**\n$$I_{a} = \\frac{V-E_{a}}{R_{a}} = \\frac{V-K_{a} \\phi \\omega_{m}}{R_{a}}$$\n$$\\omega_{m} = \\frac{V-I_{a}R_{a}}{K_{a} \\phi} = \\frac{V}{K_{a} \\phi} - \\frac{R_{a}}{K_{a}\\phi}I_{a} = \\frac{V}{K_{a}\\phi} - \\frac{R_{a}}{(K_{a}\\phi)^{2}}T$$\n\nThe mechanical power output is $P_{m}=T\\omega_{m}$\nSo, $E_{a}I_{a}= K_{a}\\phi \\omega_{m} I_{a} = \\omega_{m}K_{a}\\phi I_{a} = \\omega_{m}T$\n\n**Power Developed = Output power** WITHOUT LOSSES\n\n## Model for Starting Performance\n*Electric circuit equation is given by:*\n$$V = L \\frac{di_{a}}{dt} + Ri_{a}+k_{e}\\omega $$\n\nThe dynamic equation of the motor under no-load condition is given by:\n$$T = J \\frac{d\\omega}{dt} + B\\omega$$\n$$\\omega = \\frac{d\\theta}{dt}$$\n\nMotor torque, T, is given by:\n$$T = K_{a}\\phi i_{a} = k_{t}i_{a}$$\n$\\phi$ is kept constant for PM DC motor, $k_{t}$ is a constant and is known as armature constant.\n\n**The back EMF is given by:**\n$$e = K_{a}\\phi \\omega = k_{e}\\omega$$\n$k_{e}$ is constant and is known as the motor constant. Usually $k_{e} = k_{t}$\n\n$$J \\frac{d\\omega}{dt}+B \\omega = k_{t}I_{a}$$\n\n```ad-note\nAt $t = 0$, both $i_{a}$ and $\\omega$ are 0\n```\n\n## Chopping and Speed Control\n![[Attachments/Pasted image 20230731153023.png]]\nWe can \"chop\" the voltage to our motor to control the speed using PWM.\nIn automated systems, we use a transistor switch and a *flyback diode which accommodates the back EMF generated by the motor.*\n\n## DC Motor H-Bridge\nIn the above diagram, we are unable to run the motor backwards. This can be solved using an H-Bridge. This is a common circuit in DC motor control and very popular.\n![[Attachments/Pasted image 20230731153926.png]]\n![[Attachments/Pasted image 20230731153854.png]]\n- Transistors are switched diagonally to allow the DC current to flow in the motor in either direction. We can use PWM with the transistors to reduce average voltage at the motor for speed control.\n- *If transistors are enabled vertically (either both the left or both the right) it causes a shoot through fault. This can fry or damage the motor. ***DO NOT DO THIS.**\n\nWe have a circuit below of what a typical H-bridge looks like in practice:\n![[Attachments/Pasted image 20230731154311.png]]\n\n## BLDC Motor VS Brushed DC Motor\nA table for reference for Brushless DC Motors compared to Brushed DC Motor\n![[Attachments/Pasted image 20230731154451.png]]\n\n# Selecting Motors\n1. *Cost* - BLDC is higher, Brushed is lower\n2. *Thermal Capacity* - Dependent on motor\n3. *Efficiency* - BLDC is high, Brushed is moderate (sparks in brushes reduce peak power)\n4. *Torque-speed profile* - BLDC has a flat TSP, Brushed has a moderately flat TSP that lowers at high speed due to friction.\n5. *Acceleration* - Dependent on motor\n6. *Power Density* - Dependent on motor\n7. *Volume of the motor* - Dependent on motor \n8. *Peak torque capability* - Dependent on motor\n9. *Peak torque capability* - Dependent on motor\n10. *Availability of spare parts* - Dependent on motor and **supplier**\n\t- Important to check with supplier about part availability and future support\n\n## Example Specs - Sydney Trains and Sydney Metro\n\n| Catagory                       | T set                                                                     |     |\n| ------------------------- | -------------------------------------------------------------------------- | --- |\n| Traction Motors           | 4 x 170kW (230hp) 2-phase DC shunt-wound motor MB-3303-B (Mitsubishi Elec) |     |\n| Power Output              | 680kW (910hp) (4-car) 1,360kW (1,820hp) (8-car)   | \n| Electric Systems          |                                     1,500V DC caternary                                       |\n| Current collection method |                           Pantograph                                                 | \n\n| Catagory           | M set                                                           |\n| ------------------ | --------------------------------------------------------------- |\n| Traction System    | IGBT-VVVF (Alstom ONIC 1500)                                    |\n| Traction Motors    | 4 x 226kW (303hp) 3-phase AC induction motor (Alstom ONIX 1500) |\n| Power Output       | 904kW (1,212hp) (4-car) 1,808kW (2,425hp) (8-car)           |\n| Electric System(s) |               1,500V DC catenary                                                  |\n\nThese systems use ORCS (Overhead Rigid Conductor rail System)\n\n# Load\nThe motor drives a load which has a certain characteristics torque-speed requirement. In general: \n$$T_{L} \\propto \\omega^{k}_{m}$$\n\nWhere, k may be an integer or a fraction.\n\n**In a feed drive,**\n$$T_{L} \\propto \\omega_{m}$$\n\n**In fans and pumps:**\n$$T_{L}\\propto \\omega_{m}^{2}$$\n- The motor can be connected to the load through a set of gears\n- The gears have teeth ratio can be treated as torque transformers\n- Gears can be used to amplify the torque on load side at lower speed.\n- The motors are designed to run at high speeds - because it has been found that the higher speed, the lower is the volume and size of the motor.\n\n## Coupling of Loads with Motor:\n![[Attachments/Pasted image 20230731161051.png]]\nThere are a number of transmission methods and coupling solutions. See here for some more depth on transmission. [[../../SEM 1/MECH2003/Week 11 - Motors and Motor Selection|Week 11 - Motors and Motor Selection]]\n\n## Motor-Load Connection Through a Gear\n1. The power handled by the gear is the same on both sides.\n2. Speed on each side is inversely proportional to its tooth number\n\n$$T_{1}\\omega_{1}= T_{2}\\omega_{2}$$\nOR\n$$T_{2}= T_{1} \\frac{\\omega_{1}}{\\omega_{2}}$$\n$$\\frac{\\omega_{1}}{\\omega_{2}}= \\frac{N_{2}}{N_{1}}$$\n\nSubbing in $\\frac{\\omega_1}{\\omega_{2}}$ in $T_{2}= T_{1} \\frac{\\omega_1}{\\omega_2}$\n$$T_{2} = T_{1} \\frac{N_{2}}{N_{1}}$$\n\nSimilar to a transformer, the constants of the load as reflected to the motor is:\n$$J_{1(reflected)} = (\\frac{N_{1}}{N_{2}})^{2} J_{1}$$\n$$B_{2(reflected)} = (\\frac{N_{1}}{N_{2}})^{2} B_{2}$$\n\n$N_{1},N_{2}$ - Teeth number in the gear\n$B_{1}, B_{2}$ - Bearings and their friction coefficients\n$J_{m}, J_{L}$ - Moment of Inertia of the motor and load\n\nHence, the resultant mechanical constants are,\n$$J = J_{m} + (\\frac{N_{1}}{N_{2}})^{2} J_{1}$$\n$$B = B_{1} + (\\frac{N_{1}}{N_{2}})^{2}B_{2}$$\n$J_{m}$ - Moment of inertia of motor\n$B_{1}$ - Friction due to motor bearing\n$J_{1}$ - Moment of inertia of gear system and load\n$B_{2}$ - Friction due to gear system and load\n\nTorque equation of the motor-load combination is:\n$$J \\frac{d\\omega_{1}}{dt} + B\\omega_{1} = T_{1}-T_{2(reflected)} = T_{1} - (\\frac{N_{1}}{N_{2}})^{2}T_{2}$$\n\n## Load Characteristics\n- The process of selecting an adjustable AC or DC drive is one where load is primary consideration.\n- When considering load characteristics:\n\t- What type of load is associated with the application?\n\t- What is the size of the load?\n\t- Does the load involve heavy inertia? (Large mass or mass a long way from the shaft)\n\t- What are the motor considerations?\n\t- Over what speed range are heavy loads encountered?\n\n## Load Types\n### Constant Torque Load:\nIn this group, the torque demanded by the load is constant throughout the speed range.\n*Constant torque. Horsepower varies. General machinery hoists, conveyors, printing presses*\n![[Attachments/Pasted image 20230731171021.png]]\n$$P = T\\omega$$\n**IN HORSEPOWER**\n*Loads of this type are essentially friction loads (Conveyors, extruders, and surface winders)*\n\n### Constant Horsepower Load:\nHorsepower demanded by the load is constant within the speed range. The load requires high torque at low speeds.\n*Constant horsepower. Torque varies inversely with speed*\n![[Attachments/Pasted image 20230731171150.png]]\n*Examples: Center-driven winders and machine tool spindles*\nApplications:\n- Metal cutting tools operating over wide speed range, mixer, extruder and special machines where operation at low speed may be continuous.\n\n### Variable Torque Load:\n$$\\text{Load Torque} = (\\text{Torque Constant})(\\text{Speed})^{2}$$\n*Horsepower varies as square of the speed, torque varies with speed. Positive displacement pumps, some mixers, some extruders.*\n![[Attachments/Pasted image 20230731184625.png]]\n\n\n# Control of Electric Motors\n**Servo Controllers:** Offer extremely fast response and precise control of acceleration/deceleration, speed and torque. Servo Control System can accelerate from standstill to 100 RPM in several milliseconds.\n\n**Servo Control Systems are designed with three feedback loops:**\n- Position loop\n- Velocity loop\n- Current loop\n\n*Elements of Servo Control System are:*\n1. Motor\n2. Power Converter\n3. Load and Transmission Systems\n4. Encoder (like for steppers, position transducer)\n5. Tachometer (speed transducer)\n6. Current and Voltage Sensors\n7. Potentiometers\n\nBelow is a signal diagram of a basic control system.\n![[Attachments/Pasted image 20230731170241.png]]\n\n"
      },
      "ELEC2005": {
        "Week 1 - Intro and Prereq Review.md": "#ELEC/2005 \n\n**Slides:**![[Attachments/ELEC2005 Week 1 Lecture Introduction_2023_Updated.pdf]]\n**PART 1: Weeks 1-7 Nonlinear Devices**\n- Diodes, BJTs, MOSFETs\n\t- [ ] How do they work?\n\t- [ ] How do we use them in circuits?\n\t- [ ] Building circuits to spec\n\t- [ ] Develop the library of building blocks\n![[Attachments/Pasted image 20230725145604.png]]\n**PART 2: Weeks 8-13**\n- [ ] High power systems and components \n\t- [ ] energy generation/conversion/storage\n![[Attachments/Pasted image 20230725145621.png]]\n\n# Learning Outcomes\n![[Attachments/Pasted image 20230725145715.png]]\n\n```ad-summary\ntitle: Learning Outcome 4\n- [ ] Building on prerequisite knowledge (ELEC2070)\n- [ ] Learn the properties and characteristics of non-linear device including diodes and transistors\n- [ ] Learn how these devices work at the circuit level to modify current and voltage\n- [ ] Use equivalent circuit models to simplify complex linear and nonlinear circuits\n- [ ] Find linear representation of nonlinear circuits within limits of interest\n```\n\n```ad-bug\ntitle: Learning Outcome 5\n- [ ] Using LTSpice circuit simulation tools to analyse nonlinear devices\n- [ ] Build and analyse physical electronic circuits\n- [ ] Learn to rapidly prototype nonlinear circuits and how to measure response\n```\n\n# Review of Fundamentals\n\n## Transistors\n[[Transistors]] are circuits components wherein the current between c and e depends on the voltage between b and e.\n![[Attachments/Pasted image 20230725151209.png]]\nThe current can be represented by the equation\n$$i_{c}=g_{m}v_{be}$$\nWhere:\n$i_{c}$ = Current between c and e\n$g_{m}$ = Is a constant depending on the transistor\n$v_{be}$ = Is the voltage between b and e\n\nWe can also represent a transistor as described above with a source and resistor combination.\n![[Attachments/Pasted image 20230725151706.png]]\nIts important to note this equivalent circuit is only an equivalent and simply makes it easier to analyse.\n![[Attachments/Pasted image 20230725151749.png]]\n\n## Kirchhoff's Law\n[[../../../Distilled Notes/Kirchhoff's Law|Kirchhoff's Law]] (Current) states that for the algebraic sum of all **currents entering or leaving a node is zero at any time**.\n![[Attachments/Pasted image 20230725152542.png]]\n\nAnd the algebraic sum of all **voltages around a loop is zero** at any time instant.\n![[Attachments/Pasted image 20230725152620.png]]\n\n\n## Nodes\n![[Attachments/Pasted image 20230725152829.png]]\nGround node potential is zero volts. All other nodes can be measured relative to ground. Each node corresponds to a unique voltage (relative to ground).\n![[Attachments/Pasted image 20230725153143.png]]\nVoltages can be represented relative to nodes.\n\n**Node Voltage Analysis**\n1. First write element currents in terms of node voltages\n![[Attachments/Pasted image 20230725153420.png]]\n2. Apply Kirchhoff's Current Law at each node, except the ground node.\n![[Attachments/Pasted image 20230725153503.png]]\n$i_{1}$ and $i_{2}$ are not needed if we want to find only the node voltages. The source current is normally given.\n\n3. Order the equations with respect to the unknowns (such as you would do for the matrix method) and solve them\n![[Attachments/Pasted image 20230725153647.png]]\n\n# Thevenin's Theorem\n\"Any combination of voltage sources and resistors with two terminals can be replaced by a single voltage source and a single series resistor.\"\n![[Attachments/Pasted image 20230725154154.png]]\n\nWe can find this equivalent by:\n1. Calculate the **open circuit voltage** and the **short-circuit current** of Circuit A.\n2. Then calculate Thevenin resistance as: $R_{t}=\\frac{v_{oc}}{i_{sc}}$\n\n## Graphical Analysis\n![[Attachments/Pasted image 20230725154553.png]]\nOnly $v_{oc}$ and one $R_{L}$ measurement is needed to make a linear graph. This is easy.\n**USEFUL IN LAB**\n\n\n# Non-Linear Devices\nA system will have a number of devices.\n![[Attachments/Pasted image 20230725155215.png]]\nAn example of a subsystem is a simple amplifier \n![[Attachments/Pasted image 20230725155352.png]]\nThe device within this subsystem is the transistor:\n![[Attachments/Pasted image 20230725155416.png]]\n\n## What is a Nonlinear Device\n- Many systems/subsystems involve complex nonlinear circuits with multiple nonlinear devices:\n- Four of the most common nonlinear devices are shown here, diodes and transistors and the circuits constructed with them.\n![[Attachments/Pasted image 20230725155659.png]]\n- For each of these, the relationship between their output and input characteristics is not linear.\n\n- Devices such as *ideal* resistors, capacitors and inductors have a output characteristics that are a linear function of input.\n- Diodes and transistors have a more complex relationship between input and output. ALTHOUGH they may have regions of linearity.\n![[Attachments/Pasted image 20230725160239.png]]\n\n# Amplifiers\n- Most transducers (some sensors, especially microphones) produce weak signals (uV - mV range).\n- We need to strengthen these signals whilst maintaining the information\n\t- Need linear gain, though non linearity here can also be useful.\n\n![[Attachments/Pasted image 20230725160713.png]]\n- A two port circuit, shown as a triangle indicating the direction of signal flow\n- Typically there is a common terminal as a reference point\n- In reality amps require a power supply (not shown)\n![[Attachments/Pasted image 20230725160858.png]]\n\nSignal gain can be achieved and expressed through voltage, current, or power.\n![[Attachments/Pasted image 20230725161242.png]]\nGain is a ratio, expressed as dimensionless, or V/V, A/A etc. Engineers often express gain logarithmically.\n![[Attachments/Pasted image 20230725183327.png]]\n\n## Saturation\n- In reality, our gain is limited\n- Saturation(clipping) will occur when the output voltage approaches that of the power supplies\n- Output signal becomes distorted\n![[Attachments/Pasted image 20230725210004.png]]\n```ad-important\nWe must design amplifiers to avoid this. Knowledge of the input range is needed.\n\n```\n\n## Frequency Response and Bandwidth\n- Amplifying a sine wave signal can **change its amplitude and phase** but **not frequency**.\n![[Attachments/Pasted image 20230725210400.png]]\n- Amplifiers typically only have a flat gain response over a specific frequency range, called **bandwidth.**\n![[Attachments/Pasted image 20230725210523.png]]\n```ad-important\nWe must design amplifiers to operate correctly over the correct frequency range for our application.\n\n```\n\n## Circuit Models\n- Used to model terminal behaviour of amp (simplified to a building block)\n- Example for a voltage amplifier:\n![[Attachments/Pasted image 20230725211321.png]]\nHere, we have a basic amplifier, and an amplifier with an input source and output load. $v_{0}$ is represented as the voltage across the load, $i_{0}R_{L}$. \nThis can be represented as a voltage divider between the dependent source and the two resistors.\nUsing our gain equation from before $A_{vo}=\\frac{v_{0}}{v_{i}}$. We can rewrite our equation to the one seen above.\n\n### Types of Amplifier\n- Signal of interest (at input or output) may be current or voltage.\n- Voltage amp is most popular but other models can be used.\n![[Attachments/Pasted image 20230725212903.png]]\n\n#### Calculate the Gain of a Stage Amplifier\n![[Attachments/Pasted image 20230728192842.png]]\n- We need to solve one at a time\n- We need the gain $\\frac{V_{L}}{V_{S}}$ so we need $V_{L}$ in terms of $V_{S}$\n$$v_{i1}= v_{s} \\frac{1M\\ohm}{1M\\ohm + 100k\\ohm} = 0.9090v_{s}$$\n$$v_{i2} = 10v_{i1} \\frac{100k\\ohm}{101k\\ohm}=9.9v_{i1}=9v_{s}$$\n$$v_{i3}=100 v_{i2} \\frac{10k}{11k}=90*9v_{i2}=818v_{s}$$\n$$v_{L}= 1v_{i3} \\frac{100}{110}=0.909v_{i3}=744 v_{s}$$\n\n*This is our overall gain:*\n$$\\frac{V_L}{V_{S}} = 744$$\n\n**What is this in dB?**\n$$20 \\log |744| = 57.4dB$$\n\n",
        "Week 2 - Diodes.md": "#ELEC/2005 \n\n**Slides:**\n[[Attachments/ELEC2005 Week 2 Lecture Diodes.pdf]]\n\n**Goals:**\n- [x] Understand what nonlinearity means\n- [x] Understand how we can use nonlinearity\n- [x] Be familiar with Diodes and their non-linear characteristics\n- [ ] Analyze basic diode circuits\n- [ ] Be able to use models for analyzing diode circuits\n- [ ] Understand diode applications: Rectifiers and wave-shaping circuits\n- [ ] Small signal analysis\n\n\n# What is a Non-Linear Device?\n![[Attachments/Pasted image 20230805082949.png]]\n\n*For each of these, the relationship between their output and input characteristics is not linear*\n\n- Devices such as ideal resistors, capacitors and inductors have an output characteristics that are a linear function of input.\n- Diodes of transistors have a more complex relationship between input and output\n\t- They do have regions of linearity\n\n## What is a Diode\n![[Attachments/Pasted image 20230805083732.png]]\n- An two terminal device with non-linear IV characteristics\n- Exhibits asymmetric conductance - current only flows in one direction\n- Fabricated using a semiconductor with a P-N Junction\n- Applications:\n\t- Power conversion\n\t- Over voltage protection\n\t- Detectors\n\t- Signal Generation\n\n## Types of Diode\nThere are many types of diodes with different properties.\n![[Attachments/Pasted image 20230805083946.png]]\n#toDo write descriptions\n\n## The PN Junction\n- Modern diodes are typically based on P-N junctions fabricated using semiconductors (commonly silicon)\n- These junctions conduct current asymmetrically\n![[Attachments/Pasted image 20230805084225.png]]\n\n## Junction Diode Characteristics\n![[Attachments/Pasted image 20230805111503.png]]\n*Shockley Equation (Forward bias)*\n$$i_{D} = I_{s}(e^{v_{D}/nV_{r}}-1)$$\n$$i_{D} = I_{s}[\\exp{\\frac{v_{D}}{nV_{T}}}-1]$$\n\n**Where:**\n- $I_{s} =$ Saturation current. Its value depends on the area of the diode and the temp. Doubling for each $5\\degree$ increase for silicon diodes. $~10^{-14}$ A at 300K\n- $n =$ Emission coefficient (ideality factor) $1 < n < 2$\n- $V_{T} =$ Thermal voltage $V_{T =}kT/q$ \n- $k = 1.38*10^{-23}$ Joules/Kelvin (**Boltzmann's Constant**)\n- $q = 1.60 * 10^{-19}$ Coulomb (Charge of an electron)\n\n```ad-note\nTemperature in K = 273 + Temp in C\n```\n### The Pipe Analogy\n![[Attachments/Pasted image 20230805085819.png]]\n\n# The Ideal Diode\n- If negative voltage is applied (reverse bias) No current flows. (Open Circuit)\n- Of a positive current is applied (forward bias) there is no voltage drop (Short Circuit)\n![[Attachments/Pasted image 20230805085942.png]]\n![[Attachments/Pasted image 20230805085957.png]]\n\n## Analysis by Assumed States\n*In a circuit with a number of diodes n*\n- Assume a state for each diode (ON/OFF)(Closed/Open)\n- n diodes will require $2^{n}$ possible combinations\n- **Calculate currents of ON diodes and voltages of OFF diodes**\n- Check to see of calculations are consistent with assumptions\n- If yes, assumption works. *If no, return to step 1 and make a new assumption*.\n- Making a table helps\n![[Attachments/Pasted image 20230805090659.png]]\n[[Equivalent Circuits]] are EXTREMELY useful here.\n**SEE Hambley Example 10.5**\n\n# Non-Ideal Diodes\nIn reality, our diodes aren't ideal and have more complex behavior.\n![[Attachments/Pasted image 20230805091003.png]]\nOur ideal diode has no reverse breakdown and no forward turn on voltage. For negative voltage there is 0 current and for voltage >0V we have the full current.\n\nOur realistic diode has a reverse breakdown voltage $-V_{Z}$, *once the voltage across this diode reaches $-V_{Z}$ the diode experiences reverse breakdown and allows current to flow in the reverse bias direction*. \nThere is also a minimum voltage called the *forward turn on voltage* ($V_{f}$), which must be reached before the diode will allow current to flow.\n\n## Constant Voltage Drop Model\n- Only accounts for the forward turn on voltage\n- Does not account for the slope or reverse breakdown.\n![[Attachments/Pasted image 20230805091641.png]]\n\nFor silicon diodes, typical $V_{f} =~ 0.7V$\nWe will use this model most of the time.\n#todo Examples\n\n## Simple Linear Model and Piece-Wise Linear Model\nWe can also model our diode using a simple linear equation. Although this is not a highly accurate model of a diode.\n![[Attachments/Pasted image 20230805092154.png]]\nFrom this we derive:\n$$i = \\frac{1}{R_{a}}(v-V_{a})+ \\frac{-V_{a}}{R_a}$$\n![[Attachments/Pasted image 20230805092511.png]]\n\nWe can improve this using piecewise functions to generalize non-linearity\n![[Attachments/Pasted image 20230805092838.png]]\n*This is our graphical model. Good for load-line analysis*\n#todo Derive mathematical model\n\n# The Shockley Equation\n*Shockley Equation (Forward bias)*\n$$i_{D} = I_{s}(e^{v_{D}/nV_{r}}-1)$$\n$$i_{D} = I_{s}[\\exp{\\frac{v_{D}}{nV_{T}}}-1]$$\n![[Attachments/Pasted image 20230805093046.png]]\n**Where:**\n- $I_{s} =$ Saturation current. Its value depends on the area of the diode and the temp. Doubling for each $5\\degree$ increase for silicon diodes. $~10^{-14}$ A at 300K\n- $n =$ Emission coefficient (ideality factor) $1 < n < 2$\n- $V_{T} =$ Thermal voltage $V_{T =}kT/q$ \n- $k = 1.38*10^{-23}$ Joules/Kelvin (**Boltzmann's Constant**)\n- $q = 1.60 * 10^{-19}$ Coulomb (Charge of an electron)\n\nThere is also an approximate Shockley (for forward bias more than several tenths of a volt)\n$$i_{D} \\approx I_{s}\\exp({\\frac{v_{D}}{nV_{T}}})$$\n\n## Load Line Analysis Example\n![[Attachments/Pasted image 20230805093606.png]]\n*We know the diode IV equation:*\n$$i_{D} = I_{s}[\\exp{\\frac{v_{D}}{nV_{T}}}-1]$$\n$$i_{D} \\approx I_{s}\\exp({\\frac{v_{D}}{nV_{T}}})$$\n\n*We know Kirchhoff's voltage law:*\n$V_{SS} = Ri_{D}+v_{D}$\n\nThere is no straightforward way to solve these two equations analytically.\nWe use load-line analysis graphically.\n\n![[Attachments/Pasted image 20230805093536.png]]\n*We know the diode I-V equation:*\n$$i_{D} = I_{s}[\\exp{(\\frac{v_{D}}{nV_{T}})-1}]$$\n\n*And [[../../../Distilled Notes/Kirchhoff's Law|Kirchhoff's Law]]:*\n$$i_{D} =\\frac{V_{SS}-v_{D}}{R}$$\n$V_{SS}= 2V$\n$R = 1k\\ohm$ \n\n*We also need these to find the operating point:*\n$V_{DQ} \\approx 0.7V$\n$I_{DQ} \\approx 1.3mA$\n\n# Zener Diode\nZener diodes are designed to work at the reverse breakdown region. These diodes use this as expected behavior.\n![[Attachments/Pasted image 20230805102124.png]]\n![[Attachments/Pasted image 20230805102201.png]]\n*Commonly used for voltage regulator circuits - constant output from variable supply.*\n\n## Voltage Regulator - Analysis in the Reverse Breakdown Region\n*Hambley Exercise 10.3*\n![[Attachments/Pasted image 20230805102649.png]]\n5V change in the supply voltage results in only a 0.5V change the regulated output voltage.\n![[Attachments/Pasted image 20230805102751.png]]\nActual Zener Diodes can do much better than this.\n**Note: The slope of the load line hasn't changed.**\n## L-L Analysis of Complex Circuits\n![[Attachments/Pasted image 20230805103041.png]]\n*Hambley Ex 10.4*\n\n![[Attachments/Pasted image 20230805103114.png]]\n\n# Logic Gates\n## Logic Gates with Diodes\n![[Attachments/Pasted image 20230805103224.png]]\n*What kind of logic gate is this?*\n\n| $V_{A}$ | $V_{B}$ | $V_{Y}$ |\n| ------- | ------- | ------- |\n| 5       | 0       |   5      |\n| 0       | 5       |     5    |\n| 5       | 5       |      5   |\n| 0       | 0        |       0  |\n\n**OR Gate**\n\n![[Attachments/Pasted image 20230805104128.png]]\n\n| $V_{A}$ | $V_{B}$ | $V_{Y}$ |\n| ------- | ------- | ------- |\n| 5       | 0       | 0       |\n| 0       | 5       | 0       |\n| 5       | 5       | 5       |\n| 0       | 0       | 0       |\n**AND Gate**\n\n\n# Rectifier Circuits\n## Half-Wave Rectifier\n![[Attachments/Pasted image 20230805104533.png]]\n![[Attachments/Pasted image 20230805104547.png]]\n*We can use the 0.7V drop model or ideal diode model without losing much accuracy because voltage levels >> 0.7V*\n\nWe can add a capacitor to smooth the output\n![[Attachments/Pasted image 20230805104757.png]]\n$$C \\approx \\frac{I_L T}{V_{r}}$$\n**Where:**\n$I_{L} =$ Average load current\n$T =$ Period of AC voltage\n$V_{r} =$ Ripple voltage\n\n*Chose diode to withstand Peak Inverse Voltage*\n$PIV \\approx 2V_{m}$\nPIV needs to be less than the breakdown voltage of the diode.\n\n## Full-Wave Rectifier\n![[Attachments/Pasted image 20230805105215.png]]\nA transformer can provide this (out of phase AC voltages)\n\n![[Attachments/Pasted image 20230805105337.png]]\n\n## Diode-Bridge Full-Wave Rectifier\n![[Attachments/Pasted image 20230805105419.png]]\n\n## Precision Rectifier - The \"Superdiode\"\n![[Attachments/Pasted image 20230805105633.png]]\n\n## Voltage Regulator\n![[Attachments/Pasted image 20230805105803.png]]\n\n# Wave Shaping Circuits\n![[Attachments/Pasted image 20230805110535.png]]\n![[Attachments/Pasted image 20230805110651.png]]\n\n\n# Diode Analysis\n![[Attachments/Pasted image 20230801163315.png]]\n- So far we have looked at diodes in the time domain\n- We calculated and plotted instantaneous voltages and currents\n- We applied *DC voltages (or currents) to the diodes and found the operating points (Q point)*\n- Q stands for **quiescent** i.e. quiet or no-signal point\n\n*If the Q point is known (using the nonlinear diode characteristic), the linear AC analysis method can be applied to find the response to small (AC) signals.\n\n## Small Signals\n![[Attachments/Pasted image 20230801163907.png]]\n$$i_{D}(t) = I_{DQ}+i_{d}(t)$$\n$$i_{d}(t) = I_{d}\\cos(2\\pi ft - 90\\degree)$$\n\n# Small Signal Diode\n![[Attachments/Pasted image 20230805111017.png]]\n\n"
      }
    }
  },
  "Independent Projects": {
    "Attachments": {
      "Pasted Image 20221107152350_148.png.md": ""
    },
    "DND": {
      "The Story So Far.md": "\n# Which flesh is yours?\n\n## Mad Nettle\nThese knight's origins are unknown. Some believe they're some kind of cult, others claim they are the mindless servants of a long dead god. \n\nDeadly poisonous spikes erupt from their plate armour at odd angles.\nManacles about their wrists, secured with stakes through the forearms, make it impossible for them to wield traditional weapons.\n\n## Murk Sage\nWielders of incredible mind twisting powers, Murk Sages warp the minds of both friend and foe alike. The metal dome encasing their heads act as a conduit for their power. \n\nAs their conduit becomes more damaged, their abilities become more unpredictable and erratic. Many Sages are driven mad by the voices that reverberate about their skull.\n\n## Ancient Glory\nAn old warrior, veteran of countless battles. Now a lost soul, cursed to wander the earth till they are cut down by an equal. Ancient magic traps the life in their bones.\n\nHaving lost all they cared for, these warriors crave death. They may fall ill or become subject to debilitating injuries. They may only pass on in the heat of battle.\n\n## Stone Scholar\nStones bound to their heads crush and pierce their skulls, leaving them in constant pain. Through this sacrifice, they are favoured by the gods, and are granted forbidden wisdom.\n\nExperts in mud sorcery, these scholars wield the earth itself against their enemies. Their sacrifice grants them great knowledge, although their weakened state renders them worthless in a brawl.\n\n## Thrall of Ooze\nAlthough born of flesh and bone, they no longer adhere to any physical form. Thralls rarely recall their previous life, most don't wish to. The Ooze has morphed their corporeal form to its own image.\n\nTheir bodies can take any form they wish, although the further they stray from their true form, the more unstable they become. Stray too far, and unknown consequences await.\n\n# The Four Humours\n\n## Ooze\n*Shapes swirl beneath a thick rotten skin. A pungent rot penetrates the air. The decay sets in.*\nAll things return to the Ooze eventually. The Ooze doesn't care from where the flesh comes, only that it does. Many a powerful deity and creature have attempted to rid the world of the Ooze, none have succeeded.\n\n\n\n## Germinant\n*From even the smallest festering growth, a great bounty of life may spring forth.*\n\n\n## Aether\n*All things move through its domain. Life exist only with its permission.*\n\n\n## Monolith\n*The foundation of all things. The rock and stone moulds to its will.*\n\n\n# Lesser Gods\n\n\n\n\n"
    },
    "Keyboards": {
      "Micro Controllers.md": "# UF2 Bootloader\nUF2 bootloader microcontrollers don't need firmware flashed using QMK or another toolbox, but instead uses .uf2 files. The controller presents itself as a mass storage device which you can then drag and drop the files into.\n\n.hex and other binary files are incompatible\n\n## Splinky RP2040\n\nThe Splinky RP2040 is an ATMEGA32u4 Rasberry Pi based micro controller which uses a UF2 bootloader. More can be found about the Splinky here:\nhttps://github.com/plut0nium/0xB2#programming\n\n# Soldering\nBe extra careful soldering microcontrollers, excess heat can de-solder or fry some microcontrollers. Best to solder at around 250 to avoid damage. Use a fine solder tip and ceramic tip tweezers (or at least ESD safe). Do not use a heat-gun, avoid flux but use it if solder is being stubborn. Make sure the tip is properly tinned."
    }
  },
  "Kanban Schedule.md": "---\n\nkanban-plugin: basic\n\n---\n\n## LONG WAY OFF\n\n- [ ] MTRN3060 Major Project Due 40% #MTRN/3060  @{30-10-2023}\n- [ ] ENGG3000 - Quiz 4 #ENGG/3000  @{29-09-2023}\n- [ ] MTRN3026 Lab Report 2  - 10%  WEEK 9 #MTRN/3026\n- [ ] MTRN3026 Lab Report 3 - 10% Hurdle Wk13 #MTRN/3026\n- [ ] ENG3000 - Portfolio #ENGG/  @{05-11-2023}\n- [ ] MTRN3026 Test 2 - WEEK 8 10% #MTRN/3026\n- [ ] ENGG3000 - Quiz 2 #ENGG/3000  @{10-09-2023}\n- [ ] Design Review #ENGG/3000 @{03-09-2023}\n- [ ] ENGG3000 - Reflective Writing 1 #ENGG/3000  @{17-09-2023}\n- [ ] Design Document #ENGG/3000 @{10-09-2023}\n- [ ] Testing Document #ENGG/3000 @{29-10-2023}\n- [ ] ENGG3000 - Perspective Essay #ENGG/3000  @{15-10-2023}\n- [ ] Statement of Work #ENGG/3000 @{29-10-2023}\n- [ ] Project Presentation #ENGG/3000 @{07-11-2023}\n- [ ] ENGG3000 - Reflective Writing 2 #ENGG/3000  @{05-11-2023}\n\n\n## TO DO\n\n- [ ] ENGG3000 - Quiz 1 #ENGG/3000  @{13-08-2023}\n- [ ] ENGG3000 - Scoping Document #ENGG/3000  @{20-08-2023}\n- [ ] MTRN3060 Minor Project Due 10% #MTRN/3060 @{28-08-2023}\n- [x] MTRN3026 Lab Report 1 - 10% #MTRN/3026 @{09-08-2023}\n\n\n## IM WORKIN ON IT\n\n- [ ] MTRN3060 Lab Book #MTRN/3060\n- [ ] MTRN3026 Lab book update #MTRN/3026\n- [ ] MTRN3026 Test 1 - 10% #MTRN/3026 @{14-08-2023}\n- [ ] ASSIGNMENT 1 - Due #ELEC/2005 @{15-08-2023}\n\n\n## DONE AND DUSTED\n\n**Complete**\n- [x] ENGG3000 Add to kanban\n\n\n## Archive\n\n- [ ] MTRN3026 - DC Motors Solved Problems DC motors #MTRN/3026 @{01-08-2023}\n- [ ] Install LTspice and Waveforms on laptop #ELEC/2005\n\n\n\n\n%% kanban:settings\n```\n{\"kanban-plugin\":\"basic\",\"show-checkboxes\":true,\"tag-colors\":[{\"tagKey\":\"#ELEC\",\"color\":\"rgba(0, 174, 255, 1)\",\"backgroundColor\":\"\"},{\"tagKey\":\"#MECH\",\"color\":\"rgba(244, 126, 9, 1)\",\"backgroundColor\":\"\"},{\"tagKey\":\"ENGG\",\"color\":\"rgba(242, 24, 24, 1)\",\"backgroundColor\":\"\"},{\"tagKey\":\"MTRN\",\"color\":\"rgba(128, 255, 198, 0.94)\",\"backgroundColor\":\"rgba(255, 128, 191, 0.1)\"}],\"hide-date-display\":false,\"hide-date-in-title\":true,\"date-colors\":[{\"isToday\":false,\"distance\":2,\"unit\":\"days\",\"direction\":\"after\",\"color\":\"rgba(217, 80, 26, 1)\"},{\"isToday\":false,\"distance\":7,\"unit\":\"days\",\"direction\":\"after\",\"color\":\"rgba(255, 207, 0, 1)\"},{\"distance\":4,\"unit\":\"months\",\"direction\":\"after\",\"color\":\"rgba(28, 242, 8, 0.86)\"},{\"distance\":1,\"unit\":\"days\",\"direction\":\"after\",\"color\":\"rgba(1, 111, 117, 1)\",\"isAfter\":true},{\"distance\":1,\"unit\":\"days\",\"direction\":\"after\",\"isToday\":true,\"backgroundColor\":\"rgba(0, 0, 0, 0)\",\"color\":\"rgba(255, 0, 52, 1)\"}],\"date-picker-week-start\":1,\"hide-tags-in-title\":true,\"show-add-list\":true,\"date-display-format\":\"DD-MMM-YYYY\",\"show-relative-date\":true,\"link-date-to-daily-note\":false}\n```\n%%",
  "Resources": {
    "Templates": {
      "Frontmatter Metadata.md": "---\ndate: {{date}}\ntags: \nstatus: \n---"
    },
    "Markdown Latex Reference Sheet.md": "Description\n===========\nFurther Reference and source: ftp://ftp.ams.org/pub/tex/doc/amsmath/short-math-guide.pdf\n\nExample expressions / functions\n============================\n\n|Input             | Rendered        |\n|-----------------|----------------|\n|`$a = b + c − d$` | $a = b + c − d$ |\n|`$\\sqrt{?\\frac{\\pi}{2}}$` | $\\sqrt{\\frac{\\pi}{2}}$ |\n|`$y = a x_1^2 + b x_2 + c$` | $y = a x_1^2 + b x_2 + c$ |\n\nSpecial characters / Symbols\n============================\n### Latin:\n##### No dot:  \n`\\imath` $\\rightarrow$ $\\imath$,\n`\\jmath` $\\rightarrow$ $\\jmath$\n\n##### Hat:  \n`\\hat{\\imath}`  $\\rightarrow$ $\\hat{\\imath}$,\n`\\hat{\\jmath}`  $\\rightarrow$ $\\hat{\\jmath}$\n\n### Greek Letters:\n##### Capital:\n|LaTex      |   | LaTex    |   |\n|----------:|--:|---------:|--:|\n|`\\Gamma`   | Γ | `\\Delta` | ∆ |\n|`\\Lambda`  | Λ | `\\Phi`   | Φ |\n|`\\Pi`      | Π | `\\Psi`   | Ψ |\n|`\\Sigma`   | Σ | `\\Theta` | Θ |\n|`\\Upsilon` | Υ | `\\Xi`    | Ξ |\n|`\\Omega`   | Ω |          |   |\n\n##### Lowercase:\n|LaTex      |   | LaTex     |   |\n|----------:|--:|----------:|--:|\n|`\\alpha`   | α | `\\nu`     | ν |\n|`\\beta`    | β | `\\kappa`  | κ |\n|`\\gamma`   | γ | `\\lambda` | λ |\n|`\\delta`   | δ |  `\\mu`    | µ |    \n|`\\epsilon` | ϵ | `\\zeta`   | ζ |\n|`\\eta`     | η | `\\theta`  | θ |\n|`\\iota`    | ι | `\\xi`     | ξ |\n|`\\pi`      | π | `\\rho`    | ρ |\n|`\\sigma`   | σ | `\\tau`    | τ |\n|`\\upsilon` | υ | `\\phi`    | φ |\n|`\\chi`     | χ | `\\psi`    | ψ |\n|`\\omega`   | ω |           |   |\n\n###### Other:\n|LaTex       |   | LaTex       |   |\n|-----------:|---|------------:|--:|\n|`\\digamma`  | ϝ | `varepsilon`| ε       |\n|`\\varkappa` | ϰ | `\\varphi`   | ϕ       |\n|`\\varpi`    | ϖ | `\\varrho`   | ϱ       |\n|`\\varsigma` | ς | `\\vartheta` | ϑ       |\n|`\\eth`      | ð | `\\hbar`     | $\\hbar$ |\n\n\n## Other:\n#### Other Symbols\n|LaTex         |   | LaTex            |   |\n|-------------:|---|-----------------:|--:|\n|`\\partial`    | ∂ | `\\infty`         | ∞ |\n|`\\wedge`      | ∧ | `\\vee`           | ∨ |\n|`\\neg` `\\not` | ¬ |                  |   |\n|`\\bot`        | ⊥ | `\\top`           | ⊤ |\n|`\\nabla`      | ∇ | `\\varnothing`    | ∅ |\n|`\\angle`      | ∠ | `\\measuredangle` | ∡ |\n|`\\surd`       | √ | `\\forall`        | ∀ |\n|`\\exists`     | ∃ | `\\nexists`       | ∄ |\n\n#### Relational Symbols\n|             LaTex |                |             LaTex |           |\n| -----------------:| -------------- | -----------------:| ---------:|\n| `\\hookrightarrow` | ↪              |     `\\Rightarrow` |         ⇒ |\n|     `\\rightarrow` | →              | `\\Leftrightarrow` |         ⇔ |\n|    `\\nrightarrow` | ↛              |         `\\mapsto` | $\\mapsto$ |\n|            `\\geq` | ≥              |            `\\leq` |         ≤ |\n|          `\\equiv` | ≡              |            `\\sim` |         ∼ |\n|             `\\gg` | ≫              |             `\\ll` |         ≪ |\n|         `\\subset` | ⊂              |       `\\subseteq` |         ⊆ |\n|             `\\in` | ∈              |          `\\notin` |         ∉ |\n|            `\\mid` | $\\mid$         |         `\\propto` |         ∝ |\n|           `\\perp` | ⊥              |      ` \\parallel` |         ∥ |\n|    `\\vartriangle` | $\\vartriangle$ |                   |           |\n|             `\\pm` |       $\\pm$         |      `\\cdot`     (dot product)        |      $\\cdot$     |\n\n#### Binary operators\n|LaTex        |   | LaTex  |   |\n|------------:|---|-------:|--:|\n|`\\wedge`     | ∧ | `\\vee` | ∨ |\n|`\\neg``\\not` | ¬ |        |   |\n\n#### Cumulative operators\n|     LaTex |           |       LaTex |             |\n| ---------:| --------- | -----------:| -----------:|\n|    `\\int` | ∫         |     `\\iint` |     $\\iint$ |\n|  `\\iiint` | $\\iiint$  | `\\idotsint` | $\\idotsint$ |\n|   `\\prod` | $\\prod$   |      `\\sum` |      $\\sum$ |\n| `\\bigcup` | $\\bigcup$ |   `\\bigcap` |   $\\bigcap$ |\n\n#### Piecewise Functions\n$$\n \\delta(t) = \\begin{cases} \n      \\infty & \\textrm{ if $t=0$} \\\\\n      0 & \\textrm{Everywhere Else} \\\\\n   \\end{cases} \n$$\n\n\n\n#### Named operators\n$\\arccos$,\n$\\arcsin$,\n$\\arctan$,\n$\\arg$,\n$\\cos$,\n$\\cosh$,\n$\\cot$,\n$\\coth$,\n\\deg\n\\det\n\\dim\n\\exp\n\\gcd\n\\hom\n\\inf\n\\injlim\n\\lg\n\\lim\n\\liminf\n\\limsup\n\\ln\n\\log\n\\max\n\\min\n\\Pr\n\\projlim\n\\sec\n\\sin\n\\sinh\n\\sup\n",
    "Code Repository.md": "\n# C\n## ATmega328P\n### ELEC3042 Major - Pass Requirements Only\n```c\n/*\n/*\n * File:   Major_Pass.c\n * Author: Tyler Johnson\n * SID: 46978518\n */\n\n//==============Header files==============\n#include <xc.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n#include <avr/sleep.h>\n#include \"LCD_Header.h\"\n\n//=============Variables=================\n\n\n//Define primary state machine phases - I chose to make one large state machine as opposed to\n//smaller ones for simplicity of coding\nenum PHASE {HZD, MSS, MSR, SRM, MSS_2_MSR, MSS_2_SRM, MSR_2_SRM, MSR_2_MSS, SRM_2_MSS, SRM_2_MSR};\nenum PHASE curr_phase = HZD;    //Variable for current state - Gets updated with next state at the end of while loop\nenum PHASE next_phase = HZD;    //Variable for storing the next_phase we are moving to\n\n//======== Variables, Definitions and Macros ========//\n\n//Macros for buttons\n#define S0 0b00000001       //Define macro for S0\n#define S1 0b00010000       //Define macro for S1\n#define S2 0b00000001       //Define macro for S2\n#define S3 0b00010000       //Define macro for S3\n#define S4 0b00001000       //Define macro for S4\n#define S5 0b01000000       //Define macro for S5\n#define S6 0b00000001       //Define macro for S6\n\n//Macros for Port Expander Address\n#define GPIOA 0x12          //Define macro for GPIOA address\n#define GPIOB 0x13          //Define macro for GPIOB address\n#define INTCAPA 0x10        //Define macro for INTCAPA address\n#define INTCAPB 0x11        //Define macro for INTCAPB address\n\n//Macros for light values - Makes reffering to specific values easier\n#define MSNG 0b00100000     //Main Street North Green\n#define MSNY 0b01000000     //Main Street North Yellow\n#define MSNR 0b10000000     //Main Street North Red\n\n#define MSSG 0b00000010     //Main Street South Green\n#define MSSY 0b00000100     //Main Street South Yellow\n#define MSSR 0b00001000     //Main Street South Red\n\n#define SRMR 0b10000000     //School Road (to) Main Green\n#define SRMY 0b01000000     //School Road (to) Main Yellow\n#define SRMG 0b00100000     //School Road (to) Main Red\n\n//For some reason MSTR is already defined somewhere else\n//These are meant to be MSTR and friends but I've changed\n//the \"phase\" name for MST is represented as MSR\n#define MSRR 0b00001000     //Main Street Right (Turn) Red\n#define MSRY 0b00000100     //Main Street Right (Turn) Yellow\n#define MSRG 0b00000010     //Main Street Right (Turn) Green\n\n//Timer variables\nvolatile uint32_t timer2_ms_counter = 0;        //Counter to store time in ms for determining time periods\nvolatile uint32_t HZD_ms_counter = 0;           //Counter to store time in ms for Hazard State\nvolatile uint16_t time_period_value = 1000;     //Initial value for time_period - set to 1000 so TP = 1sec initially\nvolatile uint32_t time_periods_elapsed = 0;     //Counter for how many time periods have elapsed, will be reset on state transition\nvolatile uint32_t time_periods_elapsed_LCD = 0; //Counter incremented at the same rate as @time_periods_elapsed for displaying on the LCD screen\n\n//Interrupt flags for handling inputs\nvolatile uint8_t Expander_Interrupt_Occured = 0;    //Interrupt Flag for INT0 external interrupt\nvolatile uint8_t PCINT_Occured = 0;                 //Interrupt Flag for PCINT0\n\n//Variables for storing values from INCAP registers\nvolatile uint8_t INTCAPA_Flag = 0;\nvolatile uint8_t INTCAPB_Flag = 0;\n\n//Variables for controlling LEDs, used instead of spi_send() commands to make\n//code more efficient. We only need to use spi_send() twice per loop using these variables as inputs\nvolatile uint8_t GPIOA_LEDs = 0b00000000;\nvolatile uint8_t GPIOB_LEDs = 0b00000000;\n\n//Button Flags for each input\nvolatile uint8_t ButtonS6_Flag = 0;\nvolatile uint8_t ButtonS5_Flag = 0;\nvolatile uint8_t ButtonS4_Flag = 0;\nvolatile uint8_t ButtonS3_Flag = 0;\nvolatile uint8_t ButtonS2_Flag = 0;\nvolatile uint8_t ButtonS1_Flag = 0;\nvolatile uint8_t ButtonS0_Flag = 0;\n\n//Address for the LCD display, used for I2C communication - function wont work if I use # define\nuint8_t LCD_Addr = 0x27;\n\n//Just a couple of strings up to no good (For LCD display)\nchar str_HZD[] = \"HZD \";\nchar str_MSS[] = \"MSS\";\nchar str_MST[] = \"MST\";\nchar str_SRM[] = \"SRM\";\n\n//Letters for printing to LCD display\nuint8_t theLetterG = 71;\nuint8_t theLetterY = 89;\nuint8_t theLetterR = 82;\n\n//Function for transferring data to the port expander and returning synchronously\nuint8_t spi_transfer(uint8_t data) {\n    SPDR = data;\n    while ((SPSR & _BV(SPIF)) == 0) {\n        ; // wait until transfer completed\n    }\n    return SPDR;\n}\n\n//Function for sending data to the port expander\nvoid spi_send(uint8_t reg, uint8_t data) {\n    // Send a command + byte to SPI interface\n\n    PORTB &= ~_BV(2);   //SS enabled (low))\n\n    spi_transfer(0x40); //Send Opcode + Write Bit\n    spi_transfer(reg);  //Send MCP23S17 register address\n    spi_transfer(data); //Transfer data to the selected register\n\n    PORTB |= _BV(2);    //SS disabled (high)\n}\n\n//Function for reading data from the port expander\nuint8_t spi_read(uint8_t reg) {\n    uint8_t data;           //Define new variable for data\n\n    PORTB &= ~_BV(2); // SS enabled (low))\n\n    spi_transfer(0x41);     // Send Opcode + Read Bit\n    spi_transfer(reg);      // Send MCP23S17 register address\n    data = spi_transfer(0); // Send 0 to get values from the Port Expander\n\n    PORTB |= _BV(2); // SS disabled (high)      \n    \n    return data;//Return data\n}\n\n//A function for setting up SPI communication \nvoid setup_spi() {\n   DDRB |= (1 << DDB3) | (1 << DDB5) | (1 << DDB2); //Set Data Direction Register\n   PORTB |= (1 << PB2);                             //Set Pullup resistors\n\n   //Enable SPI by setting SPE - Make ATmega328P Master by setting MSTR\n   SPCR |= (1 << SPE) | (1 << MSTR);\n\n   //Set CPOL to 0 - SCK is low on idle\n   SPCR &= ~(1 << CPOL);\n   \n   //Set CPHA to 0 - Samples data on leading edge of SCK and sets up on the trailing edge\n   SPCR &= ~(1 << CPHA);\n\n   //Set SPI2X - Double Speed SPI\n   SPSR |= (1 << SPI2X);\n}\n\n// Set Timer2 to CTC mode with a prescaler of 64 to generate an interrupt every 1ms\nvoid setup_timer2() {\n    TCCR2A = (1 << WGM21);\n\n    // Set prescaler to 64\n    TCCR2B = (1 << CS22);\n\n    // Set compare value\n    OCR2A = 250;\n\n    // Enable compare match interrupt\n    TIMSK2 = (1 << OCIE2A);\n}\n\n//A function for setting up the port expander, setting up data direction registers and pullup resistors\nvoid setup_PortExpander() {\n    \n           spi_send(0x0A, 0b01000000);  //IOCONA\n           spi_send(0x0B, 0b01000000);  //IOCONB\n\n           spi_send(0x00, 0b00010001);  //IODIRA\n           spi_send(0x01, 0b00010001);  //IODIRB\n\n           spi_send(0x02, 0b00010001);  //IPOLA\n           spi_send(0x03, 0b00010001);  //IPOLB\n\n           spi_send(0x0C, 0b00010001);  //GPPUA - Setup pullup resistors for buttons (GPIOA 0 and 4)\n           spi_send(0x0D, 0b00010001);  //GPPUB - Setup pullup resistors for buttons (GPIOB 0 and 4)\n\n           spi_send(0x04, 0b00010001);  //GPINTENA\n           spi_send(0x05, 0b00010001);  //GPINTENB\n\n           //Do a dummy read of INTCAP A and B to clear associated flags\n           //and prevent an initial interrupt from running.\n           spi_read(INTCAPA);\n           spi_read(INTCAPB);\n}\n\n/*Function for setting up ADC for the potentiometer input \n* ISSUE - When using free running mode, reading from ADCH stops the current conversion, meaning inaccuracies occur. Use manual trigger instead.\n* ALSO - Figure out how to do manual trigger (WHAT DO I SET ADMUX TO)\n*/\nvoid setup_ADC() {\n    ADMUX = 0b01100000;\n    ADCSRA = 0b11100110;    //Free running mode - It works so Im not touching it\n    ADCSRB = 0;\n    \n    DIDR0 = 0b00000001;\n}\n\n/*  Function to update LEDs to reflect the current state of LED flags\n *  Reduces the amount of time spent sending data to the port expander\n */\nvoid updateLEDs(){\n    spi_send(GPIOA, GPIOA_LEDs);\n    spi_send(GPIOB, GPIOB_LEDs);\n}\n\nvoid updateLCD(){\n    \n    //Code for writing curr_phase to the LCD - since curr_state can only have one value at a time.\n    LCD_Position(LCD_Addr, 0x40);\n    if (curr_phase == HZD){\n            LCD_Write(LCD_Addr, str_HZD, 4);\n    }\n    if (curr_phase == MSS){\n            LCD_Write(LCD_Addr, str_MSS, 3);\n            LCD_Write_Chr(LCD_Addr, theLetterG);\n    }\n    if (curr_phase == MSR){\n            LCD_Write(LCD_Addr, str_MST, 3);\n            LCD_Write_Chr(LCD_Addr, theLetterG);\n    }\n    if (curr_phase == SRM){\n            LCD_Write(LCD_Addr, str_SRM, 3);\n            LCD_Write_Chr(LCD_Addr, theLetterG);       \n    }\n    \n    //Code for displaying 0 (0x58) if button isn't pressed or X (0x4F) if it is.\n    LCD_Position(LCD_Addr, 0x00);\n    if(ButtonS0_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S0 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x01);\n    if(ButtonS1_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S1 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x02);\n    if(ButtonS2_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S2 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x03);\n    if(ButtonS3_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S3 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x04);\n    if(ButtonS4_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S4 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x05);\n    if(ButtonS5_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S5 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    LCD_Position(LCD_Addr, 0x06);\n    if(ButtonS6_Flag == 1){\n        LCD_Write_Chr(LCD_Addr, 0x58);      //If button S6 is pressed we print X\n    } else {LCD_Write_Chr(LCD_Addr, 0x4F);} //Else print O\n    \n    /*By adding 48 to each number, we get the value of the initial \n     * number in HEX so we don't need to convert to a string or chr\n    */\n    LCD_Position(LCD_Addr, 15);\n    LCD_Write_Chr(LCD_Addr, (time_periods_elapsed_LCD % 10)+48);\n    \n    LCD_Position(LCD_Addr, 14);\n    LCD_Write_Chr(LCD_Addr, ((time_periods_elapsed_LCD % 100)/10)+48);\n    \n    LCD_Position(LCD_Addr, 13);\n    LCD_Write_Chr(LCD_Addr, ((time_periods_elapsed_LCD % 1000)/100)+48);\n    \n    LCD_Position(LCD_Addr, 12);\n    LCD_Write_Chr(LCD_Addr, ((time_periods_elapsed_LCD % 10000)/1000)+48);\n    \n    LCD_Position(LCD_Addr, 11);\n    LCD_Write_Chr(LCD_Addr, ((time_periods_elapsed_LCD % 100000)/10000)+48);\n    \n    //Print period to display - for testing and because who's gonna stop me\n    LCD_Position(LCD_Addr, 0x4C);\n    LCD_Write_Chr(LCD_Addr, ((time_period_value % 10000)/1000)+48);\n    \n    LCD_Position(LCD_Addr, 0x4D);\n    LCD_Write_Chr(LCD_Addr, ((time_period_value % 1000)/100)+48);\n    \n    LCD_Position(LCD_Addr, 0x4E);\n    LCD_Write_Chr(LCD_Addr, ((time_period_value % 100)/10)+48);\n    \n    LCD_Position(LCD_Addr, 0x4F);\n    LCD_Write_Chr(LCD_Addr, ((time_period_value % 10))+48);\n}\n\n\n//Function to reset timers relevant to the state machine\n//to be called at each state transition\nvoid resetTimer(){\n    timer2_ms_counter = 0;\n    time_periods_elapsed = 0;\n    HZD_ms_counter = 0;\n}\n\nvoid checkButtonInputs(){\n    INTCAPA_Flag = spi_read(GPIOA);   //Read INTCAP registers here as opposed to the ISR\n    INTCAPB_Flag = spi_read(GPIOB);\n            \n    //Set out button flags depending on our INTCAP registers\n    if ((INTCAPA_Flag & S0)) {          \n        ButtonS0_Flag = 1;\n    }\n        \n    if ((INTCAPA_Flag & S1)) {\n        ButtonS1_Flag = 1;\n    }\n\n    if ((INTCAPB_Flag & S2)) {\n        ButtonS2_Flag = 1;\n        }\n\n    if ((INTCAPB_Flag & S3)) {\n        ButtonS3_Flag = 1;\n    }\n}\n\n// Define the Timer2 output compare interrupt service routine\nISR(TIMER2_COMPA_vect) {    \n    timer2_ms_counter++;    //Variable for calculating periods\n    HZD_ms_counter++;       //Separate variable used for Hazard phase timing\n    \n    if (timer2_ms_counter == time_period_value){    //If we reach the current value for period\n        time_periods_elapsed++;                     //Increment our time period counters\n        time_periods_elapsed_LCD++;                 //This one is never reset and is only for displaying to LCD\n        time_period_value = 100+((ADCH/10)*36);     //Redefine period using an equation (100ms to 1s)\n        \n        //Since POT is not perfect and doesn't always zero out or reach max value\n        //we have some if statements to lock those values to 1000 or 100\n        //so the pot is more consistent.\n        if (time_period_value > 900){\n            time_period_value = 1000;\n        }\n        if (time_period_value < 200){\n            time_period_value = 100;\n        }\n        \n        timer2_ms_counter = 0;                      //Reset our count to 0\n    }\n}\n\n/*ISR for PCINT0 (PB0)\n * Triggered by a pin change on PB0, which is attached to the button S6\n * Determines if the button is still pressed and sets the corresponding flag\n */\nISR(PCINT0_vect) {\n    PCINT_Occured = 1;          //Set flag to be processed in main loop\n    if (((PORTB & S6) == 1)){     //Check if button is released;\n        HZD_ms_counter = 0;     //Reset counter only when the button is released\n    }\n}\n\n/*ISR for External Interrupt INT0\n * Triggered by an interrupt generated by the Port Expander attached to INT0\n * Reads the INTCAP registers for both GPIOA and GPIOB to determine which\n * button generated the interrupt and sets the corresponding flag\n */\nISR(INT0_vect) {\n    Expander_Interrupt_Occured = 1;\n}\n\n//Setup function combines all other setup functions into one - Sets DDR and PORT registers\nvoid setup() {\n    \n    setup_spi();            //Setup SPI communication on the ATmega328P side\n    setup_PortExpander();   //Sends data to the port expander to set registers\n    \n    setup_I2C();    //Sets up I2C communication on the ATmega328P side\n   \n    setup_ADC();    //Sets up ADC conversion for A0\n\n    setup_timer2(); //Enables and starts our timer2\n\n    //DDR - 0 for input - 1 for output\n    //PORT - 0 for no pullup - 1 for pullup\n    DDRB |=  0b00101110;    //Direction Register B - Attached to port expander and button\n    PORTB |= 0b00000001;    //PORTB Internal Pullups - Enabled only for PB0(S6))\n\n    DDRC |=  0b00011110;    //Direction Register C - Attached to SRP LEDs, LCD Display, and Turnpot\n    PORTC |= 0b00000000;    //PORTC Internal Pullups - All disabled\n\n    DDRD |=  0b10110000;    //Direction Register D - Attached to Port Expander, SPR LEDs, SZ LEDs, S4 and S5\n    PORTD |= 0b01001000;    //PORTD Internal Pullups - Enabled for S4 and S5\n    \n    EICRA |= 0b00000001;    //External interrupt Control Register A - Generates an interrupt on any logical change INT0\n    EIMSK |= 0b00000001;    //Enable interrupts for INT0     \n    \n    PCICR |= 0b00000001;    //Enables PC interrupts for PCINT0:7 and PCINT16:23\n    PCMSK0 |= 0b00000001;   //Enables interrupt for PCINT0\n   \n    sei();                  //Enable global interrupts\n    \n    setup_LCD(LCD_Addr);\n}\n\n\n//===========Main Loop==========//\nint main(void) {\n    \n    setup();    //Runs setup\n    \n    while(1){\n        \n        if(Expander_Interrupt_Occured){         //If statement for handling inputs from port expander\n            checkButtonInputs();\n            Expander_Interrupt_Occured = 0;     //Reset the flag\n        }\n        \n        if (PCINT_Occured == 1){                //If statement for handling inputs from S6\n            \n            if ((!(PINB & S6)) == 1){\n                ButtonS6_Flag = 1;\n            } else {ButtonS6_Flag = 0;}\n            \n            PCINT_Occured = 0;\n        }\n        \n        /*Inputs for S4 and S5 are handled outside interrupts as they aren't necessary\n         * inputs for the pass requirement, however their status needs to be printed to the screen\n         * as per the pass requirements listed in the document.\n         */\n        if ((!(PIND & S4)) == 1){\n                ButtonS4_Flag = 1;\n            } else {ButtonS4_Flag = 0;}\n            \n        if ((!(PIND & S5)) == 1){\n            ButtonS5_Flag = 1;\n        } else {ButtonS5_Flag = 0;}\n        \n        \n        switch(curr_phase){     //State machine start\n            case HZD:\n                \n                    if (HZD_ms_counter%2000 < 1000){    //Flashes HZD LEDs for 1 second on 1 second off\n                        GPIOA_LEDs = 0b01000100;\n                        GPIOB_LEDs = 0b01000100;\n                        PORTC |=(0b00000100);\n                    \n                    } else {\n                        GPIOA_LEDs = 0b00000000;\n                        GPIOB_LEDs = 0b00000000;\n                        PORTC &= 0b11111011;\n                    }\n                    \n                    if ((ButtonS6_Flag == 1)&&(HZD_ms_counter > 2000)){\n                        HZD_ms_counter = 0;\n                    }\n                \n                if (HZD_ms_counter > 10000){\n                    resetTimer();\n                    PORTC &= 0b00000000;\n                    next_phase = MSS;\n                }\n                \n                break;\n                \n            case MSS:\n                \n                GPIOA_LEDs = (MSNG|MSSG);\n                GPIOB_LEDs = (MSSR|SRMR);\n                \n                if(ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                ButtonS0_Flag = 0;\n                ButtonS1_Flag = 0;\n                checkButtonInputs();\n                \n                if ( (time_periods_elapsed >= 6) || ( (time_periods_elapsed >=4) && (ButtonS0_Flag == 0) && (ButtonS1_Flag == 0) ) ){\n                    \n                    if(ButtonS2_Flag == 1){\n                        next_phase = MSS_2_MSR;\n                        checkButtonInputs();\n                        resetTimer();\n                        break;\n                    }\n                    else if(ButtonS3_Flag == 1){\n                        next_phase = MSS_2_SRM;\n                        checkButtonInputs();\n                        resetTimer();\n                        break;\n                    }\n                    else {\n                        next_phase = MSS;\n                        resetTimer();\n                    }\n                }\n                break;\n                \n            case MSS_2_MSR:\n                \n                if (time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNG | MSSY);\n                    GPIOB_LEDs = (MSRR | SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                \n                if (time_periods_elapsed >= 2){\n                    GPIOA_LEDs = (MSNG|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                \n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                if (time_periods_elapsed >= 4){\n                    next_phase = MSR;\n                    resetTimer();\n                }\n                \n                break;\n                \n            case MSS_2_SRM:\n                \n                if (time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNY|MSSY);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                \n                if (time_periods_elapsed >=2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                \n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                if (time_periods_elapsed >= 4){\n                    next_phase = SRM;\n                    resetTimer();\n                }\n             \n                \n                break;\n                \n            case MSR:\n                \n                GPIOA_LEDs = (MSNG|MSSR);\n                GPIOB_LEDs = (MSRG|SRMR);\n                \n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                ButtonS2_Flag = 0;\n                checkButtonInputs();\n                \n                if ((time_periods_elapsed >= 3) || ((time_periods_elapsed >= 2) && (ButtonS2_Flag == 0))){\n                    \n                    if (ButtonS3_Flag == 1){\n                        next_phase = MSR_2_SRM;\n                        checkButtonInputs();\n                        resetTimer();\n                    } else {\n                        next_phase = MSR_2_MSS;\n                        checkButtonInputs();\n                        resetTimer();\n                    }\n                }\n                break;\n                \n            case MSR_2_SRM:\n                \n                if(time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNY|MSSR);\n                    GPIOB_LEDs = (MSRY|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                if (time_periods_elapsed >= 2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSSR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                \n                if (time_periods_elapsed >= 4){\n                    next_phase = SRM;\n                    resetTimer();\n                }\n                        \n                break;\n                \n            case MSR_2_MSS:\n                \n                if (time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNG|MSSR);\n                    GPIOB_LEDs = (MSRY|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                if (time_periods_elapsed >= 2){\n                    GPIOA_LEDs = (MSNG|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                if (time_periods_elapsed >= 4){\n                    next_phase = MSS;\n                    resetTimer();\n                }\n                \n                break;\n                \n            case SRM:\n                \n                GPIOA_LEDs = (MSNR|MSSR);\n                GPIOB_LEDs = (MSRR|SRMG);\n                \n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                ButtonS3_Flag = 0;\n                checkButtonInputs();\n                \n                if ((time_periods_elapsed >= 4) || ((time_periods_elapsed >= 2) && (ButtonS3_Flag == 0))){\n                    \n                    if ((ButtonS1_Flag == 1)||(ButtonS0_Flag == 1)){\n                        next_phase = SRM_2_MSS;\n                        resetTimer();\n                    }\n                    \n                    else if (ButtonS2_Flag == 1){\n                        next_phase = SRM_2_MSR;\n                        resetTimer();\n                    } \n                    else {\n                        next_phase = SRM_2_MSS;\n                        resetTimer();\n                    }\n                }\n                \n                break;\n                \n            case SRM_2_MSS:\n                \n                if (time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMY);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                if(time_periods_elapsed >= 2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                if (time_periods_elapsed >= 4){\n                    next_phase = MSS;\n                    resetTimer();\n                }\n                \n                break;\n                \n            case SRM_2_MSR:\n                \n                if (time_periods_elapsed < 2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMY);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterY);\n                }\n                \n                if (ButtonS6_Flag == 1){\n                    next_phase = HZD;\n                    resetTimer();\n                    break;\n                }\n                \n                if (time_periods_elapsed >= 2){\n                    GPIOA_LEDs = (MSNR|MSSR);\n                    GPIOB_LEDs = (MSRR|SRMR);\n                    LCD_Position(LCD_Addr, 0x43);\n                    LCD_Write_Chr(LCD_Addr, theLetterR);\n                }\n                if (time_periods_elapsed >=4) {\n                    next_phase = MSR;\n                    resetTimer();\n                }\n                break;\n        }\n        updateLEDs();\n        updateLCD();\n        curr_phase = next_phase;\n    }\n}\n```\n\n### Timers\n#### Timer0 Setup\n```scss\nvoid setup_timer0() {\n  // Set the Timer0 control registers to CTC mode with a prescaler of 64\n  TCCR0A |= (1 << WGM01);\n  TCCR0B |= (1 << CS01) | (1 << CS00);\n  TCCR0B &= ~(1 << CS02);\n\n  // Set the Timer0 output compare register to trigger an interrupt every 1ms\n  OCR0A = 249;\n\n  // Enable Timer0 output compare interrupt\n  TIMSK0 |= (1 << OCIE0A);\n}\n\n// Define the Timer0 output compare interrupt service routine\nISR(TIMER0_COMPA_vect) {\n  // Insert your code here to handle the Timer0 interrupt\n}\n```\n\n#### Timer1 Setup\n```scss\nvoid setup_timer1() {\n  // Set the Timer1 control registers to CTC mode with a prescaler of 64\n  TCCR1B |= (1 << WGM12) | (1 << CS11) | (1 << CS10);\n  TCCR1B &= ~(1 << CS12);\n\n  // Set the Timer1 output compare register to trigger an interrupt every 1ms\n  OCR1A = 249;\n\n  // Enable Timer1 output compare interrupt\n  TIMSK1 |= (1 << OCIE1A);\n}\n\n// Define the Timer1 output compare interrupt service routine\nISR(TIMER1_COMPA_vect) {\n  // Insert your code here to handle the Timer1 interrupt\n}\n```\n\n#### Timer2 Setup\n```scss\nvoid setup_timer2() {\n  // Set the Timer2 control registers to CTC mode with a prescaler of 64\n  TCCR2A |= (1 << WGM21);\n  TCCR2B |= (1 << CS22) | (1 << CS21);\n  TCCR2B &= ~(1 << CS20);\n\n  // Set the Timer2 output compare register to trigger an interrupt every 1ms\n  OCR2A = 249;\n\n  // Enable Timer2 output compare interrupt\n  TIMSK2 |= (1 << OCIE2A);\n}\n\n// Define the Timer2 output compare interrupt service routine\nISR(TIMER2_COMPA_vect) {\n  // Insert your code here to handle the Timer2 interrupt\n}\n```\n\n#### Setup timer1 in PWM\n```scss\nvoid setup_pwm_timer1(){\n        // Set PB1 as output pin\n    DDRB |= (1 << PB1);\n\n    // Set timer1 to PWM mode\n    TCCR1A |= (1 << COM1A1) | (1 << WGM11);\n\n    // Set prescaler to 64 and start the timer\n    TCCR1B |= (1 << CS11) | (1 << CS10);\n    \n    //Set duty cycle to 0% so it doesn't make any noise initially\n    OCR0A = 0;\n}\n```\n\n\n\n\n\n\n### Analog to Digital (ADC)\n#### Setup\n```scss\nvoid setup_adc() {\n  // Set the ADC reference voltage to AVCC with external capacitor at AREF pin\n  ADMUX |= (1 << REFS0);\n  ADMUX &= ~(1 << REFS1);\n\n  // Set the ADC clock prescaler to 128 (for 125kHz sampling rate @ 16MHz system clock)\n  ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);\n\n  // Enable ADC interrupt\n  ADCSRA |= (1 << ADIE);\n\n  // Enable ADC and start first conversion\n  ADCSRA |= (1 << ADEN) | (1 << ADSC);\n}\n\n// Define the ADC conversion complete interrupt service routine\nISR(ADC_vect) {\n  // Read the ADC result from the low and high registers\n  uint16_t result = ADC;\n\n  // Insert your code here to handle the ADC result\n}\n```\n\n#### Read A0\n```scss\nuint16_t read_analog_input() {\n  // Set the ADC input channel to A0\n  ADMUX &= ~((1 << MUX3) | (1 << MUX2) | (1 << MUX1) | (1 << MUX0));\n\n  // Start a single conversion\n  ADCSRA |= (1 << ADSC);\n\n  // Wait for the conversion to complete\n  while (ADCSRA & (1 << ADSC));\n\n  // Read the ADC result from the low and high registers\n  uint16_t result = ADC;\n\n  return result;\n}\n```\n\n#### Alternate ADC setup Function (Free running)\n```scss\nvoid setupAtoD() {\n\n\tADMUX = 0b01100000; //Reference AVcc, left adjust, Channel ADC0\n    \n    ADCSRA = 0b10000110; //Enable, no start, no auto, no interrupt, scale = 64\n    \n    ADCSRB = 0b00000000; //Free running mode\n    \n\tDIDR0 = 0b00000001; //Disable digital input buffer on ADC0\n    \n    ADCSRA |= 0b00100000;  //Run first conversion\n\n} \n```\n\n### Interrupts\n\n\n\n### Inputs and De-Bouncing\n#### Simple Debounce Code\n```scss\nnew_button = PINC;                              //Current state of PINC\n\n    uint8_t changed_bits = old_button^new_button;   //Calculate which bits have changed\n\n    if (changed_bits & A1) {                        //Check if button change has occurred on A1\n        if ((debounce_timer - A1_time) > 3) {       //If 30 ms has passed\n            A1_time = debounce_timer;               //Set A1_time to equal the value of de-bounce (zero it)\n            if ((old_button & ~new_button) & A1) {  //If there is still a change in A1\n                button_flags |= A1;                 //Set flag to high so it can be processed in loop\n            }\n            old_button = new_button;                //Change the old button state to the new button state\n        }\n\n    }\n```\n\n# Python\n\n# Arduino (C mixed with C++ sprinkled with libraries)\n\n# C Sharp\n\n# C++\n\n",
    "Resources and Links.md": "# Linear Algebra\n\n| Name            | Link                                              |  File   |\n| --------------- | ------------------------------------------------- | --- |\n| Algebra Toolbox | https://www.math.odu.edu/~bogacki/cgi-bin/lat.cgi |  N/A| \n\n# Mechatronics\n\n| Name                                                 | Link                                                                                                            | File | \n| ---------------------------------------------------- | --------------------------------------------------------------------------------------------------------------- | --- |\n| Introduction to Mechatronics and Measurement Systems | https://agromet.sanru.ac.ir/wp-content/uploads/2018/11/Introduction-to-Mechatronics-and-Measurement-Systems.pdf | [[Resources/Attachments/Introduction-to-Mechatronics-and-Measurement-Systems.pdf]]|\n# Logic Circuits and Combinational Logic\n\n| Name                                                       | Link                                                                                          | File                                                                                     |\n| ---------------------------------------------------------- | --------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- |\n| Introduction to Logic Circuits and Logic Design in Verilog | https://link-springer-com.simsrad.net.ocs.mq.edu.au/content/pdf/10.1007/978-3-030-13605-5.pdf | [[Resources/Attachments/Introduction-to-Logic-Circuits-And-Logic-Design-In-Verilog.pdf]] |\n| Karnaugh Map Builder and Solver                            | https://ictlab.kz/extra/Kmap/                                                                 | N/A                                                                                      |\n|                                                            |                                                                                               |                                                                                          |\n\n\n# Arduino/ELEGOO PDFS Libraries and Tutorials\n\n| Name                                   | Link | File                                                                                                        |\n| -------------------------------------- | ---- | ----------------------------------------------------------------------------------------------------------- |\n| UNO R3, MEGA, NANO DRIVER FAQ          | N/A  | [[Resources/Attachments/ELEGOO UNO R3 Starter Kit/UNO R3, MEGA, NANO DRIVER FAQ.pdf]]                       |\n| The Most Complete Starter Kit Tutorial | N/A  | [[Resources/Attachments/ELEGOO UNO R3 Starter Kit/The Most Complete Starter Kit for UNO V1.0.19.09.18.pdf]] |\n| Starter Kit Code Bank                  | N/A     | **Find Files in Attachments**                                                            |\n\n# Raspberry Pi\n| Name           | Link                                          | File |     |     |     |\n| -------------- | --------------------------------------------- | ---- | --- | --- | --- |\n| Splinky RP2040 | https://github.com/plut0nium/0xB2#programming | N/A  |     |     |     |\n\n# Circuits\n| Name                | Link                             | File |\n| ------------------- | -------------------------------- | ---- |\n| Circuit Sim Falstad | https://www.falstad.com/circuit/ | N/A  |\n|                     |                                  |      |\n\n# Signals and Systems\n| Name                                                                                                        | Link                                                                                                                                                                                                        | File |\n| ----------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---- |\n| Iian Collings' Website                                                                                      | https://www.iaincollings.com                                                                                                                                                                                | N/A  |\n| Fourier Transforms of Sampled Signals                                                                       | https://class.ece.uw.edu/235dl/EE235/Project/lesson19/lesson19.html                                                                                                                                         | N/A  |\n| Signals and Systems  S. Haykin and B. Van Veen, John Wiley & Sons, second edition. 2003                     | https://studentshubblog.files.wordpress.com/2014/12/signals-and-systems-simon-haykin.pdf                                                                                                                    |      |\n| Signals and Systems A. V. Oppenheim and A. S. Willsky with S. H. Nawab, Prentice-Hall, second edition, 1997 | https://eee.guc.edu.eg/Courses/Communications/COMM401%20Signal%20&%20System%20Theory/Alan%20V.%20Oppenheim,%20Alan%20S.%20Willsky,%20with%20S.%20Hamid-Signals%20and%20Systems-Prentice%20Hall%20(1996).pdf |      |\n|                                                                                                             |                                                                                                                                                                                                             |      |\n",
    "File Repositories and Archives.md": "# Emulation\n| Name             | Contents                     | Link                                |\n| ---------------- | ---------------------------- | ----------------------------------- |\n| Myrient          | Games and BIOS files         | https://myrient.erista.me/          |\n| PS3 IRD Database | IRD files for decrypting PS3 | https://ps3.aldostools.org/ird.html |\n|                  |                              |                                     |\n\n"
  },
  "Distilled Notes": {
    "Kirchhoff's Law.md": "",
    "Transformers (Not the funny robot).md": "\n[[Transformers (Not the funny robot)]] is an AC static device used to change low voltage/high voltage AC system into high voltage/low voltage AC system without changing the frequency at almost 100% efficiency.\n\n1. Transfers electric power from one circuit to another without any electrical connection.\n2. Does so without changing frequency.\n3. It does this by generating flux inside of a core typically or some other medium.\n4. Where the two electrics circuits are in mutual inductive influence from one another.\n\n## Principle of Operation\nIt is based on principle of MUTUTAL INDUCTION. An EMF is induced in a coil when flux in the neighbouring coil changes.\n![[Attachments/Pasted image 20230725221237.png]]\n**Mathematical Induction:**\n*[[Faraday's Law]]:*\n$$\\epsilon = \\frac{d \\phi}{dt}$$\n\n*[[Lenz's Law]]* (for N turns)\n$$\\epsilon = - N\\frac{d \\phi}{dt}$$\n$$\\epsilon = -N \\frac{\\phi_{2}-\\phi_{1}}{t}$$\nFlux changes from phi 1 and phi 2. In time t.\n\n*Working principle:*\n1. When current in the primary coil changes being alternating in nature, a changing magnetic field is produced.\n2. This changing magnetic field gets associated with the secondary through the soft iron core.\n3. Hence magnetic flux linked with the secondary coil changes.\n4. Which induces EMF in the secondary coil.\n\n## EMF Equation of a Transformer\n![[Attachments/Pasted image 20230726184500.png]]\nlet:\n$N_1$  = Number of Primary turns\n$N_2$ = Number of Secondary turns\n$\\Phi_m$  = Maximum flux in core (**Webers**)\n$f$ = Frequency of AC input (Hz)\n\nThe above graph shows us that flux increases from its minimum to its maximum ($\\Phi_m$) in a quarter of a cycle ($\\frac{1}{4f}$ Seconds ).\n$$\\text{This means our Average rate of change (flux) }= \\frac{\\Phi_{m}}{\\frac{1}{4f}}$$\n$$= 4f\\Phi_{m}\\text{ Wb/s or Volts}$$\n$$\\text{Average e.m.f/turn} = 4f\\Phi_{m} \\text{Volt}$$\n\nSince flux varies sinusoidally, then r.m.s value of *induced emf* can be calculated by multiplying the average value with form factor.\n$$\\text{Form Factor} = \\frac{\\text{r.m.s value}}{\\text{average value}}=1.11$$\nNow rms value of the induced emf in the entire primary winding is this:\n$$E_{1}= 4.44 f N_{1}\\Phi_{m}=4.44fN_{1}B_{m}A$$\n\n## Core Types\n![[Attachments/Pasted image 20230726190438.png]]\nWindings are wrapped around the two sides of a laminated square core.\n![[Attachments/Pasted image 20230726190542.png]]\n```ad-note\nHigh voltage conductors have a lower cross section than low voltage conductors as the low voltage conductors have a higher current. This means the cross section of the low voltage conductors needs to be larger to allow for greater current flow and to prevent overheating/melting.\n\n```\n![[Attachments/Pasted image 20230726191021.png]]\nCores are laminated to reduce Eddy Currents which contribute highly to losses.\\\n*Laminated slices can range from 3mm to less.*\n\n### Shell Type Transformer/Sandwich Windings\n![[Attachments/Pasted image 20230726193431.png]]\nWindings are both wrapped around the centre limb of the core.\n![[Attachments/Pasted image 20230726194830.png]]\n- The HV and LV windings are split into a number of sections - HV lines between two LV windings\n- In sandwich coils leakage can be controlled.\n\n## Ideal Transformers\n- **Zero Leakage flux:**\n\t- Flux produced by the primary AND secondary currents are confined within the core\n- **The windings have no resistance:**\n\t- Induced voltages equal applied voltages\n- **The core has infinite permeability:**\n\t- Reluctance of the core is zero\n\t- Negligible current is required to establish magnetic flux\n- **Loss-Less magnetic core**\n\t- No Hysteresis or eddy currents.\n![[Attachments/Pasted image 20230726200400.png]]\nWhere:\n$V_1$= Supply Voltage\n$V_2$ = Output Voltage\n$I_{m}$ = Magnetising Current\n$E_{1}$ = Self induced emf\n$I_{1}$ = No Load Input Current\n$I_{2}$ = Output current\n$E_{2}$ = Mutually induced emf\n\n![[Attachments/Pasted image 20230726202431.png]]\n$$\\frac{V_p}{V_{s}}= \\frac{N_{p}}{N_{s}}=\\frac{I_{s}}{I_{p}}$$\n$$\\text{Power}_\\text{prim} = \\text{Power}_\\text{sec}$$\n$$\\frac{E_1}{N_{1}}= \\frac{E_{2}}{N_{2}} = 4.44f\\Phi_{m}$$\n\n\n## Phasor Diagrams\n\n### No Load\n![[Attachments/Pasted image 20230727153526.png]]\n(a) is a transformer with no load.\n(b) Is a phasor diagram of a loadless transformer. Plotted on a $\\phi$ axis.\nPrimary current $I_{0}$ is represented as a vector.\n#todo \n### Transformer on Load - Assuming no voltage drop in the winding\n![[Attachments/Pasted image 20230727154124.png]]\n![[Attachments/Pasted image 20230727154137.png]]\n\nThe phasor diagram for of a transformer assumes:\n1. No voltage drop in the winding\n2. Equal primary and secondary turns\n\n## Equivalent Circuit of a Transformer\n![[Attachments/Pasted image 20230727154515.png]]\n$$R_{0}= \\frac{V_{1}}{I_{c}}$$\n$$X_{0}= \\frac{V_{1}}{I_{m}}$$\n$$I_{m}= I_{0}\\sin\\phi_{0} = \\text{Magnetizing Component}$$\n$$I_{c}= I_{0}\\cos\\phi_{0}= \\text{Active Component}$$\n\n![[Attachments/Pasted image 20230727155256.png]]\nWe can group inductors and resistors on primary and secondary sides. We can represent these with complex numbers.\n![[Attachments/Pasted image 20230727155405.png]]\n\n- The effect of circuit parameters shouldn't be changed while transferring the parameters from one side to another side.\n```ad-attention\nIt can be proved that a resistance of $R_{2}$ in sec. is equivalent to $\\frac{R_{2}}{k^{2}}$ will be denoted as $R_{2}'$ (ie. Equivalent sec. resistance w.r.t primary) which would have caused the same loss as $R_{2}'$ in the secondary.\n\n```\n\n\n$$I_{1}^{2}R'_{2}= I_{2}^{2}R_{2}$$\n$$R'_{2}=(\\frac{I_{2}}{I_{1}})^{2}R_{2}$$\n\n```ad-note\n$$R'_{2}=a^{2}R_{2}$$\n```\n\n$$a = \\frac{N_{1}}{N_{2}}= \\text{Turns Ratio}$$\n\n## Approximate Equivalent Circuit\nSince the no load current is approx. 1% of the full load current, it can be neglected\n![[Attachments/Pasted image 20230727192000.png]]\n\n## Transformer Tests\nThe performance of a transformer can be calculated with an equivalent circuit.\nThe four main parameters are:\n1. $R_{01}$ is the Primary Resistance\n2. $X_{01}$ is the Primary equivalent leakage reactance\n3. $B_{0}$ Magnetising susceptance (Or Reactance $X_{0}$)\n4. $G_{0}$ is Core Loss Conductance (Or Resistance $R_{0}$)\n\nThe above constants can be easily determined by two tests.\n- Open Circuit test (OC test / No load test)\n- Short Circuit test (SC test / Impedance test)\nThese are both economical and convenient.\n\n### Open Circuit Test\nWe **open circuit the secondary winding**, and connect the primary winding to **full rated voltage**\n![[Attachments/Pasted image 20230727195125.png]]\nUsually conducted on the HV side. We use it to find:\n1. No load loss / Core loss\n2. No load current $I_{0}$ which is helpful in finding $G_{0}$ (or $R_{0}$) and $B_{0}$ (or $X_{0}$)\n$$Coreloss = W_{oc}= V_{0}I_{0}\\cos\\phi_{0}$$\n$$\\cos\\phi_{0} = \\frac{W_{oc}}{V_{0}I_{0}}$$\n\n$$I_{c} \\text{ or } I_{w}= I_{0}\\cos \\phi_{0}$$\n$$I_{m}\\text{ or }I_{\\mu}= I_{0}\\sin \\phi_{0} = \\sqrt{I^{2}_{0}-I^{2}_{w}}$$\n$$I_{0}= V_{0}Y_{0} \\therefore Y_{0}=\\frac{I_{0}}{V_{0}}$$\n\n\n$$R_{0}= \\frac{V_{0}}{I_{w}}$$\n$$X_{0}= \\frac{V_{0}}{I\\mu}$$\n$$G_{0}= \\frac{I_{w}}{V_{0}}$$\n$$B_{0}= \\frac{I\\mu}{V_{0}}$$\n\n$$W_{oc}= V^{2}_{0}G_{0}$$\n$$\\therefore \\text{Exciting Conductance }G_{0}= \\frac{W_{oc}}{V^{2}_{0}}$$\n$$\\text{Exciting susceptance } B_{0}= \\sqrt{Y^{2}_{0}-G^{2}_{0}}$$\n\n### Short-Circuit Test\n**Secondary terminals are short circuited** and the *primary terminals are connected to a fairly low-voltage source.*\nThe input voltage is adjusted until the current in the short circuited windings **is equal to its rated value.** The *input voltage current and power is measured.*\n![[Attachments/Pasted image 20230727203009.png]]\nUsually conducted on LV side, we're looking for it.\n- Full load copper loss - to pre determine the efficiency\n- $Z_{01}\\text{ or }Z_{02};X_{01}\\text{ or }X_{02};R_{01}\\text{ or }R_{02}$ to determine the voltage regulation\n![[Attachments/Pasted image 20230727203411.png]]\nfull load cu loss = $W_{sc} = I^{2}_{sc}R_{01}$\n$Z_{01}= \\frac{V_{sc}}{I_{sc}}$\n$\\therefore X_{01}=\\sqrt{Z_{01}^{2} - R^{2}_{01}}$\n\n## Transformer Voltage Regulation and Efficiency\n- The output voltage of any given transformer varies with the load, even if the input voltage is constant. \n- This is because real transformers have a series impedance in the circuit (above see $X_{01}$). \n- Full load Voltage Regulation is a quantity that compares the output voltage at no load with the output voltage at full load. Defined as:\n$$\\text{Regulation Up} = \\frac{V_{S,nl}-V_{S,fl}}{V_{S,fl}}*\\text{100}$$\n$$\\text{Regulation Up} = \\frac{V_{S,nl}-V_{S,fl}}{V_{S,nl}}*\\text{100}$$\n```ad-important\n$$\\text{At no load: }k=\\frac{V_{s}}{V_{p}}$$\n```\n$$\\text{Regulation up (no load) }= \\frac{(V_{p}/k)-V_{S,fl}}{V_{S,fl}}*100$$\n$$\\text{Regulation up (no load) }= \\frac{(V_{p}/k)-V_{S,fl}}{V_{S,nl}}*100$$\n\n**Ideal transformer our VR = 0%**\n\n\n### Voltage Regulation of a Transformer\n$$\\text{Voltage regulation} = \\frac{\\text{no load voltage - full load voltage}}{\\text{no load voltage}}$$\n$$\\text{Since } \\frac{V_{s}}{V_{p}}= \\frac{N_{s}}{N_{p}}$$\n$$\\text{Secondary voltage on no load } V_{2}= V_{1}(\\frac{N_{2}}{N_{1}})$$\n$V_{2}$ is a secondary terminal voltage on full load\n\n$$\\text{Voltage regulation} = \\frac{V_{1}(\\frac{N_{2}}{N_{1}})-V_{2}}{V_{1}(\\frac{N_{2}}{N_{1}})}$$\n\n**Voltage:**\nIn terms of *secondary* values:\n$$\\text{Regulation:} = \\frac{V_{2,0} - V_{2}}{V_{2,0}}=\\frac{I_{2}R_{02}\\cos \\phi_{2}\\pm I_{2}X_{02}\\sin \\phi_{2}}{V_{2,0}}$$\n\nIn terms of *primary* values:\n$$\\text{Regulation:} = \\frac{V_{1} - V'_{2}}{V_{1}}=\\frac{I_{1}R_{01}\\cos \\phi_{1}\\pm I_{1}X_{01}\\sin \\phi_{1}}{V_{1}}$$\nWhere + for lagging and - for leading\n\n\n## Transformer Phasor Diagram\nIgnoring the excitation of the branch (since current flowing through the branch to be small) more consideration is given to the series impedances ($R_{eq}+jX_{eq})$\n**Voltage regulation depends on magnitude of series of impedances and the phase angle of the current flowing through the transformer.**\n\nPhasor diagrams will determine the effects of these factors on the voltage regulation. A phasor diagram consist of current and voltage vectors.\nAssume that the reference phasor is the secondary voltage, $V_{s}$ . Therefore the reference phasor will have an angle of 0.\n\n*Based on the equivalent circuit, apply [[Kirchhoff's Law]]*\n$$\\frac{V_{p}}{k}=V_{s}+R_{eq}I_{s}+jX_{eq}I_{s}$$\n\n![[Attachments/Pasted image 20230727220552.png]]\nFor lagging loads, the vertical components of $R_{eq}$ and $X_{eq}$ will partially cancel each other out. Due to that, the angle of $\\frac{V_{p}}{a}$ will be very small, hence we can assume that $\\frac{V_{p}}{k}$ is horizontal.\n\n## Transformer Efficiency\nEfficiency is defined as:\n$$\\eta=\\frac{P_{out}}{P_{in}}*100$$\n$$\\eta = \\frac{P_{out}}{P_{out}+P_{loss}}*100$$\n\nTypes of losses:\n- Copper $I^{2}R$ losses\n- Hysteresis losses\n- Eddy current losses\nTherefore efficiency can can be calculated:\n$$\\eta = \\frac{V_{s}I_{s}\\cos \\theta}{P_{Cu}+P_{Core}+V_{s}I_{s}\\cos \\theta} * 100$$\n\n### Losses in a Transformer\nCore and iron losses:\n$$\\text{Hysteresis Loss } W_{h}= \\eta B^{1.6}_{max}fV \\text{ Watts}$$\n$$\\text{Eddy Current Loss } W_{e}=\\eta B^{2}_{max}f^{2}t^{2}\\text{ Watts}$$\n\nCopper loss:\n$$\\text{Total Cu Loss} = I_{1}^{2}R_{1}+I_{2}^{2}R_{2}= I_{1}^{2}R_{01}+I_{2}^{2}R_{02}$$\n\n**Conditions for maximum efficiency:**\n![[Attachments/Pasted image 20230727222932.png]]\n![[Attachments/Pasted image 20230727222958.png]]\n\n**All day efficiency:**\n![[Attachments/Pasted image 20230727223035.png]]\n",
    "Amperes Circuital Law.md": "\n# Magnetic Circuits\n### Amperes Law: Current Through Conductor\nCurrent $(i)$ flowing through a conductor will induce a magnetic field with strength $(H)$ at radius $(r)$ .\n![[Attachments/Pasted image 20230724205610.png]]\n$$\\int H.dl = \\sum i = Ni$$\n$$H = \\frac{i}{2\\pi r}$$\nWhere r is the distance of the point from the conductor\n\n### Amperes Law: Coil around a core\n![[Attachments/Pasted image 20230724210132.png]]\n\n$$H = \\frac{Ni}{2\\pi r}$$\n"
  },
  "Daily Notes": {
    "27-07-2023.md": "#todo Take a look at the books required for my units. In particular MTRN3060 MTRN3026 ELEC2005",
    "29-06-2023.md": "# Obsidian Streamlining\nDabi's Video: https://www.youtube.com/watch?v=WqKluXIra70\n## Zettelkasten\n**Original:**\n1. Fleeting note - Rough and raw, like scrap paper and pen\n2. Literature Note - Notes for research - lots of info - articles, books, uni notes, ect\n4. Permanent Note - A concept summarised\n\n**Updated:**\n1. **Daily Note** - Rough notes for taking general info, short term - good for putting thoughts away\n2. **Literature Note** - All detail (uni slides) and all info required - For collection\n3.  **Practical Notes** - Notes that are on meetings, projects etc. Canvas boards are good for this\n4. **Distilled Notes** - Concepts summarised in a sentence or paragraph - Its ok to have a lot of these. Memory is cheap but brainspace is not - Use these to link and build, these are our building blocks\n\n## Footnotes\n\nSimple Footnote[^1]\n\n[^1]: This is a footnote\n\nUseful in preview mode only\n\nBigger footnote [^bignote]\n\n[^bignote]: This is the content for my bignote\nits still here\n\nUse full for multiple lines\n\n## File backups\nInvestigate alternative ways to backup my obsidian notes (dropbox, github?)\n\n## Sync With Articles\nReadwise\nZotero\nInstaPaper\nRoam Research",
    "30-07-2023.md": "Car Vin:\nWVWZZZ1J22AU007769",
    "20-07-2023.md": "",
    "09-08-2023.md": ""
  }
}